{
  "tools": [
    {
      "name": "calendar-add_event_on_calendar",
      "description": "\nAdd an event on Google calendar\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "req": {
            "$ref": "#/$defs/AddCalendarEventRequest"
          }
        },
        "required": [
          "req"
        ],
        "$defs": {
          "AddCalendarEventRequest": {
            "properties": {
              "start": {
                "description": "(inclusive) start time of the event. start time of the first instance for a recurring event. example: '2011-06-03T10:00:00-07:00'",
                "title": "Start",
                "type": "string"
              },
              "end": {
                "description": "(exclusive) end time of the event. end time of the first instance for a recurring event. example: '2011-06-03T10:00:00-07:00'",
                "title": "End",
                "type": "string"
              },
              "summary": {
                "default": "",
                "description": "Title of the event",
                "title": "Summary",
                "type": "string"
              },
              "location": {
                "deault": "",
                "description": "Geographic location of the event as free-form text. Optional",
                "title": "Location",
                "type": "string"
              },
              "description": {
                "default": "",
                "description": "Description of the event. Can contain HTML. Optional.",
                "title": "Description",
                "type": "string"
              },
              "recurrence": {
                "default": [],
                "description": "List of RRULE lines for a recurring event, as specified in RFC5545. example: ['RRULE:FREQ=DAILY;COUNT=2']",
                "items": {},
                "title": "Recurrence",
                "type": "array"
              },
              "attendees": {
                "default": [],
                "description": "List of attendees of the event. example: [{'email':'john@pallassecurity.com', 'email':'jane@pallassecurity.com'}]",
                "items": {},
                "title": "Attendees",
                "type": "array"
              }
            },
            "required": [
              "start",
              "end",
              "location"
            ],
            "title": "AddCalendarEventRequest",
            "type": "object"
          }
        },
        "title": "add_event_on_calendarArguments"
      }
    },
    {
      "name": "calendar-search_events_on_calendar",
      "description": "\nSearch for all events on Google Calendar\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "req": {
            "$ref": "#/$defs/SearchCalendarRequest"
          }
        },
        "required": [
          "req"
        ],
        "$defs": {
          "SearchCalendarRequest": {
            "properties": {
              "query": {
                "default": "",
                "description": "Free text search terms to find events that match these terms in the following fields: summary, description, location",
                "title": "Query",
                "type": "string"
              },
              "max_results": {
                "default": 10,
                "description": "Maximum number of events returned on one result page",
                "title": "Max Results",
                "type": "integer"
              },
              "time_max": {
                "deafault": "",
                "description": "Upper bound (exclusive) for an event's start time to filter by. example: '2011-06-03T10:00:00-07:00'",
                "title": "Time Max",
                "type": "string"
              },
              "time_min": {
                "deafault": "",
                "description": "Lower bound (exclusive) for an event's start time to filter by. example: '2011-06-03T10:00:00-07:00'",
                "title": "Time Min",
                "type": "string"
              },
              "page_token": {
                "deafault": "",
                "description": "Token specifying which result page to return. Optional.",
                "title": "Page Token",
                "type": "string"
              }
            },
            "required": [
              "time_max",
              "time_min",
              "page_token"
            ],
            "title": "SearchCalendarRequest",
            "type": "object"
          }
        },
        "title": "search_events_on_calendarArguments"
      }
    },
    {
      "name": "aws-get_ec2_instances",
      "description": "\nGet all EC2 instances with their details.\n\nReturns:\n    List of EC2 instances with their configurations\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_ec2_instancesArguments"
      }
    },
    {
      "name": "aws-get_kms_keys",
      "description": "\nList all KMS keys and their policies.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_kms_keysArguments"
      }
    },
    {
      "name": "aws-get_guardduty_findings",
      "description": "\nGet GuardDuty findings if GuardDuty is enabled.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_guardduty_findingsArguments"
      }
    },
    {
      "name": "aws-get_organization_accounts",
      "description": "\nList all accounts in the AWS Organization.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_organization_accountsArguments"
      }
    },
    {
      "name": "aws-switch_role",
      "description": "\nSwitch to a new AWS IAM role by assuming the given role ARN.\n\nArgs:\n    role_arn: The ARN of the role to assume.\n    session_name: The session name for the assumed role (default: MCPAssumeRoleSession)\n\nReturns:\n    A dict indicating success or error.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "role_arn": {
            "title": "Role Arn",
            "type": "string"
          },
          "session_name": {
            "default": "MCPAssumeRoleSession",
            "title": "Session Name",
            "type": "string"
          }
        },
        "required": [
          "role_arn"
        ],
        "title": "switch_roleArguments"
      }
    },
    {
      "name": "aws-get_network_acls",
      "description": "\nGet all VPC network ACLs.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_network_aclsArguments"
      }
    },
    {
      "name": "aws-get_ebs_volumes",
      "description": "\nGet all EBS volumes and their encryption status.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_ebs_volumesArguments"
      }
    },
    {
      "name": "aws-get_inspector_findings",
      "description": "\nList all Inspector findings.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_inspector_findingsArguments"
      }
    },
    {
      "name": "aws-get_service_costs",
      "description": "\nGet costs for a specific AWS service.\n\nArgs:\n    start_date: Start date in YYYY-MM-DD format\n    end_date: End date in YYYY-MM-DD format\n    service: AWS service name (e.g., \"Amazon EC2\", \"Amazon S3\")\n\nReturns:\n    Cost breakdown for the specified service\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          },
          "service": {
            "title": "Service",
            "type": "string"
          }
        },
        "required": [
          "start_date",
          "end_date",
          "service"
        ],
        "title": "get_service_costsArguments"
      }
    },
    {
      "name": "aws-get_daily_costs",
      "description": "\nGet daily cost breakdown.\n\nArgs:\n    start_date: Start date in YYYY-MM-DD format\n    end_date: End date in YYYY-MM-DD format\n\nReturns:\n    Daily cost breakdown by service\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "start_date": {
            "title": "Start Date",
            "type": "string"
          },
          "end_date": {
            "title": "End Date",
            "type": "string"
          }
        },
        "required": [
          "start_date",
          "end_date"
        ],
        "title": "get_daily_costsArguments"
      }
    },
    {
      "name": "aws-get_security_hub_findings",
      "description": "\nList all Security Hub findings.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_security_hub_findingsArguments"
      }
    },
    {
      "name": "aws-get_access_analyzer_findings",
      "description": "\nList Access Analyzer findings.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_access_analyzer_findingsArguments"
      }
    },
    {
      "name": "aws-get_iam_roles",
      "description": "\nGet all IAM roles (service accounts) with their details.\n\nReturns:\n    List of IAM roles with their details\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_iam_rolesArguments"
      }
    },
    {
      "name": "aws-switch_to_own_role",
      "description": "\nSwitch back to the original credentials (access key/secret or SSO), removing any assumed role session.\nReturns a dict indicating success or error.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "switch_to_own_roleArguments"
      }
    },
    {
      "name": "aws-get_bucket_policies",
      "description": "\nGet all S3 bucket policies and ACLs.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_bucket_policiesArguments"
      }
    },
    {
      "name": "aws-get_config_rules",
      "description": "\nList all AWS Config rules and their compliance status.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_config_rulesArguments"
      }
    },
    {
      "name": "aws-get_config_compliance_summary",
      "description": "\nGet AWS Config compliance summary by resource type.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_config_compliance_summaryArguments"
      }
    },
    {
      "name": "aws-get_iam_users",
      "description": "\nGet all IAM users (service accounts) with their details.\n\nReturns:\n    List of IAM users with their details\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_iam_usersArguments"
      }
    },
    {
      "name": "aws-get_cloudtrail_events",
      "description": "\nGet CloudTrail events with optional filtering.\n\nArgs:\n    start_time: Start time in ISO format (YYYY-MM-DDTHH:MM:SS)\n    end_time: End time in ISO format (YYYY-MM-DDTHH:MM:SS)\n    event_name: Optional event name to filter by\n    username: Optional username to filter by\n    ip_address: Optional IP address to filter by\n\nReturns:\n    List of CloudTrail events with their details\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "start_time": {
            "title": "Start Time",
            "type": "string"
          },
          "end_time": {
            "title": "End Time",
            "type": "string"
          },
          "event_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Event Name"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Username"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ip Address"
          }
        },
        "required": [
          "start_time",
          "end_time"
        ],
        "title": "get_cloudtrail_eventsArguments"
      }
    },
    {
      "name": "aws-get_security_groups",
      "description": "\nGet all EC2 security groups and their rules.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_security_groupsArguments"
      }
    },
    {
      "name": "aws-get_monthly_costs",
      "description": "\nGet monthly cost breakdown.\n\nArgs:\n    year: Year (e.g., 2024)\n    month: Month (1-12)\n\nReturns:\n    Monthly cost breakdown by service\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "year": {
            "title": "Year",
            "type": "integer"
          },
          "month": {
            "title": "Month",
            "type": "integer"
          }
        },
        "required": [
          "year",
          "month"
        ],
        "title": "get_monthly_costsArguments"
      }
    },
    {
      "name": "aws-get_iam_user_access_keys",
      "description": "\nList all IAM users, their access keys, and last used info.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_iam_user_access_keysArguments"
      }
    },
    {
      "name": "aws-get_iam_users_without_mfa",
      "description": "\nList IAM users who do not have MFA enabled.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_iam_users_without_mfaArguments"
      }
    },
    {
      "name": "aws-get_tagged_resources",
      "description": "\nList resources with a specific tag.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "tag_key": {
            "default": null,
            "title": "Tag Key",
            "type": "string"
          },
          "tag_value": {
            "default": null,
            "title": "Tag Value",
            "type": "string"
          }
        },
        "title": "get_tagged_resourcesArguments"
      }
    },
    {
      "name": "aws-get_iam_role_trust_policies",
      "description": "\nList all IAM roles, their trust policies, and last used info.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_iam_role_trust_policiesArguments"
      }
    },
    {
      "name": "drata-get_policies",
      "description": "\nRetrieve security and compliance policies from your Drata organization.\n\nThis endpoint returns all policies configured in Drata, including security policies,\ncompliance procedures, and organizational guidelines with their approval status.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing policy data with fields like id, name, description,\n    category, status, approval_date, version, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_policiesArguments"
      }
    },
    {
      "name": "drata-get_user_policies",
      "description": "\nRetrieve user policy assignments from your Drata organization.\n\nThis endpoint returns information about which policies are assigned to which users,\nincluding acknowledgment status and compliance tracking.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing user policy data with fields like id, user_id,\n    policy_id, assigned_date, acknowledged, status, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_user_policiesArguments"
      }
    },
    {
      "name": "drata-test_connection",
      "description": "\nTest the connection to the Drata API.\n\nThis endpoint tests the API connection and URL construction by making a request\nto the user-identities/infrastructure endpoint.\n\nReturns:\n    Dictionary containing the API response or error message.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "test_connectionArguments"
      }
    },
    {
      "name": "drata-get_company_info",
      "description": "\nGet company info.\n\nThis endpoint returns information about the company.\n\nReturns:\n    Dictionary containing company info.\n",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "title": "get_company_infoArguments"
      }
    },
    {
      "name": "drata-get_frameworks",
      "description": "\nRetrieve compliance frameworks from your Drata organization.\n\nThis endpoint returns information about compliance frameworks (SOC 2, ISO 27001,\nHIPAA, etc.) that your organization is working towards or has achieved.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing framework data with fields like id, name, description,\n    status, controls_count, completion_percentage, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_frameworksArguments"
      }
    },
    {
      "name": "drata-get_questionnaires",
      "description": "\nRetrieve compliance questionnaires from your Drata organization.\n\nThis endpoint returns information about compliance questionnaires, security\nassessments, and vendor questionnaires managed through Drata.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing questionnaire data with fields like id, name,\n    type, status, questions_count, completion_rate, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_questionnairesArguments"
      }
    },
    {
      "name": "drata-get_vendors",
      "description": "\nRetrieve vendor and third-party provider information from your Drata organization.\n\nThis endpoint returns data about vendors, suppliers, and third-party services\nincluding their risk assessments, compliance status, and contract information.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing vendor data with fields like id, name, category,\n    risk_level, compliance_status, contract_details, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_vendorsArguments"
      }
    },
    {
      "name": "drata-get_framework_requirements",
      "description": "\nList framework requirements for the primary workspace, with search and filter options.\n\nArgs:\n    page: Which page of data are you requesting (optional)\n    limit: How many items are you requesting (optional)\n    q: Filter data by searching for requirement name or description (optional)\n    frameworkSlug: Filter requirements on their framework slug (optional)\n    excludeIds: Exclude requirements by array of id (optional)\n    excludeControlId: Control id to be excluded (optional)\n    isInScope: Filter requirements if they are in/out of scope (optional)\n    isReady: Filter requirements if they are or not ready (optional)\n    isInScopeControls: Filter requirements if linked to controls in/out of scope (optional)\n    topic: Filter requirements on their topic (optional)\n    category: Filter requirements on their category (optional)\n\nReturns:\n    Dictionary containing framework requirements data.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          },
          "q": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Q"
          },
          "frameworkSlug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Frameworkslug"
          },
          "excludeIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Excludeids"
          },
          "excludeControlId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Excludecontrolid"
          },
          "isInScope": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Isinscope"
          },
          "isReady": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Isready"
          },
          "isInScopeControls": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Isinscopecontrols"
          },
          "topic": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Topic"
          },
          "category": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Category"
          }
        },
        "title": "get_framework_requirementsArguments"
      }
    },
    {
      "name": "drata-get_users",
      "description": "\nRetrieve users from your Drata organization.\n\nThis endpoint returns a list of all users in your Drata organization, including their\nroles, permissions, and account status. Useful for user management and access auditing.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing user data with fields like id, email, name, role, status, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_usersArguments"
      }
    },
    {
      "name": "drata-get_controls",
      "description": "\nRetrieve compliance controls from your Drata organization.\n\nThis endpoint returns all compliance controls configured in your Drata environment,\nincluding control descriptions, implementation status, test results, and evidence.\nEssential for compliance monitoring and audit preparation.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, maximum 50; values above 50 will be capped)\n    search: Search term to filter controls by name or description (optional)\n\nReturns:\n    Dictionary containing control data with fields like id, name, description, \n    framework, status, test_results, evidence, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          },
          "search": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Search"
          }
        },
        "title": "get_controlsArguments"
      }
    },
    {
      "name": "drata-get_control_external_evidence",
      "description": "\nGet all mapped external evidence to a control.\n\nThis endpoint returns all external evidence mapped to a control by control id, with optional pagination and exclusion.\n\nArgs:\n    id: Control ID (required, path parameter)\n    page: Which page of data are you requesting (optional)\n    limit: How many items are you requesting (optional)\n    excludeIds: Exclude external evidence by array of id (optional)\n\nReturns:\n    Dictionary containing external evidence data for the control.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          },
          "excludeIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Excludeids"
          }
        },
        "required": [
          "id"
        ],
        "title": "get_control_external_evidenceArguments"
      }
    },
    {
      "name": "drata-get_companies",
      "description": "\nRetrieve companies from your Drata organization.\n\nThis endpoint returns information about companies/organizations configured in Drata,\nincluding company details, settings, and configuration data.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing company data with fields like id, name, domain, settings, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_companiesArguments"
      }
    },
    {
      "name": "drata-get_risk_library",
      "description": "\nRetrieve risk library templates from your Drata organization.\n\nThis endpoint returns pre-defined risk templates and categories available\nin Drata's risk library for risk assessment and management.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing risk library data with fields like id, name,\n    category, description, default_severity, mitigation_guidance, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_risk_libraryArguments"
      }
    },
    {
      "name": "drata-get_events",
      "description": "\nRetrieve audit events and activity logs from your Drata organization.\n\nThis endpoint returns audit trail events, user activities, system changes,\nand other important events tracked by Drata for compliance purposes.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing event data with fields like id, type, timestamp,\n    user, description, resource_affected, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_eventsArguments"
      }
    },
    {
      "name": "drata-get_connections",
      "description": "\nRetrieve integration connections from your Drata organization.\n\nThis endpoint returns information about connected services, integrations,\nand data sources that Drata monitors for compliance purposes.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing connection data with fields like id, name, type,\n    status, last_sync, configuration, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_connectionsArguments"
      }
    },
    {
      "name": "drata-get_evidence_library",
      "description": "\nRetrieve evidence library items from your Drata organization.\n\nThis endpoint returns compliance evidence, documentation, screenshots,\nand other artifacts collected and stored in Drata's evidence library.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing evidence data with fields like id, name, type,\n    control_id, upload_date, file_size, description, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_evidence_libraryArguments"
      }
    },
    {
      "name": "drata-get_workspace_frameworks",
      "description": "\nList frameworks by workspace id.\n\nThis endpoint returns a list of frameworks for a given workspace id, with optional filters for pagination, search, and readiness.\n\nArgs:\n    id: Workspace ID (required, path parameter)\n    page: Which page of data are you requesting (optional)\n    limit: How many items are you requesting (optional)\n    q: Filter data by searching for framework names (optional)\n    excludeIds: Exclude frameworks by array of id (optional)\n    getAll: Return all frameworks? (optional)\n    isReady: Filter controls on if they are ready (optional)\n    isEnabled: Filter frameworks enabled (optional)\n\nReturns:\n    Dictionary containing frameworks data for the workspace.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "integer"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          },
          "q": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Q"
          },
          "excludeIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Excludeids"
          },
          "getAll": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Getall"
          },
          "isReady": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Isready"
          },
          "isEnabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Isenabled"
          }
        },
        "required": [
          "id"
        ],
        "title": "get_workspace_frameworksArguments"
      }
    },
    {
      "name": "drata-get_workspaces",
      "description": "\nList workspaces for an account.\n\nThis endpoint returns a list of workspaces for the account, with optional pagination and search.\n\nArgs:\n    page: Which page of data are you requesting (optional)\n    limit: How many items are you requesting (optional)\n    q: Filter data to search term (optional)\n\nReturns:\n    Dictionary containing workspace data.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          },
          "q": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Q"
          }
        },
        "title": "get_workspacesArguments"
      }
    },
    {
      "name": "drata-get_assets",
      "description": "\nRetrieve IT assets from your Drata organization.\n\nThis endpoint returns information about IT assets, infrastructure components,\nand resources tracked by Drata for compliance and security monitoring.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing asset data with fields like id, name, type,\n    owner, location, status, last_scanned, vulnerabilities, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_assetsArguments"
      }
    },
    {
      "name": "drata-get_devices",
      "description": "\nRetrieve device information from your Drata organization.\n\nThis endpoint returns information about employee devices, endpoints,\nand hardware tracked by Drata for security and compliance purposes.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing device data with fields like id, name, type,\n    owner, os_version, security_status, last_seen, compliance_status, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_devicesArguments"
      }
    },
    {
      "name": "drata-get_personnel",
      "description": "\nRetrieve personnel records from your Drata organization.\n\nThis endpoint returns information about personnel/employees tracked in Drata,\nincluding their roles, access levels, training status, and compliance-related data.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing personnel data with fields like id, name, email,\n    department, role, training_status, access_level, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_personnelArguments"
      }
    },
    {
      "name": "drata-get_risks",
      "description": "\nRetrieve identified risks from your Drata organization.\n\nThis endpoint returns information about identified security and compliance risks, their severity levels, mitigation strategies, and current status. (Uses /risk-management)\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional)\n    sort: Which type of sort (optional)\n    sortDir: Which direction to sort the data (optional)\n    q: Query to find a risks (optional)\n    applicable: Filter risks by applicable (optional)\n    status: Filter risks status (optional)\n    isScored: Filter risks by scored or not scored (optional)\n    treatmentPlan: Filter risks by treatment plan (optional)\n    categoriesIds: List of categories ids to find risks by (optional)\n    ownersIds: List of owners ids to find risks by (optional)\n    needsAttention: Filter risks by controls that are not ready (optional)\n    impact: Filter by the impact (optional)\n    likelihood: Filter by the likelihood (optional)\n    minScore: Filter by the range of scores (optional)\n\nReturns:\n    Dictionary containing risk data.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          },
          "sort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sort"
          },
          "sortDir": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Sortdir"
          },
          "q": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Q"
          },
          "applicable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Applicable"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Status"
          },
          "isScored": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Isscored"
          },
          "treatmentPlan": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Treatmentplan"
          },
          "categoriesIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Categoriesids"
          },
          "ownersIds": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Ownersids"
          },
          "needsAttention": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Needsattention"
          },
          "impact": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Impact"
          },
          "likelihood": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Likelihood"
          },
          "minScore": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Minscore"
          }
        },
        "title": "get_risksArguments"
      }
    },
    {
      "name": "drata-get_user_identities",
      "description": "\nRetrieve user identity information from your Drata organization.\n\nThis endpoint returns user identity data including authentication methods,\nidentity providers, and access credentials managed through Drata.\n\nArgs:\n    page: Page number for pagination (optional, starts at 1)\n    limit: Number of results per page (optional, default varies by endpoint)\n\nReturns:\n    Dictionary containing user identity data with fields like id, user_id,\n    identity_provider, authentication_method, status, etc.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Page"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Limit"
          }
        },
        "title": "get_user_identitiesArguments"
      }
    },
    {
      "name": "ms365-get-excel-range",
      "description": "get-excel-range",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "workbookWorksheet-id": {
            "type": "string",
            "description": "Path parameter: workbookWorksheet-id"
          },
          "address": {
            "type": "string",
            "description": "Excel range address (e.g., \"A1:B10\")"
          },
          "filePath": {
            "type": "string",
            "description": "Path to the Excel file in OneDrive"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "workbookWorksheet-id",
          "address",
          "filePath"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-planner-task",
      "description": "create-planner-task",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique identifier for an entity. Read-only."
              },
              "activeChecklistItemCount": {
                "anyOf": [
                  {
                    "type": "number",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Number of checklist items with value set to false, representing incomplete items."
              },
              "assigneePriority": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Hint used to order items of this type in a list view. The format is defined as outlined here."
              },
              "bucketId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Bucket ID to which the task belongs. The bucket needs to be in the plan that the task is in. It's 28 characters long and case-sensitive. Format validation is done on the service."
              },
              "checklistItemCount": {
                "anyOf": [
                  {
                    "type": "number",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Number of checklist items that are present on the task."
              },
              "completedDateTime": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Read-only. Date and time at which the 'percentComplete' of the task is set to '100'. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
              },
              "conversationThreadId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Thread ID of the conversation on the task. This is the ID of the conversation thread object created in the group."
              },
              "createdDateTime": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Read-only. Date and time at which the task is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
              },
              "dueDateTime": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Date and time at which the task is due. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
              },
              "hasDescription": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Read-only. Value is true if the details object of the task has a nonempty description and false otherwise."
              },
              "orderHint": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Hint used to order items of this type in a list view. The format is defined as outlined here."
              },
              "percentComplete": {
                "anyOf": [
                  {
                    "type": "number",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Percentage of task completion. When set to 100, the task is considered completed."
              },
              "planId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Plan ID to which the task belongs."
              },
              "priority": {
                "anyOf": [
                  {
                    "type": "number",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Priority of the task. The valid range of values is between 0 and 10, with the increasing value being lower priority (0 has the highest priority and 10 has the lowest priority).  Currently, Planner interprets values 0 and 1 as 'urgent', 2, 3 and 4 as 'important', 5, 6, and 7 as 'medium', and 8, 9, and 10 as 'low'.  Additionally, Planner sets the value 1 for 'urgent', 3 for 'important', 5 for 'medium', and 9 for 'low'."
              },
              "referenceCount": {
                "anyOf": [
                  {
                    "type": "number",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Number of external references that exist on the task."
              },
              "startDateTime": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Date and time at which the task starts. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
              },
              "title": {
                "type": "string",
                "description": "Title of the task."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property"
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-get-calendar-event",
      "description": "get-calendar-event",
      "inputSchema": {
        "type": "object",
        "properties": {
          "event-id": {
            "type": "string",
            "description": "Path parameter: event-id"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "event-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-mail-folder-messages",
      "description": "list-mail-folder-messages",
      "inputSchema": {
        "type": "object",
        "properties": {
          "mailFolder-id": {
            "type": "string",
            "description": "Path parameter: mailFolder-id"
          },
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "mailFolder-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-excel-worksheets",
      "description": "list-excel-worksheets",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          },
          "filePath": {
            "type": "string",
            "description": "Path to the Excel file in OneDrive"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "filePath"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-get-calendar-view",
      "description": "get-calendar-view",
      "inputSchema": {
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "description": "The start date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T19:00:00-08:00"
          },
          "endDateTime": {
            "type": "string",
            "description": "The end date and time of the time range, represented in ISO 8601 format. For example, 2019-11-08T20:00:00-08:00"
          },
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "startDateTime",
          "endDateTime"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-delete-onedrive-file",
      "description": "delete-onedrive-file",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-delete-outlook-contact",
      "description": "delete-outlook-contact",
      "inputSchema": {
        "type": "object",
        "properties": {
          "contact-id": {
            "type": "string",
            "description": "Path parameter: contact-id"
          }
        },
        "required": [
          "contact-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-send-mail",
      "description": "send-mail",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "Message": {
                "allOf": [
                  {},
                  {},
                  {
                    "type": "object",
                    "properties": {
                      "bccRecipients": {},
                      "body": {},
                      "bodyPreview": {},
                      "ccRecipients": {},
                      "conversationId": {},
                      "conversationIndex": {},
                      "flag": {},
                      "from": {},
                      "hasAttachments": {},
                      "importance": {},
                      "inferenceClassification": {},
                      "internetMessageHeaders": {},
                      "internetMessageId": {},
                      "isDeliveryReceiptRequested": {},
                      "isDraft": {},
                      "isRead": {},
                      "isReadReceiptRequested": {},
                      "parentFolderId": {},
                      "receivedDateTime": {},
                      "replyTo": {},
                      "sender": {},
                      "sentDateTime": {},
                      "subject": {},
                      "toRecipients": {},
                      "uniqueBody": {},
                      "webLink": {},
                      "attachments": {},
                      "extensions": {},
                      "multiValueExtendedProperties": {},
                      "singleValueExtendedProperties": {}
                    },
                    "additionalProperties": true
                  }
                ]
              },
              "SaveToSentItems": {
                "type": [
                  "boolean",
                  "null"
                ],
                "default": false
              }
            },
            "additionalProperties": true,
            "description": "Action parameters"
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-todo-task",
      "description": "create-todo-task",
      "inputSchema": {
        "type": "object",
        "properties": {
          "todoTaskList-id": {
            "type": "string",
            "description": "Path parameter: todoTaskList-id"
          },
          "body": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique identifier for an entity. Read-only."
              },
              "bodyLastModifiedDateTime": {
                "type": "string",
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "description": "The date and time when the task body was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
              },
              "categories": {
                "type": "array",
                "description": "The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined."
              },
              "createdDateTime": {
                "type": "string",
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "description": "The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
              },
              "hasAttachments": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Indicates whether the task has attachments."
              },
              "importance": {
                "type": "string",
                "enum": [
                  "low",
                  "normal",
                  "high"
                ]
              },
              "isReminderOn": {
                "type": "boolean",
                "description": "Set to true if an alert is set to remind the user of the task."
              },
              "lastModifiedDateTime": {
                "type": "string",
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "description": "The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
              },
              "status": {
                "type": "string",
                "enum": [
                  "notStarted",
                  "inProgress",
                  "completed",
                  "waitingOnOthers",
                  "deferred"
                ]
              },
              "title": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A brief description of the task."
              },
              "attachments": {
                "type": "array",
                "description": "A collection of file attachments for the task."
              },
              "attachmentSessions": {
                "type": "array"
              },
              "checklistItems": {
                "type": "array",
                "description": "A collection of checklistItems linked to a task."
              },
              "extensions": {
                "type": "array",
                "description": "The collection of open extensions defined for the task. Nullable."
              },
              "linkedResources": {
                "type": "array",
                "description": "A collection of resources linked to the task."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property"
          }
        },
        "required": [
          "todoTaskList-id",
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-folder-files",
      "description": "list-folder-files",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-onenote-section-pages",
      "description": "list-onenote-section-pages",
      "inputSchema": {
        "type": "object",
        "properties": {
          "notebook-id": {
            "type": "string",
            "description": "Path parameter: notebook-id"
          },
          "onenoteSection-id": {
            "type": "string",
            "description": "Path parameter: onenoteSection-id"
          },
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "notebook-id",
          "onenoteSection-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-delete-todo-task",
      "description": "delete-todo-task",
      "inputSchema": {
        "type": "object",
        "properties": {
          "todoTaskList-id": {
            "type": "string",
            "description": "Path parameter: todoTaskList-id"
          },
          "todoTask-id": {
            "type": "string",
            "description": "Path parameter: todoTask-id"
          }
        },
        "required": [
          "todoTaskList-id",
          "todoTask-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-get-mail-message",
      "description": "get-mail-message",
      "inputSchema": {
        "type": "object",
        "properties": {
          "message-id": {
            "type": "string",
            "description": "Path parameter: message-id"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "message-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-format-excel-range-font",
      "description": "Change the font properties of an Excel range.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "workbookWorksheet-id": {
            "type": "string",
            "description": "Path parameter: workbookWorksheet-id"
          },
          "address": {
            "type": "string",
            "description": "Excel range address (e.g., \"A1:B10\")"
          },
          "body": {
            "type": "object",
            "properties": {
              "bold": {
                "type": "boolean"
              },
              "color": {
                "type": "string"
              },
              "italic": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "size": {
                "type": "number",
                "exclusiveMinimum": 0
              },
              "underline": {
                "type": "string",
                "enum": [
                  "None",
                  "Single",
                  "Double",
                  "SingleAccountant",
                  "DoubleAccountant"
                ]
              }
            },
            "additionalProperties": false,
            "description": "Request body"
          },
          "filePath": {
            "type": "string",
            "description": "Path to the Excel file in OneDrive"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "workbookWorksheet-id",
          "address",
          "body",
          "filePath"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-calendars",
      "description": "list-calendars",
      "inputSchema": {
        "type": "object",
        "properties": {
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-get-onenote-page-content",
      "description": "get-onenote-page-content",
      "inputSchema": {
        "type": "object",
        "properties": {
          "onenotePage-id": {
            "type": "string",
            "description": "Path parameter: onenotePage-id"
          }
        },
        "required": [
          "onenotePage-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-get-current-user",
      "description": "get-current-user",
      "inputSchema": {
        "type": "object",
        "properties": {
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-sort-excel-range",
      "description": "sort-excel-range",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "workbookWorksheet-id": {
            "type": "string",
            "description": "Path parameter: workbookWorksheet-id"
          },
          "body": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique identifier for an entity. Read-only."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property values"
          },
          "filePath": {
            "type": "string",
            "description": "Path to the Excel file in OneDrive"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "workbookWorksheet-id",
          "body",
          "filePath"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-calendar-event",
      "description": "create-calendar-event",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "id": {},
              "categories": {},
              "changeKey": {},
              "createdDateTime": {},
              "lastModifiedDateTime": {},
              "allowNewTimeProposals": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. The default is true."
              },
              "attendees": {
                "type": "array",
                "description": "The collection of attendees for the event."
              },
              "bodyPreview": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The preview of the message associated with the event. It's in text format."
              },
              "cancelledOccurrences": {
                "type": "array"
              },
              "hasAttachments": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if the event has attachments."
              },
              "hideAttendees": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. The default is false."
              },
              "iCalUId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only."
              },
              "isAllDay": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if the event lasts all day. If true, regardless of whether it's a single-day or multi-day event, start, and endtime must be set to midnight and be in the same time zone."
              },
              "isCancelled": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if the event has been canceled."
              },
              "isDraft": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if the user has updated the meeting in Outlook but hasn't sent the updates to attendees. Set to false if all changes are sent, or if the event is an appointment without any attendees."
              },
              "isOnlineMeeting": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "True if this event has online meeting information (that is, onlineMeeting points to an onlineMeetingInfo resource), false otherwise. Default is false (onlineMeeting is null). Optional.  After you set isOnlineMeeting to true, Microsoft Graph initializes onlineMeeting. Subsequently, Outlook ignores any further changes to isOnlineMeeting, and the meeting remains available online."
              },
              "isOrganizer": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if the calendar owner (specified by the owner property of the calendar) is the organizer of the event (specified by the organizer property of the event). It also applies if a delegate organized the event on behalf of the owner."
              },
              "isReminderOn": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if an alert is set to remind the user of the event."
              },
              "locations": {
                "type": "array",
                "description": "The locations where the event is held or attended from. The location and locations properties always correspond with each other. If you update the location property, any prior locations in the locations collection are removed and replaced by the new location value."
              },
              "onlineMeetingUrl": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A URL for an online meeting. The property is set only when an organizer specifies in Outlook that an event is an online meeting such as Skype. Read-only.To access the URL to join an online meeting, use joinUrl which is exposed via the onlineMeeting property of the event. The onlineMeetingUrl property will be deprecated in the future."
              },
              "originalEndTimeZone": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The end time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook."
              },
              "originalStart": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Represents the start time of an event when it's initially created as an occurrence or exception in a recurring series. This property is not returned for events that are single instances. Its date and time information is expressed in ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
              },
              "originalStartTimeZone": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The start time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook."
              },
              "reminderMinutesBeforeStart": {
                "anyOf": [
                  {
                    "type": "number",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The number of minutes before the event start time that the reminder alert occurs."
              },
              "responseRequested": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Default is true, which represents the organizer would like an invitee to send a response to the event."
              },
              "seriesMasterId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The ID for the recurring series master item, if this event is part of a recurring series."
              },
              "subject": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The text of the event's subject line."
              },
              "transactionId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A custom identifier specified by a client app for the server to avoid redundant POST operations in case of client retries to create the same event. It's useful when low network connectivity causes the client to time out before receiving a response from the server for the client's prior create-event request. After you set transactionId when creating an event, you can't change transactionId in a subsequent update. This property is only returned in a response payload if an app has set it. Optional."
              },
              "webLink": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The URL to open the event in Outlook on the web.Outlook on the web opens the event in the browser if you are signed in to your mailbox. Otherwise, Outlook on the web prompts you to sign in.This URL can't be accessed from within an iFrame."
              },
              "attachments": {
                "type": "array",
                "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable."
              },
              "exceptionOccurrences": {
                "type": "array"
              },
              "extensions": {
                "type": "array",
                "description": "The collection of open extensions defined for the event. Nullable."
              },
              "instances": {
                "type": "array",
                "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable."
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "description": "The collection of multi-value extended properties defined for the event. Read-only. Nullable."
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "description": "The collection of single-value extended properties defined for the event. Read-only. Nullable."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property"
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-update-calendar-event",
      "description": "update-calendar-event",
      "inputSchema": {
        "type": "object",
        "properties": {
          "event-id": {
            "type": "string",
            "description": "Path parameter: event-id"
          },
          "body": {
            "type": "object",
            "properties": {
              "id": {},
              "categories": {},
              "changeKey": {},
              "createdDateTime": {},
              "lastModifiedDateTime": {},
              "allowNewTimeProposals": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. The default is true."
              },
              "attendees": {
                "type": "array",
                "description": "The collection of attendees for the event."
              },
              "bodyPreview": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The preview of the message associated with the event. It's in text format."
              },
              "cancelledOccurrences": {
                "type": "array"
              },
              "hasAttachments": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if the event has attachments."
              },
              "hideAttendees": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. The default is false."
              },
              "iCalUId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only."
              },
              "isAllDay": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if the event lasts all day. If true, regardless of whether it's a single-day or multi-day event, start, and endtime must be set to midnight and be in the same time zone."
              },
              "isCancelled": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if the event has been canceled."
              },
              "isDraft": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if the user has updated the meeting in Outlook but hasn't sent the updates to attendees. Set to false if all changes are sent, or if the event is an appointment without any attendees."
              },
              "isOnlineMeeting": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "True if this event has online meeting information (that is, onlineMeeting points to an onlineMeetingInfo resource), false otherwise. Default is false (onlineMeeting is null). Optional.  After you set isOnlineMeeting to true, Microsoft Graph initializes onlineMeeting. Subsequently, Outlook ignores any further changes to isOnlineMeeting, and the meeting remains available online."
              },
              "isOrganizer": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if the calendar owner (specified by the owner property of the calendar) is the organizer of the event (specified by the organizer property of the event). It also applies if a delegate organized the event on behalf of the owner."
              },
              "isReminderOn": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Set to true if an alert is set to remind the user of the event."
              },
              "locations": {
                "type": "array",
                "description": "The locations where the event is held or attended from. The location and locations properties always correspond with each other. If you update the location property, any prior locations in the locations collection are removed and replaced by the new location value."
              },
              "onlineMeetingUrl": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A URL for an online meeting. The property is set only when an organizer specifies in Outlook that an event is an online meeting such as Skype. Read-only.To access the URL to join an online meeting, use joinUrl which is exposed via the onlineMeeting property of the event. The onlineMeetingUrl property will be deprecated in the future."
              },
              "originalEndTimeZone": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The end time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook."
              },
              "originalStart": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Represents the start time of an event when it's initially created as an occurrence or exception in a recurring series. This property is not returned for events that are single instances. Its date and time information is expressed in ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
              },
              "originalStartTimeZone": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The start time zone that was set when the event was created. A value of tzone://Microsoft/Custom indicates that a legacy custom time zone was set in desktop Outlook."
              },
              "reminderMinutesBeforeStart": {
                "anyOf": [
                  {
                    "type": "number",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The number of minutes before the event start time that the reminder alert occurs."
              },
              "responseRequested": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Default is true, which represents the organizer would like an invitee to send a response to the event."
              },
              "seriesMasterId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The ID for the recurring series master item, if this event is part of a recurring series."
              },
              "subject": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The text of the event's subject line."
              },
              "transactionId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A custom identifier specified by a client app for the server to avoid redundant POST operations in case of client retries to create the same event. It's useful when low network connectivity causes the client to time out before receiving a response from the server for the client's prior create-event request. After you set transactionId when creating an event, you can't change transactionId in a subsequent update. This property is only returned in a response payload if an app has set it. Optional."
              },
              "webLink": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The URL to open the event in Outlook on the web.Outlook on the web opens the event in the browser if you are signed in to your mailbox. Otherwise, Outlook on the web prompts you to sign in.This URL can't be accessed from within an iFrame."
              },
              "attachments": {
                "type": "array",
                "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable."
              },
              "exceptionOccurrences": {
                "type": "array"
              },
              "extensions": {
                "type": "array",
                "description": "The collection of open extensions defined for the event. Nullable."
              },
              "instances": {
                "type": "array",
                "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions modified, but doesn't include occurrences cancelled from the series. Navigation property. Read-only. Nullable."
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "description": "The collection of multi-value extended properties defined for the event. Read-only. Nullable."
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "description": "The collection of single-value extended properties defined for the event. Read-only. Nullable."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property values"
          }
        },
        "required": [
          "event-id",
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-planner-tasks",
      "description": "list-planner-tasks",
      "inputSchema": {
        "type": "object",
        "properties": {
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-onenote-notebook",
      "description": "create-onenote-notebook",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {},
              {},
              {
                "type": "object",
                "properties": {
                  "createdBy": {},
                  "displayName": {},
                  "lastModifiedBy": {},
                  "lastModifiedDateTime": {}
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "isDefault": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Indicates whether this is the user's default notebook. Read-only."
                  },
                  "isShared": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Indicates whether the notebook is shared. If true, the contents of the notebook can be seen by people other than the owner. Read-only."
                  },
                  "sectionGroupsUrl": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The URL for the sectionGroups navigation property, which returns all the section groups in the notebook. Read-only."
                  },
                  "sectionsUrl": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The URL for the sections navigation property, which returns all the sections in the notebook. Read-only."
                  },
                  "sectionGroups": {
                    "type": "array",
                    "description": "The section groups in the notebook. Read-only. Nullable."
                  },
                  "sections": {
                    "type": "array",
                    "description": "The sections in the notebook. Read-only. Nullable."
                  }
                },
                "additionalProperties": true
              }
            ],
            "description": "New navigation property"
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-format-excel-range-fill",
      "description": "Change the background color (fill) of an Excel range. Returns the value of the color used.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "workbookWorksheet-id": {
            "type": "string",
            "description": "Path parameter: workbookWorksheet-id"
          },
          "address": {
            "type": "string",
            "description": "Excel range address (e.g., \"A1:B10\")"
          },
          "body": {
            "type": "object",
            "properties": {
              "color": {
                "type": "string"
              }
            },
            "required": [
              "color"
            ],
            "additionalProperties": false,
            "description": "Request body"
          },
          "filePath": {
            "type": "string",
            "description": "Path to the Excel file in OneDrive"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "workbookWorksheet-id",
          "address",
          "body",
          "filePath"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-download-onedrive-file-content",
      "description": "download-onedrive-file-content",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "driveItem-id1": {
            "type": "string",
            "description": "Path parameter: driveItem-id1"
          },
          "format": {
            "type": "string",
            "description": "Format of the content"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "driveItem-id1"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-get-planner-task",
      "description": "get-planner-task",
      "inputSchema": {
        "type": "object",
        "properties": {
          "plannerTask-id": {
            "type": "string",
            "description": "Path parameter: plannerTask-id"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "plannerTask-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-mail-messages",
      "description": "list-mail-messages",
      "inputSchema": {
        "type": "object",
        "properties": {
          "includeHiddenMessages": {
            "type": "string",
            "description": "Include Hidden Messages"
          },
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-get-outlook-contact",
      "description": "get-outlook-contact",
      "inputSchema": {
        "type": "object",
        "properties": {
          "contact-id": {
            "type": "string",
            "description": "Path parameter: contact-id"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "contact-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-set-excel-range",
      "description": "Sets a range of Excel cells in a worksheet. Returns a Range object with the current state of the cells. Example:\n{\n  \"values\" : [[\"Hello\", \"100\"],[\"1/1/2016\", null]],\n  \"formulas\" : [[null, null], [null, \"=B1*2\"]],\n  \"numberFormat\" : [[null,null], [\"m-ddd\", null]]\n}",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "workbookWorksheet-id": {
            "type": "string",
            "description": "Path parameter: workbookWorksheet-id"
          },
          "address": {
            "type": "string",
            "description": "Excel range address (e.g., \"A1:B10\")"
          },
          "body": {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": [
                      "string",
                      "number",
                      "boolean",
                      "null"
                    ]
                  }
                },
                "description": "The values in the specified range. The values can be of different data types. Cells you don't intend on changing MUST be null."
              },
              "formulas": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "description": "The formulas in standard Excel notation. Can be used to set formulas in the range. Cells you don't intend on changing MUST be null."
              },
              "formulasR1C1": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "description": "The formulas in R1C1 notation. Can be used to set formulas in R1C1 format. Cells you don't intend on changing MUST be null."
              },
              "formulasLocal": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "description": "The formulas in the user's language and number-formatting locale. Can be used to set formulas with localized function names and arguments. Cells you don't intend on changing MUST be null."
              },
              "numberFormat": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "description": "The Excel number format code for the data. Can be used to set specific number formats. Cells you don't intend on changing MUST be null."
              },
              "rowHidden": {
                "type": "boolean",
                "description": "Represents if all rows in the range are hidden. Read-only for the 'Range' type."
              },
              "columnHidden": {
                "type": "boolean",
                "description": "Represents if all columns in the range are hidden. Read-only for the 'Range' type."
              }
            },
            "additionalProperties": false,
            "description": "Request body"
          },
          "filePath": {
            "type": "string",
            "description": "Path to the Excel file in OneDrive"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "workbookWorksheet-id",
          "address",
          "body",
          "filePath"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-delete-mail-message",
      "description": "delete-mail-message",
      "inputSchema": {
        "type": "object",
        "properties": {
          "message-id": {
            "type": "string",
            "description": "Path parameter: message-id"
          }
        },
        "required": [
          "message-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-mail-folders",
      "description": "list-mail-folders",
      "inputSchema": {
        "type": "object",
        "properties": {
          "includeHiddenFolders": {
            "type": "string",
            "description": "Include Hidden Folders"
          },
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-delete-calendar-event",
      "description": "delete-calendar-event",
      "inputSchema": {
        "type": "object",
        "properties": {
          "event-id": {
            "type": "string",
            "description": "Path parameter: event-id"
          }
        },
        "required": [
          "event-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-plan-tasks",
      "description": "list-plan-tasks",
      "inputSchema": {
        "type": "object",
        "properties": {
          "plannerPlan-id": {
            "type": "string",
            "description": "Path parameter: plannerPlan-id"
          },
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "plannerPlan-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-update-onedrive-file-metadata",
      "description": "update-onedrive-file-metadata",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "body": {
            "type": "object",
            "properties": {
              "id": {},
              "createdBy": {},
              "createdDateTime": {},
              "description": {},
              "eTag": {},
              "lastModifiedBy": {},
              "lastModifiedDateTime": {},
              "name": {},
              "parentReference": {},
              "webUrl": {},
              "createdByUser": {},
              "lastModifiedByUser": {},
              "content": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The content stream, if the item represents a file."
              },
              "cTag": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "An eTag for the content of the item. This eTag isn't changed if only the metadata is changed. Note This property isn't returned if the item is a folder. Read-only."
              },
              "size": {
                "type": [
                  "number",
                  "null"
                ],
                "description": "Size of the item in bytes. Read-only."
              },
              "webDavUrl": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "WebDAV compatible URL for the item."
              },
              "children": {
                "type": "array",
                "description": "Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable."
              },
              "permissions": {
                "type": "array",
                "description": "The set of permissions for the item. Read-only. Nullable."
              },
              "subscriptions": {
                "type": "array",
                "description": "The set of subscriptions on the item. Only supported on the root of a drive."
              },
              "thumbnails": {
                "type": "array",
                "description": "Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable."
              },
              "versions": {
                "type": "array",
                "description": "The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property values"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-drives",
      "description": "list-drives",
      "inputSchema": {
        "type": "object",
        "properties": {
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-format-excel-range",
      "description": "format-excel-range",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "workbookWorksheet-id": {
            "type": "string",
            "description": "Path parameter: workbookWorksheet-id"
          },
          "body": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique identifier for an entity. Read-only."
              },
              "horizontalAlignment": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The horizontal alignment for the specified object. Possible values are: General, Left, Center, Right, Fill, Justify, CenterAcrossSelection, Distributed."
              },
              "verticalAlignment": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The vertical alignment for the specified object. Possible values are: Top, Center, Bottom, Justify, Distributed."
              },
              "wrapText": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Indicates whether Excel wraps the text in the object. A null value indicates that the entire range doesn't have a uniform wrap setting."
              },
              "borders": {
                "type": "array",
                "description": "Collection of border objects that apply to the overall range selected Read-only."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property values"
          },
          "filePath": {
            "type": "string",
            "description": "Path to the Excel file in OneDrive"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "workbookWorksheet-id",
          "body",
          "filePath"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-outlook-contacts",
      "description": "list-outlook-contacts",
      "inputSchema": {
        "type": "object",
        "properties": {
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-todo-task-lists",
      "description": "list-todo-task-lists",
      "inputSchema": {
        "type": "object",
        "properties": {
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-outlook-contact",
      "description": "create-outlook-contact",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "id": {},
              "categories": {},
              "changeKey": {},
              "createdDateTime": {},
              "lastModifiedDateTime": {},
              "assistantName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The name of the contact's assistant."
              },
              "birthday": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
              },
              "businessHomePage": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The business home page of the contact."
              },
              "businessPhones": {
                "type": "array",
                "description": "The contact's business phone numbers."
              },
              "children": {
                "type": "array",
                "description": "The names of the contact's children."
              },
              "companyName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The name of the contact's company."
              },
              "department": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's department."
              },
              "displayName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation."
              },
              "emailAddresses": {
                "type": "array",
                "description": "The contact's email addresses."
              },
              "fileAs": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The name the contact is filed under."
              },
              "generation": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's suffix."
              },
              "givenName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's given name."
              },
              "homePhones": {
                "type": "array",
                "description": "The contact's home phone numbers."
              },
              "imAddresses": {
                "type": "array",
                "description": "The contact's instant messaging (IM) addresses."
              },
              "initials": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's initials."
              },
              "jobTitle": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact’s job title."
              },
              "manager": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The name of the contact's manager."
              },
              "middleName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's middle name."
              },
              "mobilePhone": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's mobile phone number."
              },
              "nickName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's nickname."
              },
              "officeLocation": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The location of the contact's office."
              },
              "parentFolderId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The ID of the contact's parent folder."
              },
              "personalNotes": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The user's notes about the contact."
              },
              "profession": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's profession."
              },
              "spouseName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The name of the contact's spouse/partner."
              },
              "surname": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's surname."
              },
              "title": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's title."
              },
              "yomiCompanyName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The phonetic Japanese company name of the contact."
              },
              "yomiGivenName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The phonetic Japanese given name (first name) of the contact."
              },
              "yomiSurname": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The phonetic Japanese surname (last name)  of the contact."
              },
              "extensions": {
                "type": "array",
                "description": "The collection of open extensions defined for the contact. Read-only. Nullable."
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "description": "The collection of multi-value extended properties defined for the contact. Read-only. Nullable."
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "description": "The collection of single-value extended properties defined for the contact. Read-only. Nullable."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property"
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-get-root-folder",
      "description": "get-root-folder",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "drive-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-excel-chart",
      "description": "create-excel-chart",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "workbookWorksheet-id": {
            "type": "string",
            "description": "Path parameter: workbookWorksheet-id"
          },
          "body": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "sourceData": {},
              "seriesBy": {
                "type": "string"
              }
            },
            "additionalProperties": true,
            "description": "Action parameters"
          },
          "filePath": {
            "type": "string",
            "description": "Path to the Excel file in OneDrive"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "workbookWorksheet-id",
          "body",
          "filePath"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-get-planner-plan",
      "description": "get-planner-plan",
      "inputSchema": {
        "type": "object",
        "properties": {
          "plannerPlan-id": {
            "type": "string",
            "description": "Path parameter: plannerPlan-id"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "plannerPlan-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-item-in-folder",
      "description": "create-item-in-folder",
      "inputSchema": {
        "type": "object",
        "properties": {
          "drive-id": {
            "type": "string",
            "description": "Path parameter: drive-id"
          },
          "driveItem-id": {
            "type": "string",
            "description": "Path parameter: driveItem-id"
          },
          "body": {
            "type": "object",
            "properties": {
              "id": {},
              "createdBy": {},
              "createdDateTime": {},
              "description": {},
              "eTag": {},
              "lastModifiedBy": {},
              "lastModifiedDateTime": {},
              "name": {},
              "parentReference": {},
              "webUrl": {},
              "createdByUser": {},
              "lastModifiedByUser": {},
              "content": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The content stream, if the item represents a file."
              },
              "cTag": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "An eTag for the content of the item. This eTag isn't changed if only the metadata is changed. Note This property isn't returned if the item is a folder. Read-only."
              },
              "size": {
                "type": [
                  "number",
                  "null"
                ],
                "description": "Size of the item in bytes. Read-only."
              },
              "webDavUrl": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "WebDAV compatible URL for the item."
              },
              "children": {
                "type": "array",
                "description": "Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable."
              },
              "permissions": {
                "type": "array",
                "description": "The set of permissions for the item. Read-only. Nullable."
              },
              "subscriptions": {
                "type": "array",
                "description": "The set of subscriptions on the item. Only supported on the root of a drive."
              },
              "thumbnails": {
                "type": "array",
                "description": "Collection of thumbnailSet objects associated with the item. For more information, see getting thumbnails. Read-only. Nullable."
              },
              "versions": {
                "type": "array",
                "description": "The list of previous versions of the item. For more info, see getting previous versions. Read-only. Nullable."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property"
          }
        },
        "required": [
          "drive-id",
          "driveItem-id",
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-onenote-notebook-sections",
      "description": "list-onenote-notebook-sections",
      "inputSchema": {
        "type": "object",
        "properties": {
          "notebook-id": {
            "type": "string",
            "description": "Path parameter: notebook-id"
          },
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "notebook-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-update-todo-task",
      "description": "update-todo-task",
      "inputSchema": {
        "type": "object",
        "properties": {
          "todoTaskList-id": {
            "type": "string",
            "description": "Path parameter: todoTaskList-id"
          },
          "todoTask-id": {
            "type": "string",
            "description": "Path parameter: todoTask-id"
          },
          "body": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique identifier for an entity. Read-only."
              },
              "bodyLastModifiedDateTime": {
                "type": "string",
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "description": "The date and time when the task body was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
              },
              "categories": {
                "type": "array",
                "description": "The categories associated with the task. Each category corresponds to the displayName property of an outlookCategory that the user has defined."
              },
              "createdDateTime": {
                "type": "string",
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "description": "The date and time when the task was created. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
              },
              "hasAttachments": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Indicates whether the task has attachments."
              },
              "importance": {
                "type": "string",
                "enum": [
                  "low",
                  "normal",
                  "high"
                ]
              },
              "isReminderOn": {
                "type": "boolean",
                "description": "Set to true if an alert is set to remind the user of the task."
              },
              "lastModifiedDateTime": {
                "type": "string",
                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                "description": "The date and time when the task was last modified. By default, it is in UTC. You can provide a custom time zone in the request header. The property value uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2020 would look like this: '2020-01-01T00:00:00Z'."
              },
              "status": {
                "type": "string",
                "enum": [
                  "notStarted",
                  "inProgress",
                  "completed",
                  "waitingOnOthers",
                  "deferred"
                ]
              },
              "title": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "A brief description of the task."
              },
              "attachments": {
                "type": "array",
                "description": "A collection of file attachments for the task."
              },
              "attachmentSessions": {
                "type": "array"
              },
              "checklistItems": {
                "type": "array",
                "description": "A collection of checklistItems linked to a task."
              },
              "extensions": {
                "type": "array",
                "description": "The collection of open extensions defined for the task. Nullable."
              },
              "linkedResources": {
                "type": "array",
                "description": "A collection of resources linked to the task."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property values"
          }
        },
        "required": [
          "todoTaskList-id",
          "todoTask-id",
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-draft-mail",
      "description": "create-draft-mail",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "id": {},
              "categories": {},
              "changeKey": {},
              "createdDateTime": {},
              "lastModifiedDateTime": {},
              "bccRecipients": {
                "type": "array",
                "description": "The Bcc: recipients for the message."
              },
              "bodyPreview": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The first 255 characters of the message body. It is in text format."
              },
              "ccRecipients": {
                "type": "array",
                "description": "The Cc: recipients for the message."
              },
              "conversationId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The ID of the conversation the email belongs to."
              },
              "conversationIndex": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Indicates the position of the message within the conversation."
              },
              "hasAttachments": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Indicates whether the message has attachments. This property doesn't include inline attachments, so if a message contains only inline attachments, this property is false. To verify the existence of inline attachments, parse the body property to look for a src attribute, such as <IMG src='cid:image001.jpg@01D26CD8.6C05F070'>."
              },
              "internetMessageHeaders": {
                "type": "array",
                "description": "A collection of message headers defined by RFC5322. The set includes message headers indicating the network path taken by a message from the sender to the recipient. It can also contain custom message headers that hold app data for the message.  Returned only on applying a $select query option. Read-only."
              },
              "internetMessageId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The message ID in the format specified by RFC2822."
              },
              "isDeliveryReceiptRequested": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Indicates whether a read receipt is requested for the message."
              },
              "isDraft": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Indicates whether the message is a draft. A message is a draft if it hasn't been sent yet."
              },
              "isRead": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Indicates whether the message has been read."
              },
              "isReadReceiptRequested": {
                "type": [
                  "boolean",
                  "null"
                ],
                "description": "Indicates whether a read receipt is requested for the message."
              },
              "parentFolderId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The unique identifier for the message's parent mailFolder."
              },
              "receivedDateTime": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The date and time the message was received.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
              },
              "replyTo": {
                "type": "array",
                "description": "The email addresses to use when replying."
              },
              "sentDateTime": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The date and time the message was sent.  The date and time information uses ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z."
              },
              "subject": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The subject of the message."
              },
              "toRecipients": {
                "type": "array",
                "description": "The To: recipients for the message."
              },
              "webLink": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The URL to open the message in Outlook on the web.You can append an ispopout argument to the end of the URL to change how the message is displayed. If ispopout is not present or if it is set to 1, then the message is shown in a popout window. If ispopout is set to 0, the browser shows the message in the Outlook on the web review pane.The message opens in the browser if you are signed in to your mailbox via Outlook on the web. You are prompted to sign in if you are not already signed in with the browser.This URL cannot be accessed from within an iFrame."
              },
              "attachments": {
                "type": "array",
                "description": "The fileAttachment and itemAttachment attachments for the message."
              },
              "extensions": {
                "type": "array",
                "description": "The collection of open extensions defined for the message. Nullable."
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "description": "The collection of multi-value extended properties defined for the message. Nullable."
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "description": "The collection of single-value extended properties defined for the message. Nullable."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property"
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-calendar-events",
      "description": "list-calendar-events",
      "inputSchema": {
        "type": "object",
        "properties": {
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-get-todo-task",
      "description": "get-todo-task",
      "inputSchema": {
        "type": "object",
        "properties": {
          "todoTaskList-id": {
            "type": "string",
            "description": "Path parameter: todoTaskList-id"
          },
          "todoTask-id": {
            "type": "string",
            "description": "Path parameter: todoTask-id"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "todoTaskList-id",
          "todoTask-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-update-outlook-contact",
      "description": "update-outlook-contact",
      "inputSchema": {
        "type": "object",
        "properties": {
          "contact-id": {
            "type": "string",
            "description": "Path parameter: contact-id"
          },
          "body": {
            "type": "object",
            "properties": {
              "id": {},
              "categories": {},
              "changeKey": {},
              "createdDateTime": {},
              "lastModifiedDateTime": {},
              "assistantName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The name of the contact's assistant."
              },
              "birthday": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The contact's birthday. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z"
              },
              "businessHomePage": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The business home page of the contact."
              },
              "businessPhones": {
                "type": "array",
                "description": "The contact's business phone numbers."
              },
              "children": {
                "type": "array",
                "description": "The names of the contact's children."
              },
              "companyName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The name of the contact's company."
              },
              "department": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's department."
              },
              "displayName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's display name. You can specify the display name in a create or update operation. Note that later updates to other properties may cause an automatically generated value to overwrite the displayName value you have specified. To preserve a pre-existing value, always include it as displayName in an update operation."
              },
              "emailAddresses": {
                "type": "array",
                "description": "The contact's email addresses."
              },
              "fileAs": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The name the contact is filed under."
              },
              "generation": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's suffix."
              },
              "givenName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's given name."
              },
              "homePhones": {
                "type": "array",
                "description": "The contact's home phone numbers."
              },
              "imAddresses": {
                "type": "array",
                "description": "The contact's instant messaging (IM) addresses."
              },
              "initials": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's initials."
              },
              "jobTitle": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact’s job title."
              },
              "manager": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The name of the contact's manager."
              },
              "middleName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's middle name."
              },
              "mobilePhone": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's mobile phone number."
              },
              "nickName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's nickname."
              },
              "officeLocation": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The location of the contact's office."
              },
              "parentFolderId": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The ID of the contact's parent folder."
              },
              "personalNotes": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The user's notes about the contact."
              },
              "profession": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's profession."
              },
              "spouseName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The name of the contact's spouse/partner."
              },
              "surname": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's surname."
              },
              "title": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The contact's title."
              },
              "yomiCompanyName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The phonetic Japanese company name of the contact."
              },
              "yomiGivenName": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The phonetic Japanese given name (first name) of the contact."
              },
              "yomiSurname": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The phonetic Japanese surname (last name)  of the contact."
              },
              "extensions": {
                "type": "array",
                "description": "The collection of open extensions defined for the contact. Read-only. Nullable."
              },
              "multiValueExtendedProperties": {
                "type": "array",
                "description": "The collection of multi-value extended properties defined for the contact. Read-only. Nullable."
              },
              "singleValueExtendedProperties": {
                "type": "array",
                "description": "The collection of single-value extended properties defined for the contact. Read-only. Nullable."
              }
            },
            "additionalProperties": true,
            "description": "New navigation property values"
          }
        },
        "required": [
          "contact-id",
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-onenote-default-section-page",
      "description": "Creates a page in the default section of the default OneNote notebook.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "type": "object",
            "properties": {
              "presentation": {
                "type": "string",
                "minLength": 1
              },
              "attachments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "contentType": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "content",
                    "contentType"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "presentation"
            ],
            "additionalProperties": false,
            "description": "Request body"
          }
        },
        "required": [
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-onenote-notebooks",
      "description": "list-onenote-notebooks",
      "inputSchema": {
        "type": "object",
        "properties": {
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-onenote-section-page",
      "description": "Creates a page in a specific OneNote section.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "onenoteSection-id": {
            "type": "string",
            "description": "Path parameter: onenoteSection-id"
          },
          "body": {
            "type": "object",
            "properties": {
              "presentation": {
                "type": "string",
                "minLength": 1
              },
              "attachments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "content": {
                      "anyOf": [
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "contentType": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "content",
                    "contentType"
                  ],
                  "additionalProperties": false
                }
              }
            },
            "required": [
              "presentation"
            ],
            "additionalProperties": false,
            "description": "Request body"
          }
        },
        "required": [
          "onenoteSection-id",
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-create-onenote-notebook-section",
      "description": "create-onenote-notebook-section",
      "inputSchema": {
        "type": "object",
        "properties": {
          "notebook-id": {
            "type": "string",
            "description": "Path parameter: notebook-id"
          },
          "body": {
            "allOf": [
              {},
              {},
              {
                "type": "object",
                "properties": {
                  "createdBy": {},
                  "displayName": {},
                  "lastModifiedBy": {},
                  "lastModifiedDateTime": {}
                },
                "additionalProperties": true
              },
              {
                "type": "object",
                "properties": {
                  "isDefault": {
                    "type": [
                      "boolean",
                      "null"
                    ],
                    "description": "Indicates whether this is the user's default section. Read-only."
                  },
                  "pagesUrl": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The pages endpoint where you can get details for all the pages in the section. Read-only."
                  },
                  "pages": {
                    "type": "array",
                    "description": "The collection of pages in the section.  Read-only. Nullable."
                  }
                },
                "additionalProperties": true
              }
            ],
            "description": "New navigation property"
          }
        },
        "required": [
          "notebook-id",
          "body"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "ms365-list-todo-tasks",
      "description": "list-todo-tasks",
      "inputSchema": {
        "type": "object",
        "properties": {
          "todoTaskList-id": {
            "type": "string",
            "description": "Path parameter: todoTaskList-id"
          },
          "top": {
            "type": "number",
            "description": "Show only the first n items"
          },
          "skip": {
            "type": "number",
            "description": "Skip the first n items"
          },
          "search": {
            "type": "string",
            "description": "Search items by search phrases"
          },
          "filter": {
            "type": "string",
            "description": "Filter items by property values"
          },
          "count": {
            "type": "boolean",
            "description": "Include count of items"
          },
          "orderby": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Order items by property values"
          },
          "select": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Select properties to be returned"
          },
          "expand": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Expand related entities"
          }
        },
        "required": [
          "todoTaskList-id"
        ],
        "additionalProperties": false,
        "$schema": "http://json-schema.org/draft-07/schema#"
      }
    },
    {
      "name": "docs-docs_insert_inline_image",
      "description": "Insert an inline image in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/InsertInlineImageParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "Dimension": {
            "properties": {
              "magnitude": {
                "description": "The magnitude of the dimension",
                "title": "Magnitude",
                "type": "number"
              },
              "unit": {
                "description": "The unit of the dimension",
                "enum": [
                  "UNIT_UNSPECIFIED",
                  "PT",
                  "INCH"
                ],
                "title": "Unit",
                "type": "string"
              }
            },
            "required": [
              "magnitude",
              "unit"
            ],
            "title": "Dimension",
            "type": "object"
          },
          "EndOfSegmentLocation": {
            "properties": {
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "title": "EndOfSegmentLocation",
            "type": "object"
          },
          "InsertInlineImageParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Location"
                  },
                  {
                    "$ref": "#/$defs/EndOfSegmentLocation"
                  }
                ],
                "description": "Where to insert the image",
                "title": "Location"
              },
              "uri": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The URI of the image",
                "title": "Uri"
              },
              "object_size": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Size"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The size of the image"
              }
            },
            "required": [
              "document_id",
              "location"
            ],
            "title": "InsertInlineImageParams",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          },
          "Size": {
            "properties": {
              "height": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "width": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "Size",
            "type": "object"
          }
        },
        "title": "docs_insert_inline_imageArguments"
      }
    },
    {
      "name": "docs-docs_create_named_range",
      "description": "Create a named range in a Google Docs document for navigation and cross-references",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/CreateNamedRangeParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "CreateNamedRangeParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "name": {
                "description": "The name of the named range",
                "title": "Name",
                "type": "string"
              },
              "range": {
                "$ref": "#/$defs/Range",
                "description": "The range to associate with the name"
              }
            },
            "required": [
              "document_id",
              "name",
              "range"
            ],
            "title": "CreateNamedRangeParams",
            "type": "object"
          },
          "Range": {
            "properties": {
              "start_index": {
                "description": "Start index (0-based)",
                "minimum": 0,
                "title": "Start Index",
                "type": "integer"
              },
              "end_index": {
                "description": "End index (0-based, exclusive)",
                "minimum": 0,
                "title": "End Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "start_index",
              "end_index"
            ],
            "title": "Range",
            "type": "object"
          }
        },
        "title": "docs_create_named_rangeArguments"
      }
    },
    {
      "name": "docs-docs_insert_section_break",
      "description": "Insert a section break in a Google Docs document to change page layouts",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/InsertSectionBreakParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "EndOfSegmentLocation": {
            "properties": {
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "title": "EndOfSegmentLocation",
            "type": "object"
          },
          "InsertSectionBreakParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Location"
                  },
                  {
                    "$ref": "#/$defs/EndOfSegmentLocation"
                  }
                ],
                "description": "Where to insert the section break",
                "title": "Location"
              },
              "section_type": {
                "description": "The type of section break to insert",
                "enum": [
                  "SECTION_TYPE_UNSPECIFIED",
                  "CONTINUOUS",
                  "NEXT_PAGE",
                  "EVEN_PAGE",
                  "ODD_PAGE"
                ],
                "title": "Section Type",
                "type": "string"
              }
            },
            "required": [
              "document_id",
              "location",
              "section_type"
            ],
            "title": "InsertSectionBreakParams",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          }
        },
        "title": "docs_insert_section_breakArguments"
      }
    },
    {
      "name": "docs-docs_insert_text",
      "description": "Insert text at a specific position in a Google Docs document.\nReturns true for \"success\" if the opearation completed successfully.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/InsertTextParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "EndOfSegmentLocation": {
            "properties": {
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "title": "EndOfSegmentLocation",
            "type": "object"
          },
          "InsertTextParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "text": {
                "description": "Text to insert",
                "title": "Text",
                "type": "string"
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Location"
                  },
                  {
                    "$ref": "#/$defs/EndOfSegmentLocation"
                  }
                ],
                "description": "Where to insert the text - either a specific location or end of segment",
                "title": "Location"
              }
            },
            "required": [
              "document_id",
              "text",
              "location"
            ],
            "title": "InsertTextParams",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          }
        },
        "title": "docs_insert_textArguments"
      }
    },
    {
      "name": "docs-docs_insert_table_row",
      "description": "Insert a row in an existing table in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/InsertTableRowParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "InsertTableRowParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "table_cell_location": {
                "$ref": "#/$defs/TableCellLocation",
                "description": "The location of a table cell"
              },
              "insert_below": {
                "default": false,
                "description": "Whether to insert the row below the specified cell",
                "title": "Insert Below",
                "type": "boolean"
              }
            },
            "required": [
              "document_id",
              "table_cell_location"
            ],
            "title": "InsertTableRowParams",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          },
          "TableCellLocation": {
            "properties": {
              "table_start_location": {
                "$ref": "#/$defs/Location",
                "description": "Location where the table starts"
              },
              "row_index": {
                "description": "The row index (0-based)",
                "minimum": 0,
                "title": "Row Index",
                "type": "integer"
              },
              "column_index": {
                "description": "The column index (0-based)",
                "minimum": 0,
                "title": "Column Index",
                "type": "integer"
              }
            },
            "required": [
              "table_start_location",
              "row_index",
              "column_index"
            ],
            "title": "TableCellLocation",
            "type": "object"
          }
        },
        "title": "docs_insert_table_rowArguments"
      }
    },
    {
      "name": "docs-docs_insert_table_column",
      "description": "Insert a column in an existing table in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/InsertTableColumnParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "InsertTableColumnParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "table_cell_location": {
                "$ref": "#/$defs/TableCellLocation",
                "description": "The location of a table cell"
              },
              "insert_right": {
                "default": false,
                "description": "Whether to insert the column to the right of the specified cell",
                "title": "Insert Right",
                "type": "boolean"
              }
            },
            "required": [
              "document_id",
              "table_cell_location"
            ],
            "title": "InsertTableColumnParams",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          },
          "TableCellLocation": {
            "properties": {
              "table_start_location": {
                "$ref": "#/$defs/Location",
                "description": "Location where the table starts"
              },
              "row_index": {
                "description": "The row index (0-based)",
                "minimum": 0,
                "title": "Row Index",
                "type": "integer"
              },
              "column_index": {
                "description": "The column index (0-based)",
                "minimum": 0,
                "title": "Column Index",
                "type": "integer"
              }
            },
            "required": [
              "table_start_location",
              "row_index",
              "column_index"
            ],
            "title": "TableCellLocation",
            "type": "object"
          }
        },
        "title": "docs_insert_table_columnArguments"
      }
    },
    {
      "name": "docs-docs_pin_table_header_rows",
      "description": "Pin table header rows in a Google Docs document.\nThis allows the specified number of top rows in a table to remain visible when scrolling through the table.\nSet pinned_header_rows_count to 0 to unpin all header rows.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/PinTableHeaderRowsParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          },
          "PinTableHeaderRowsParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "table_start_location": {
                "$ref": "#/$defs/Location",
                "description": "Location where the table starts"
              },
              "pinned_header_rows_count": {
                "description": "The number of table rows to pin, where 0 implies that all rows are unpinned",
                "minimum": 0,
                "title": "Pinned Header Rows Count",
                "type": "integer"
              }
            },
            "required": [
              "document_id",
              "table_start_location",
              "pinned_header_rows_count"
            ],
            "title": "PinTableHeaderRowsParams",
            "type": "object"
          }
        },
        "title": "docs_pin_table_header_rowsArguments"
      }
    },
    {
      "name": "docs-docs_create_paragraph_bullets",
      "description": "Create bullet points or numbered lists for paragraphs in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/CreateParagraphBulletsParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "CreateParagraphBulletsParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "range": {
                "$ref": "#/$defs/Range",
                "description": "The range to apply bullets to"
              },
              "bullet_preset": {
                "anyOf": [
                  {
                    "enum": [
                      "BULLET_DISC_CIRCLE_SQUARE",
                      "BULLET_DIAMONDX_ARROW3D_SQUARE",
                      "BULLET_CHECKBOX",
                      "BULLET_ARROW_DIAMOND_DISC",
                      "BULLET_STAR_CIRCLE_SQUARE",
                      "BULLET_ARROW3D_CIRCLE_SQUARE",
                      "BULLET_LEFTTRIANGLE_DIAMOND_DISC",
                      "BULLET_DIAMONDX_HOLLOWDIAMOND_SQUARE",
                      "BULLET_DIAMOND_CIRCLE_SQUARE",
                      "NUMBERED_DECIMAL_ALPHA_ROMAN",
                      "NUMBERED_DECIMAL_ALPHA_ROMAN_PARENS",
                      "NUMBERED_DECIMAL_NESTED",
                      "NUMBERED_UPPERALPHA_ALPHA_ROMAN",
                      "NUMBERED_UPPERROMAN_UPPERALPHA_DECIMAL",
                      "NUMBERED_ZERODECIMAL_ALPHA_ROMAN"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Bullet Preset"
              },
              "nesting_levels": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/NestingLevel"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Nesting Levels"
              }
            },
            "required": [
              "document_id",
              "range"
            ],
            "title": "CreateParagraphBulletsParams",
            "type": "object"
          },
          "Dimension": {
            "properties": {
              "magnitude": {
                "description": "The magnitude of the dimension",
                "title": "Magnitude",
                "type": "number"
              },
              "unit": {
                "description": "The unit of the dimension",
                "enum": [
                  "UNIT_UNSPECIFIED",
                  "PT",
                  "INCH"
                ],
                "title": "Unit",
                "type": "string"
              }
            },
            "required": [
              "magnitude",
              "unit"
            ],
            "title": "Dimension",
            "type": "object"
          },
          "NestingLevel": {
            "properties": {
              "bullet_alignment": {
                "anyOf": [
                  {
                    "enum": [
                      "BULLET_ALIGNMENT_UNSPECIFIED",
                      "START",
                      "CENTER",
                      "END"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Bullet Alignment"
              },
              "glyph_alignment": {
                "anyOf": [
                  {
                    "enum": [
                      "GLYPH_ALIGNMENT_UNSPECIFIED",
                      "START",
                      "CENTER",
                      "END"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Glyph Alignment"
              },
              "glyph_format": {
                "anyOf": [
                  {
                    "enum": [
                      "GLYPH_FORMAT_UNSPECIFIED",
                      "ALPHA",
                      "DECIMAL",
                      "LOWER_ALPHA",
                      "UPPER_ALPHA",
                      "LOWER_ROMAN",
                      "UPPER_ROMAN"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Glyph Format"
              },
              "glyph_symbol": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Glyph Symbol"
              },
              "glyph_type": {
                "anyOf": [
                  {
                    "enum": [
                      "GLYPH_TYPE_UNSPECIFIED",
                      "NONE",
                      "BULLET",
                      "DECIMAL",
                      "ALPHA",
                      "LOWER_ALPHA",
                      "UPPER_ALPHA",
                      "LOWER_ROMAN",
                      "UPPER_ROMAN"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Glyph Type"
              },
              "indent_first_line": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "indent_start": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "start_number": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Start Number"
              },
              "text_style": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/TextStyle"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "NestingLevel",
            "type": "object"
          },
          "OptionalColor": {
            "properties": {
              "color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/RGB"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "OptionalColor",
            "type": "object"
          },
          "RGB": {
            "properties": {
              "red": {
                "description": "Red component (0-1)",
                "maximum": 1,
                "minimum": 0,
                "title": "Red",
                "type": "number"
              },
              "green": {
                "description": "Green component (0-1)",
                "maximum": 1,
                "minimum": 0,
                "title": "Green",
                "type": "number"
              },
              "blue": {
                "description": "Blue component (0-1)",
                "maximum": 1,
                "minimum": 0,
                "title": "Blue",
                "type": "number"
              }
            },
            "required": [
              "red",
              "green",
              "blue"
            ],
            "title": "RGB",
            "type": "object"
          },
          "Range": {
            "properties": {
              "start_index": {
                "description": "Start index (0-based)",
                "minimum": 0,
                "title": "Start Index",
                "type": "integer"
              },
              "end_index": {
                "description": "End index (0-based, exclusive)",
                "minimum": 0,
                "title": "End Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "start_index",
              "end_index"
            ],
            "title": "Range",
            "type": "object"
          },
          "TextStyle": {
            "properties": {
              "bold": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Bold"
              },
              "italic": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Italic"
              },
              "underline": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Underline"
              },
              "strikethrough": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Strikethrough"
              },
              "small_caps": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Small Caps"
              },
              "font_size": {
                "anyOf": [
                  {
                    "maximum": 400,
                    "minimum": 6,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Font Size"
              },
              "foreground_color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/OptionalColor"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "background_color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/OptionalColor"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "font_family": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Font Family"
              }
            },
            "title": "TextStyle",
            "type": "object"
          }
        },
        "title": "docs_create_paragraph_bulletsArguments"
      }
    },
    {
      "name": "docs-docs_create_document",
      "description": "Create a new Google Docs document with optional folder placement.\nReturns true for \"success\" if the opearation completed successfully.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/CreateDocumentParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "CreateDocumentParams": {
            "properties": {
              "title": {
                "description": "Title of the new document",
                "title": "Title",
                "type": "string"
              },
              "text": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Initial text to insert into the document",
                "title": "Text"
              },
              "folder_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Google Drive folder ID where document should be created",
                "title": "Folder Id"
              }
            },
            "required": [
              "title",
              "text"
            ],
            "title": "CreateDocumentParams",
            "type": "object"
          }
        },
        "title": "docs_create_documentArguments"
      }
    },
    {
      "name": "docs-docs_insert_header",
      "description": "Insert a header section in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/InsertHeaderParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "InsertHeaderParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "text": {
                "description": "Header text content",
                "title": "Text",
                "type": "string"
              },
              "header_type": {
                "default": "DEFAULT",
                "description": "Type of header",
                "enum": [
                  "DEFAULT",
                  "FIRST_PAGE_ONLY",
                  "EVEN_PAGE_ONLY"
                ],
                "title": "Header Type",
                "type": "string"
              },
              "section_break_location": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Location"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Location of section break. If omitted, applies to document style"
              }
            },
            "required": [
              "document_id",
              "text"
            ],
            "title": "InsertHeaderParams",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          }
        },
        "title": "docs_insert_headerArguments"
      }
    },
    {
      "name": "docs-docs_insert_table",
      "description": "Insert a table in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/InsertTableParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "EndOfSegmentLocation": {
            "properties": {
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "title": "EndOfSegmentLocation",
            "type": "object"
          },
          "InsertTableParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Location"
                  },
                  {
                    "$ref": "#/$defs/EndOfSegmentLocation"
                  }
                ],
                "description": "Where to insert the table",
                "title": "Location"
              },
              "rows": {
                "description": "The number of rows in the table",
                "minimum": 1,
                "title": "Rows",
                "type": "integer"
              },
              "columns": {
                "description": "The number of columns in the table",
                "minimum": 1,
                "title": "Columns",
                "type": "integer"
              },
              "data": {
                "anyOf": [
                  {
                    "items": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Optional 2D array of data to populate the table. If provided, table will be filled with this data.",
                "title": "Data"
              }
            },
            "required": [
              "document_id",
              "location",
              "rows",
              "columns"
            ],
            "title": "InsertTableParams",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          }
        },
        "title": "docs_insert_tableArguments"
      }
    },
    {
      "name": "docs-docs_batch_stylize",
      "description": "Batch apply multiple styling operations to a Google Docs document.\nYou MUST call the tool docs_get_document before running this tool OR run this tool immediately after running the tool docs_create_document.\nIt's preferred that you first apply all textual changes and then call this tool to batch apply all styling changes in one go.\nOperations are applied in descending order of start_index to avoid index shifting issues.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/BatchStylizeParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "BatchStylizeParams": {
            "properties": {
              "operations": {
                "description": "Array of style operations to perform",
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/$defs/UpdateTextStyleParams"
                    },
                    {
                      "$ref": "#/$defs/UpdateParagraphStyleParams"
                    },
                    {
                      "$ref": "#/$defs/UpdateTableCellStyleParams"
                    }
                  ]
                },
                "title": "Operations",
                "type": "array"
              }
            },
            "required": [
              "operations"
            ],
            "title": "BatchStylizeParams",
            "type": "object"
          },
          "Dimension": {
            "properties": {
              "magnitude": {
                "description": "The magnitude of the dimension",
                "title": "Magnitude",
                "type": "number"
              },
              "unit": {
                "description": "The unit of the dimension",
                "enum": [
                  "UNIT_UNSPECIFIED",
                  "PT",
                  "INCH"
                ],
                "title": "Unit",
                "type": "string"
              }
            },
            "required": [
              "magnitude",
              "unit"
            ],
            "title": "Dimension",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          },
          "OptionalColor": {
            "properties": {
              "color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/RGB"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "OptionalColor",
            "type": "object"
          },
          "ParagraphBorder": {
            "properties": {
              "color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/OptionalColor"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "width": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "padding": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "dash_style": {
                "anyOf": [
                  {
                    "enum": [
                      "DASH_STYLE_UNSPECIFIED",
                      "SOLID",
                      "DOT",
                      "DASH"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Dash Style"
              }
            },
            "title": "ParagraphBorder",
            "type": "object"
          },
          "ParagraphStyle": {
            "properties": {
              "heading_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The heading ID of the paragraph. If empty, then this paragraph is not a heading. This property is read-only.",
                "title": "Heading Id"
              },
              "named_style_type": {
                "anyOf": [
                  {
                    "enum": [
                      "NAMED_STYLE_TYPE_UNSPECIFIED",
                      "NORMAL_TEXT",
                      "TITLE",
                      "SUBTITLE",
                      "HEADING_1",
                      "HEADING_2",
                      "HEADING_3",
                      "HEADING_4",
                      "HEADING_5",
                      "HEADING_6"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The named style type of the paragraph",
                "title": "Named Style Type"
              },
              "alignment": {
                "anyOf": [
                  {
                    "enum": [
                      "ALIGNMENT_UNSPECIFIED",
                      "START",
                      "CENTER",
                      "END",
                      "JUSTIFIED"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The horizontal text alignment for this paragraph",
                "title": "Alignment"
              },
              "line_spacing": {
                "anyOf": [
                  {
                    "maximum": 300,
                    "minimum": 50,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The amount of space between lines, as a percentage of normal, where normal is represented as 100.0",
                "title": "Line Spacing"
              },
              "direction": {
                "anyOf": [
                  {
                    "enum": [
                      "CONTENT_DIRECTION_UNSPECIFIED",
                      "LEFT_TO_RIGHT",
                      "RIGHT_TO_LEFT"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The text direction of this paragraph",
                "title": "Direction"
              },
              "spacing_mode": {
                "anyOf": [
                  {
                    "enum": [
                      "SPACING_MODE_UNSPECIFIED",
                      "NEVER_COLLAPSE",
                      "COLLAPSE_LISTS"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The spacing mode for the paragraph",
                "title": "Spacing Mode"
              },
              "space_above": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The amount of extra space above the paragraph"
              },
              "space_below": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The amount of extra space below the paragraph"
              },
              "border_between": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ParagraphBorder"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The border between this paragraph and the next and previous paragraphs"
              },
              "border_top": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ParagraphBorder"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The border at the top of this paragraph"
              },
              "border_bottom": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ParagraphBorder"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The border at the bottom of this paragraph"
              },
              "border_left": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ParagraphBorder"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The border to the left of this paragraph"
              },
              "border_right": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ParagraphBorder"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The border to the right of this paragraph"
              },
              "indent_first_line": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The amount of indentation for the first line of the paragraph"
              },
              "indent_start": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The amount of indentation for the paragraph on the side that corresponds to the start of the text"
              },
              "indent_end": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The amount of indentation for the paragraph on the side that corresponds to the end of the text"
              },
              "tab_stops": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/TabStop"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "A list of the tab stops for this paragraph. This property is read-only.",
                "title": "Tab Stops"
              },
              "keep_lines_together": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Whether all lines of the paragraph should be laid out on the same page or column if possible",
                "title": "Keep Lines Together"
              },
              "keep_with_next": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Whether at least a part of this paragraph should be laid out on the same page or column as the next paragraph if possible",
                "title": "Keep With Next"
              },
              "avoid_widow_and_orphan": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Whether to avoid widows and orphans for the paragraph",
                "title": "Avoid Widow And Orphan"
              },
              "shading": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Shading"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The shading of the paragraph"
              },
              "page_break_before": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Whether the current paragraph should always start at the beginning of a page",
                "title": "Page Break Before"
              }
            },
            "title": "ParagraphStyle",
            "type": "object"
          },
          "RGB": {
            "properties": {
              "red": {
                "description": "Red component (0-1)",
                "maximum": 1,
                "minimum": 0,
                "title": "Red",
                "type": "number"
              },
              "green": {
                "description": "Green component (0-1)",
                "maximum": 1,
                "minimum": 0,
                "title": "Green",
                "type": "number"
              },
              "blue": {
                "description": "Blue component (0-1)",
                "maximum": 1,
                "minimum": 0,
                "title": "Blue",
                "type": "number"
              }
            },
            "required": [
              "red",
              "green",
              "blue"
            ],
            "title": "RGB",
            "type": "object"
          },
          "Range": {
            "properties": {
              "start_index": {
                "description": "Start index (0-based)",
                "minimum": 0,
                "title": "Start Index",
                "type": "integer"
              },
              "end_index": {
                "description": "End index (0-based, exclusive)",
                "minimum": 0,
                "title": "End Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "start_index",
              "end_index"
            ],
            "title": "Range",
            "type": "object"
          },
          "Shading": {
            "properties": {
              "background_color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/OptionalColor"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "Shading",
            "type": "object"
          },
          "TabStop": {
            "properties": {
              "offset": {
                "$ref": "#/$defs/Dimension",
                "description": "The offset between this tab stop and the start margin"
              },
              "alignment": {
                "anyOf": [
                  {
                    "enum": [
                      "TAB_STOP_ALIGNMENT_UNSPECIFIED",
                      "START",
                      "CENTER",
                      "END"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The alignment of this tab stop",
                "title": "Alignment"
              }
            },
            "required": [
              "offset"
            ],
            "title": "TabStop",
            "type": "object"
          },
          "TableCellLocation": {
            "properties": {
              "table_start_location": {
                "$ref": "#/$defs/Location",
                "description": "Location where the table starts"
              },
              "row_index": {
                "description": "The row index (0-based)",
                "minimum": 0,
                "title": "Row Index",
                "type": "integer"
              },
              "column_index": {
                "description": "The column index (0-based)",
                "minimum": 0,
                "title": "Column Index",
                "type": "integer"
              }
            },
            "required": [
              "table_start_location",
              "row_index",
              "column_index"
            ],
            "title": "TableCellLocation",
            "type": "object"
          },
          "TableCellStyle": {
            "properties": {
              "row_span": {
                "anyOf": [
                  {
                    "minimum": 1,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The number of rows this cell spans",
                "title": "Row Span"
              },
              "column_span": {
                "anyOf": [
                  {
                    "minimum": 1,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The number of columns this cell spans",
                "title": "Column Span"
              },
              "background_color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/OptionalColor"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "border_left": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Border Left"
              },
              "border_right": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Border Right"
              },
              "border_top": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Border Top"
              },
              "border_bottom": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Border Bottom"
              },
              "padding_left": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "padding_right": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "padding_top": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "padding_bottom": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "content_alignment": {
                "anyOf": [
                  {
                    "enum": [
                      "CONTENT_ALIGNMENT_UNSPECIFIED",
                      "TOP",
                      "MIDDLE",
                      "BOTTOM"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The vertical alignment of content within the table cell. For horizontal alignment (START, CENTER, END) use paragraph styling, not cell styling.",
                "title": "Content Alignment"
              }
            },
            "title": "TableCellStyle",
            "type": "object"
          },
          "TableRange": {
            "properties": {
              "table_cell_location": {
                "$ref": "#/$defs/TableCellLocation",
                "description": "The location of the table cell"
              },
              "row_span": {
                "description": "The number of rows in the range",
                "minimum": 1,
                "title": "Row Span",
                "type": "integer"
              },
              "column_span": {
                "description": "The number of columns in the range",
                "minimum": 1,
                "title": "Column Span",
                "type": "integer"
              }
            },
            "required": [
              "table_cell_location",
              "row_span",
              "column_span"
            ],
            "title": "TableRange",
            "type": "object"
          },
          "TextStyle": {
            "properties": {
              "bold": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Bold"
              },
              "italic": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Italic"
              },
              "underline": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Underline"
              },
              "strikethrough": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Strikethrough"
              },
              "small_caps": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Small Caps"
              },
              "font_size": {
                "anyOf": [
                  {
                    "maximum": 400,
                    "minimum": 6,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Font Size"
              },
              "foreground_color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/OptionalColor"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "background_color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/OptionalColor"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "font_family": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Font Family"
              }
            },
            "title": "TextStyle",
            "type": "object"
          },
          "UpdateParagraphStyleParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "range": {
                "$ref": "#/$defs/Range",
                "description": "Paragraph range to style"
              },
              "paragraph_style": {
                "$ref": "#/$defs/ParagraphStyle",
                "description": "Paragraph style properties to apply"
              },
              "fields": {
                "description": "Comma-separated field mask specifying which fields to update (e.g., 'alignment,namedStyleType')",
                "title": "Fields",
                "type": "string"
              }
            },
            "required": [
              "document_id",
              "range",
              "paragraph_style",
              "fields"
            ],
            "title": "UpdateParagraphStyleParams",
            "type": "object"
          },
          "UpdateTableCellStyleParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "table_range": {
                "$ref": "#/$defs/TableRange",
                "description": "The table range to update"
              },
              "table_cell_style": {
                "$ref": "#/$defs/TableCellStyle",
                "description": "The table cell style to apply"
              },
              "fields": {
                "description": "The fields to update",
                "title": "Fields",
                "type": "string"
              }
            },
            "required": [
              "document_id",
              "table_range",
              "table_cell_style",
              "fields"
            ],
            "title": "UpdateTableCellStyleParams",
            "type": "object"
          },
          "UpdateTextStyleParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "range": {
                "$ref": "#/$defs/Range",
                "description": "Text range to style"
              },
              "text_style": {
                "$ref": "#/$defs/TextStyle",
                "description": "Text style properties to apply"
              },
              "fields": {
                "description": "Comma-separated field mask specifying which fields to update (e.g., 'bold,italic,fontSize')",
                "title": "Fields",
                "type": "string"
              }
            },
            "required": [
              "document_id",
              "range",
              "text_style",
              "fields"
            ],
            "title": "UpdateTextStyleParams",
            "type": "object"
          }
        },
        "title": "docs_batch_stylizeArguments"
      }
    },
    {
      "name": "docs-docs_insert_page_break",
      "description": "Insert a page break in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/InsertPageBreakParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "EndOfSegmentLocation": {
            "properties": {
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "title": "EndOfSegmentLocation",
            "type": "object"
          },
          "InsertPageBreakParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Location"
                  },
                  {
                    "$ref": "#/$defs/EndOfSegmentLocation"
                  }
                ],
                "description": "Where to insert the page break",
                "title": "Location"
              }
            },
            "required": [
              "document_id",
              "location"
            ],
            "title": "InsertPageBreakParams",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          }
        },
        "title": "docs_insert_page_breakArguments"
      }
    },
    {
      "name": "docs-docs_insert_footer",
      "description": "Insert a footer section in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/InsertFooterParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "InsertFooterParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "text": {
                "description": "Footer text content",
                "title": "Text",
                "type": "string"
              },
              "footer_type": {
                "default": "DEFAULT",
                "description": "Type of footer",
                "enum": [
                  "DEFAULT",
                  "FIRST_PAGE_ONLY",
                  "EVEN_PAGE_ONLY"
                ],
                "title": "Footer Type",
                "type": "string"
              },
              "section_break_location": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Location"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Location of section break. If omitted, applies to document style"
              }
            },
            "required": [
              "document_id",
              "text"
            ],
            "title": "InsertFooterParams",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          }
        },
        "title": "docs_insert_footerArguments"
      }
    },
    {
      "name": "docs-docs_get_document",
      "description": "Get the content and metadata of a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/GetDocumentParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "GetDocumentParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "suggestions_view_mode": {
                "anyOf": [
                  {
                    "enum": [
                      "DEFAULT_FOR_CURRENT_ACCESS",
                      "SUGGESTIONS_INLINE",
                      "PREVIEW_SUGGESTIONS_ACCEPTED",
                      "PREVIEW_WITHOUT_SUGGESTIONS"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The suggestions view mode to apply to the document",
                "title": "Suggestions View Mode"
              },
              "include_tabs": {
                "default": true,
                "description": "Whether to populate the Document.tabs field",
                "title": "Include Tabs",
                "type": "boolean"
              }
            },
            "required": [
              "document_id"
            ],
            "title": "GetDocumentParams",
            "type": "object"
          }
        },
        "title": "docs_get_documentArguments"
      }
    },
    {
      "name": "docs-docs_update_table_row_style",
      "description": "Update table row styling (height, header status, overflow behavior) in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/UpdateTableRowStyleParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "Dimension": {
            "properties": {
              "magnitude": {
                "description": "The magnitude of the dimension",
                "title": "Magnitude",
                "type": "number"
              },
              "unit": {
                "description": "The unit of the dimension",
                "enum": [
                  "UNIT_UNSPECIFIED",
                  "PT",
                  "INCH"
                ],
                "title": "Unit",
                "type": "string"
              }
            },
            "required": [
              "magnitude",
              "unit"
            ],
            "title": "Dimension",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          },
          "TableRowStyle": {
            "properties": {
              "min_row_height": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "prevent_overflow": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Prevent Overflow"
              }
            },
            "title": "TableRowStyle",
            "type": "object"
          },
          "UpdateTableRowStyleParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "table_start_location": {
                "$ref": "#/$defs/Location",
                "description": "The location where the table starts"
              },
              "row_indices": {
                "description": "The list of zero-based row indices",
                "items": {
                  "type": "integer"
                },
                "title": "Row Indices",
                "type": "array"
              },
              "table_row_style": {
                "$ref": "#/$defs/TableRowStyle",
                "description": "The table row style to apply"
              },
              "fields": {
                "description": "The fields to update",
                "title": "Fields",
                "type": "string"
              }
            },
            "required": [
              "document_id",
              "table_start_location",
              "row_indices",
              "table_row_style",
              "fields"
            ],
            "title": "UpdateTableRowStyleParams",
            "type": "object"
          }
        },
        "title": "docs_update_table_row_styleArguments"
      }
    },
    {
      "name": "docs-docs_create_footnotes",
      "description": "Create multiple footnotes in a Google Docs document.\nYou MUST call the tool docs_get_document before running this tool OR run this tool immediately after running the tool docs_create_document.\nYou MUST precisely count the exact indexes for the footnotes before running this tool.\nIt's preferred that you first apply all textual changes and then call this tool to batch apply all footnotes in one go.\nFootnotes with Location are processed first (in descending index order),\nfollowed by footnotes with EndOfSegmentLocation.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/CreateFootnotesParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "CreateFootnotesParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "footnotes": {
                "description": "Array of footnote requests with locations and text",
                "items": {
                  "$ref": "#/$defs/FootnoteRequest"
                },
                "title": "Footnotes",
                "type": "array"
              }
            },
            "required": [
              "document_id",
              "footnotes"
            ],
            "title": "CreateFootnotesParams",
            "type": "object"
          },
          "EndOfSegmentLocation": {
            "properties": {
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "title": "EndOfSegmentLocation",
            "type": "object"
          },
          "FootnoteRequest": {
            "properties": {
              "location": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Location"
                  },
                  {
                    "$ref": "#/$defs/EndOfSegmentLocation"
                  }
                ],
                "description": "Where to insert the footnote",
                "title": "Location"
              },
              "text": {
                "description": "Text content for the footnote",
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "location",
              "text"
            ],
            "title": "FootnoteRequest",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          }
        },
        "title": "docs_create_footnotesArguments"
      }
    },
    {
      "name": "docs-docs_replace_all_text",
      "description": "Find and replace all occurrences of specific text in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/ReplaceAllTextParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "ReplaceAllTextParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "find_text": {
                "description": "Text to find and replace",
                "title": "Find Text",
                "type": "string"
              },
              "replace_text": {
                "description": "Replacement text",
                "title": "Replace Text",
                "type": "string"
              },
              "match_case": {
                "default": false,
                "description": "Whether to match case",
                "title": "Match Case",
                "type": "boolean"
              },
              "search_by_regex": {
                "default": false,
                "description": "Whether to treat find_text as regular expression",
                "title": "Search By Regex",
                "type": "boolean"
              },
              "tab_ids": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "List of tab IDs to apply replacement. If omitted, applies to all tabs",
                "title": "Tab Ids"
              }
            },
            "required": [
              "document_id",
              "find_text",
              "replace_text"
            ],
            "title": "ReplaceAllTextParams",
            "type": "object"
          }
        },
        "title": "docs_replace_all_textArguments"
      }
    },
    {
      "name": "docs-docs_update_table_column_props",
      "description": "Update table column properties (width, width type) in a Google Docs document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/UpdateTableColumnPropertiesParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "Dimension": {
            "properties": {
              "magnitude": {
                "description": "The magnitude of the dimension",
                "title": "Magnitude",
                "type": "number"
              },
              "unit": {
                "description": "The unit of the dimension",
                "enum": [
                  "UNIT_UNSPECIFIED",
                  "PT",
                  "INCH"
                ],
                "title": "Unit",
                "type": "string"
              }
            },
            "required": [
              "magnitude",
              "unit"
            ],
            "title": "Dimension",
            "type": "object"
          },
          "Location": {
            "properties": {
              "index": {
                "description": "Document index (0-based, but don't use 0.) Must be smaller than the segment's endIndex property",
                "minimum": 0,
                "title": "Index",
                "type": "integer"
              },
              "segment_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "",
                "description": "ID of header, footer, or footnote. Empty string for document body",
                "title": "Segment Id"
              },
              "tab_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Tab ID. If omitted, applies to first tab",
                "title": "Tab Id"
              }
            },
            "required": [
              "index"
            ],
            "title": "Location",
            "type": "object"
          },
          "TableColumnProperties": {
            "properties": {
              "width": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Dimension"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "width_type": {
                "anyOf": [
                  {
                    "enum": [
                      "WIDTH_TYPE_UNSPECIFIED",
                      "EVENLY_DISTRIBUTED",
                      "FIXED_WIDTH"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Width Type"
              }
            },
            "title": "TableColumnProperties",
            "type": "object"
          },
          "UpdateTableColumnPropertiesParams": {
            "properties": {
              "document_id": {
                "description": "Google Docs document ID",
                "title": "Document Id",
                "type": "string"
              },
              "table_start_location": {
                "$ref": "#/$defs/Location",
                "description": "The location where the table starts"
              },
              "column_indices": {
                "description": "The list of zero-based column indices",
                "items": {
                  "type": "integer"
                },
                "title": "Column Indices",
                "type": "array"
              },
              "table_column_properties": {
                "$ref": "#/$defs/TableColumnProperties",
                "description": "The table column properties to update"
              },
              "fields": {
                "description": "The fields to update",
                "title": "Fields",
                "type": "string"
              }
            },
            "required": [
              "document_id",
              "table_start_location",
              "column_indices",
              "table_column_properties",
              "fields"
            ],
            "title": "UpdateTableColumnPropertiesParams",
            "type": "object"
          }
        },
        "title": "docs_update_table_column_propsArguments"
      }
    },
    {
      "name": "jira-jira_create_screen_tab",
      "description": "Create a new screen tab with a given name in a Jira screen",
      "inputSchema": {
        "type": "object",
        "properties": {
          "screen_id": {
            "type": "integer",
            "description": "The ID of the screen to create the new tab in"
          },
          "name": {
            "type": "string",
            "description": "The name for the new tab",
            "minLength": 1
          }
        },
        "required": [
          "screen_id",
          "name"
        ]
      }
    },
    {
      "name": "jira-jira_create_issue_link",
      "description": "Create a link between two Jira issues",
      "inputSchema": {
        "type": "object",
        "properties": {
          "link_type": {
            "type": "string",
            "description": "The type of link to create (e.g., 'Duplicate', 'Blocks', 'Relates to')"
          },
          "inward_issue_key": {
            "type": "string",
            "description": "The key of the inward issue (e.g., 'PROJ-123')"
          },
          "outward_issue_key": {
            "type": "string",
            "description": "The key of the outward issue (e.g., 'PROJ-456')"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment to add to the link"
          },
          "comment_visibility": {
            "type": "object",
            "description": "Optional visibility settings for the comment",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of visibility restriction (e.g., 'group')"
              },
              "value": {
                "type": "string",
                "description": "Value for the visibility restriction (e.g., 'jira-software-users')"
              }
            }
          }
        },
        "required": [
          "link_type",
          "inward_issue_key",
          "outward_issue_key"
        ]
      }
    },
    {
      "name": "jira-jira_create_issuetype_scrnscheme",
      "description": "Create a new issue type screen scheme in Jira that maps issue types to screen schemes for classic projects",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the issue type screen scheme. Must be unique. Maximum 255 characters.",
            "minLength": 1,
            "maxLength": 255
          },
          "issueTypeMappings": {
            "type": "array",
            "description": "Array of mappings between issue types and screen schemes. Must include a 'default' entry.",
            "items": {
              "type": "object",
              "properties": {
                "issueTypeId": {
                  "type": "string",
                  "description": "The ID of the issue type or 'default'. Use 'default' for the fallback mapping."
                },
                "screenSchemeId": {
                  "type": "string",
                  "description": "The ID of the screen scheme to associate with this issue type."
                }
              },
              "required": [
                "issueTypeId",
                "screenSchemeId"
              ]
            },
            "minItems": 1
          },
          "description": {
            "type": "string",
            "description": "Description of the issue type screen scheme. Maximum 255 characters.",
            "maxLength": 255
          }
        },
        "required": [
          "name",
          "issueTypeMappings"
        ]
      }
    },
    {
      "name": "jira-jira_update_issue",
      "description": "Update an existing Jira issue including changing status, adding Epic links, updating fields, etc.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_key": {
            "type": "string",
            "description": "Jira issue key (e.g., 'PROJ-123')"
          },
          "fields": {
            "type": "string",
            "description": "A valid JSON object of fields to update as a string. Example: '{\"summary\": \"New title\", \"description\": \"Updated description\", \"priority\": {\"name\": \"High\"}, \"assignee\": \"john.doe\"}'"
          },
          "additional_fields": {
            "type": "string",
            "description": "Optional JSON string of additional fields to update. Use this for custom fields or more complex updates.",
            "default": "{}"
          },
          "attachments": {
            "type": "string",
            "description": "Optional JSON string or comma-separated list of file paths to attach to the issue. Example: \"/path/to/file1.txt,/path/to/file2.txt\" or \"[\"/path/to/file1.txt\",\"/path/to/file2.txt\"]\""
          }
        },
        "required": [
          "issue_key",
          "fields"
        ]
      }
    },
    {
      "name": "jira-jira_get_agile_boards",
      "description": "Get jira agile boards by name, project key, or type",
      "inputSchema": {
        "type": "object",
        "properties": {
          "board_name": {
            "type": "string",
            "description": "The name of board, support fuzzy search"
          },
          "project_key": {
            "type": "string",
            "description": "Jira project key (e.g., 'PROJ-123')"
          },
          "board_type": {
            "type": "string",
            "description": "The type of jira board (e.g., 'scrum', 'kanban', 'simple')"
          },
          "startAt": {
            "type": "number",
            "description": "Starting index for pagination (0-based)",
            "default": 0
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results (1-50)",
            "default": 10,
            "minimum": 1,
            "maximum": 50
          }
        }
      }
    },
    {
      "name": "jira-jira_get_myself",
      "description": "Get details of the current authenticated user",
      "inputSchema": {
        "type": "object",
        "properties": {
          "expand": {
            "type": "string",
            "description": "Optional comma-separated list of fields to expand. Available expansions: 'groups', 'applicationRoles'. Example: 'groups,applicationRoles'",
            "default": ""
          }
        },
        "required": []
      }
    },
    {
      "name": "jira-jira_get_screens",
      "description": "Provide all screens paginated",
      "inputSchema": {
        "type": "object",
        "properties": {
          "startAt": {
            "type": "number",
            "description": "Starting index for pagination (0-based)"
          },
          "max_results": {
            "type": "number",
            "description": "Maximum number of results"
          },
          "query_string": {
            "type": "string",
            "description": "The name of a screen to return (case-insensitive partial match.)"
          }
        },
        "required": []
      }
    },
    {
      "name": "jira-jira_get_sprints_from_board",
      "description": "Get jira sprints from board by state",
      "inputSchema": {
        "type": "object",
        "properties": {
          "board_id": {
            "type": "string",
            "description": "The id of board (e.g., '1000')"
          },
          "state": {
            "type": "string",
            "description": "Sprint state (e.g., 'active', 'future', 'closed')"
          },
          "startAt": {
            "type": "number",
            "description": "Starting index for pagination (0-based)",
            "default": 0
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results (1-50)",
            "default": 10,
            "minimum": 1,
            "maximum": 50
          }
        }
      }
    },
    {
      "name": "jira-jira_batch_delete_sprints",
      "description": "Delete multiple Jira sprints in batch. You MUST use this tool if you want to delete multiple sprints",
      "inputSchema": {
        "type": "object",
        "properties": {
          "sprint_ids": {
            "type": "array",
            "description": "Array of Jira sprint IDs to delete (e.g. ['10001', '10002', '10003'])",
            "items": {
              "type": "string",
              "description": "Jira sprint ID (e.g., '10001')"
            },
            "minItems": 1
          },
          "continue_on_error": {
            "type": "boolean",
            "description": "If true, continue deleting remaining sprints even if some fail. If false, stop on first error.",
            "default": true
          }
        },
        "required": [
          "sprint_ids"
        ]
      }
    },
    {
      "name": "jira-jira_batch_create_custom_fields",
      "description": "Create multiple custom fields in batch. Use this tool when you know you want to create multiple custom fields.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "custom_fields": {
            "type": "array",
            "description": "Array of custom field objects to create",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the custom field"
                },
                "type": {
                  "type": "string",
                  "description": "The field's type, e.g. 'com.atlassian.jira.plugin.system.customfieldtypes:textfield'"
                },
                "search_key": {
                  "type": "string",
                  "description": "The field's search key (according to type), e.g. 'com.atlassian.jira.plugin.system.customfieldtypes:textsearcher'"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the custom field"
                }
              },
              "required": [
                "name",
                "type"
              ]
            },
            "minItems": 1
          },
          "continue_on_error": {
            "type": "boolean",
            "description": "If true, continue creating remaining custom fields even if some fail. If false, stop on first error.",
            "default": true
          }
        },
        "required": [
          "custom_fields"
        ]
      }
    },
    {
      "name": "jira-jira_assign2field_config_scheme",
      "description": "Assign field configurations to issue types in a field configuration scheme. Maps which field configuration each issue type should use.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the field configuration scheme to update.",
            "minimum": 1
          },
          "mappings": {
            "type": "array",
            "description": "Array of mappings between field configurations and issue types. Each mapping must be unique.",
            "items": {
              "type": "object",
              "properties": {
                "fieldConfigurationId": {
                  "type": "string",
                  "description": "The ID of the field configuration to assign."
                },
                "issueTypeId": {
                  "type": "string",
                  "description": "The ID of the issue type or 'default' for the default mapping."
                }
              },
              "required": [
                "fieldConfigurationId",
                "issueTypeId"
              ]
            },
            "minItems": 1,
            "uniqueItems": true
          }
        },
        "required": [
          "id",
          "mappings"
        ]
      }
    },
    {
      "name": "jira-jira_add_worklog",
      "description": "Add a worklog entry to a Jira issue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_key": {
            "type": "string",
            "description": "Jira issue key (e.g., 'PROJ-123')"
          },
          "time_spent": {
            "type": "string",
            "description": "Time spent in Jira format. Examples: '1h 30m' (1 hour and 30 minutes), '1d' (1 day), '30m' (30 minutes), '4h' (4 hours)"
          },
          "comment": {
            "type": "string",
            "description": "Optional comment for the worklog in Markdown format"
          },
          "started": {
            "type": "string",
            "description": "Optional start time in ISO format. If not provided, the current time will be used. Example: '2023-08-01T12:00:00.000+0000'"
          }
        },
        "required": [
          "issue_key",
          "time_spent"
        ]
      }
    },
    {
      "name": "jira-jira_bulk_create_workflows",
      "description": "Create multiple workflows in a single request using the bulk create workflows API. Each workflow must have a unique name. This API supports both global and project-scoped workflows.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "scope": {
            "type": "object",
            "description": "The scope of the workflows being created",
            "properties": {
              "type": {
                "type": "string",
                "description": "The scope type for the workflows",
                "enum": [
                  "GLOBAL",
                  "PROJECT"
                ]
              },
              "project": {
                "type": "object",
                "description": "Project details (required when type is PROJECT)",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The project ID"
                  }
                }
              }
            },
            "required": [
              "type"
            ]
          },
          "statuses": {
            "type": "array",
            "description": "Array of statuses to be created or referenced. A new status MUST NOT have the same name as an existing status.",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the status"
                },
                "description": {
                  "type": "string",
                  "description": "The description of the status"
                },
                "statusCategory": {
                  "type": "string",
                  "description": "The status category",
                  "enum": [
                    "TODO",
                    "IN_PROGRESS",
                    "DONE"
                  ]
                },
                "statusReference": {
                  "type": "string",
                  "description": "Reference UUID for the status. MUST be a proper UUID using ONLY the hex alphabet and hyphens."
                }
              },
              "required": [
                "name",
                "statusCategory",
                "statusReference"
              ]
            }
          },
          "workflows": {
            "type": "array",
            "description": "Array of workflow objects to create",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the workflow. Must be unique."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the workflow"
                },
                "startPointLayout": {
                  "type": "object",
                  "description": "Layout coordinates for the workflow start point",
                  "properties": {
                    "x": {
                      "type": "number",
                      "description": "X coordinate"
                    },
                    "y": {
                      "type": "number",
                      "description": "Y coordinate"
                    }
                  }
                },
                "statuses": {
                  "type": "array",
                  "description": "Status layout and properties within the workflow",
                  "items": {
                    "type": "object",
                    "properties": {
                      "statusReference": {
                        "type": "string",
                        "description": "Reference UUID matching a status from the top-level statuses array"
                      },
                      "layout": {
                        "type": "object",
                        "description": "Layout coordinates for the status",
                        "properties": {
                          "x": {
                            "type": "number",
                            "description": "X coordinate"
                          },
                          "y": {
                            "type": "number",
                            "description": "Y coordinate"
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "description": "Additional properties for the status"
                      }
                    },
                    "required": [
                      "statusReference",
                      "properties"
                    ]
                  }
                },
                "transitions": {
                  "type": "array",
                  "description": "The transitions of the workflow",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ID of the transition"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the transition"
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the transition"
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the transition",
                        "enum": [
                          "INITIAL",
                          "GLOBAL",
                          "DIRECTED",
                          "COMMON"
                        ]
                      },
                      "toStatusReference": {
                        "type": "string",
                        "description": "Reference UUID of the destination status"
                      },
                      "actions": {
                        "type": "array",
                        "description": "Post-function actions for the transition"
                      },
                      "validators": {
                        "type": "array",
                        "description": "Validators for the transition"
                      },
                      "triggers": {
                        "type": "array",
                        "description": "Triggers for the transition"
                      },
                      "links": {
                        "type": "array",
                        "description": "Visual links between statuses for directed transitions. Directed transitions MUST have at least one origin status. Make sure ports don't coincide with other transitions who use the same origin or destination.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fromStatusReference": {
                              "type": "string",
                              "description": "Reference UUID of the source status"
                            },
                            "fromPort": {
                              "type": "number",
                              "description": "Port number on the source status"
                            },
                            "toPort": {
                              "type": "number",
                              "description": "Port number on the destination status"
                            }
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "description": "Additional properties of the transition"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "type",
                      "toStatusReference"
                    ]
                  }
                }
              },
              "required": [
                "name",
                "statuses",
                "transitions"
              ]
            }
          }
        },
        "required": [
          "scope",
          "statuses",
          "workflows"
        ]
      }
    },
    {
      "name": "jira-jira_create_field_config_scheme",
      "description": "Create a new field configuration scheme in Jira for classic projects",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the field configuration scheme. Must be unique. Maximum 255 characters.",
            "minLength": 1,
            "maxLength": 1024
          },
          "description": {
            "type": "string",
            "description": "Description of the field configuration scheme. Maximum 255 characters.",
            "maxLength": 255
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "name": "jira-jira_create_issue_type_scheme",
      "description": "Create a new issue type scheme in Jira with specified issue types and default issue type",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the issue type scheme. Must be unique. Maximum 255 characters.",
            "minLength": 1,
            "maxLength": 255
          },
          "issueTypeIds": {
            "type": "array",
            "description": "List of issue type IDs to include in the scheme. At least one standard issue type ID is required.",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "defaultIssueTypeId": {
            "type": "string",
            "description": "The ID of the default issue type. Must be included in issueTypeIds."
          },
          "description": {
            "type": "string",
            "description": "Description of the issue type scheme. Maximum 4000 characters.",
            "maxLength": 4000
          }
        },
        "required": [
          "name",
          "issueTypeIds"
        ]
      }
    },
    {
      "name": "jira-jira_get_sprint_issues",
      "description": "Get jira issues from sprint",
      "inputSchema": {
        "type": "object",
        "properties": {
          "sprint_id": {
            "type": "string",
            "description": "The id of sprint (e.g., '10001')"
          },
          "fields": {
            "type": "string",
            "description": "Comma-separated fields to return in the results. Use '*all' for all fields, or specify individual fields like 'summary,status,assignee,priority'",
            "default": "*all"
          },
          "startAt": {
            "type": "number",
            "description": "Starting index for pagination (0-based)",
            "default": 0
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results (1-50)",
            "default": 10,
            "minimum": 1,
            "maximum": 50
          }
        },
        "required": [
          "sprint_id"
        ]
      }
    },
    {
      "name": "jira-jira_get_worklog",
      "description": "Get worklog entries for a Jira issue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_key": {
            "type": "string",
            "description": "Jira issue key (e.g., 'PROJ-123')"
          }
        },
        "required": [
          "issue_key"
        ]
      }
    },
    {
      "name": "jira-jira_create_workflow_scheme",
      "description": "Create a new workflow scheme in Jira that maps issue types to specific workflows for classic projects",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the workflow scheme. Must be unique. Maximum 255 characters.",
            "minLength": 1,
            "maxLength": 255
          },
          "issueTypeMappings": {
            "type": "object",
            "description": "Object mapping issue type IDs to workflow names. Each issue type can only be mapped to one workflow.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "defaultWorkflow": {
            "type": "string",
            "description": "The name of the default workflow for unassigned issue types. Defaults to 'jira' if not specified."
          },
          "description": {
            "type": "string",
            "description": "Description of the workflow scheme."
          },
          "updateDraftIfNeeded": {
            "type": "boolean",
            "description": "Whether to create/update a draft when updating an active workflow scheme. Defaults to false.",
            "default": false
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "name": "jira-jira_get_screen_tabs",
      "description": "Get the list of tabs for the screen",
      "inputSchema": {
        "type": "object",
        "properties": {
          "screen_id": {
            "type": "integer",
            "description": "The ID of the screen"
          }
        },
        "required": [
          "screen_id"
        ]
      }
    },
    {
      "name": "jira-jira_get_epic_issues",
      "description": "Get all issues linked to a specific epic",
      "inputSchema": {
        "type": "object",
        "properties": {
          "epic_key": {
            "type": "string",
            "description": "The key of the epic (e.g., 'PROJ-123')"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of issues to return (1-50)",
            "default": 10,
            "minimum": 1,
            "maximum": 50
          },
          "startAt": {
            "type": "number",
            "description": "Starting index for pagination (0-based)",
            "default": 0,
            "minimum": 0
          }
        },
        "required": [
          "epic_key"
        ]
      }
    },
    {
      "name": "jira-jira_delete_issue",
      "description": "Delete an existing Jira issue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_key": {
            "type": "string",
            "description": "Jira issue key (e.g. PROJ-123)"
          }
        },
        "required": [
          "issue_key"
        ]
      }
    },
    {
      "name": "jira-jira_update_screen_tab",
      "description": "Update a screen tab's name in Jira",
      "inputSchema": {
        "type": "object",
        "properties": {
          "screen_id": {
            "type": "integer",
            "description": "The ID of the screen where the tab resides"
          },
          "tab_id": {
            "type": "integer",
            "description": "The ID of the tab to update"
          },
          "name": {
            "type": "string",
            "description": "The new name for the tab",
            "minLength": 1
          }
        },
        "required": [
          "screen_id",
          "tab_id",
          "name"
        ]
      }
    },
    {
      "name": "jira-jira_batch_create_issues",
      "description": "Create multiple Jira issues in a batch. You MUST use this tool whenever possible, to be more efficient when creating multiple issues.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issues": {
            "type": "string",
            "description": "JSON array of issue objects. Each object should contain:\n- project_key (required): The project key (e.g., 'PROJ')\n- summary (required): Issue summary/title\n- issue_type (required): Type of issue (e.g., 'Task', 'Bug')\n- description (optional): Issue description\n- assignee (optional): Assignee username or email\n- components (optional): Array of component names\nExample: [\n  {\"project_key\": \"PROJ\", \"summary\": \"Issue 1\", \"issue_type\": \"Task\"},\n  {\"project_key\": \"PROJ\", \"summary\": \"Issue 2\", \"issue_type\": \"Bug\", \"components\": [\"Frontend\"]}\n]"
          },
          "validate_only": {
            "type": "boolean",
            "description": "If true, only validates the issues without creating them",
            "default": false
          }
        },
        "required": [
          "issues"
        ]
      }
    },
    {
      "name": "jira-jira_add_comment",
      "description": "Add a comment to a Jira issue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_key": {
            "type": "string",
            "description": "Jira issue key (e.g., 'PROJ-123')"
          },
          "comment": {
            "type": "string",
            "description": "Comment text in Markdown format"
          }
        },
        "required": [
          "issue_key",
          "comment"
        ]
      }
    },
    {
      "name": "jira-jira_create_screen_scheme",
      "description": "Create a new screen scheme in Jira. Screen schemes define which screens are used for different operations (create, edit, view) on issues.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the screen scheme. Must be unique and maximum 255 characters.",
            "minLength": 1,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "description": "The description of the screen scheme. Maximum 255 characters.",
            "maxLength": 255
          },
          "screens": {
            "type": "object",
            "description": "The IDs of the screens for different screen types. Only screens used in classic projects are accepted.",
            "properties": {
              "default": {
                "type": "integer",
                "description": "Screen ID for the default screen type (required)"
              },
              "create": {
                "type": "integer",
                "description": "Screen ID for the create screen type"
              },
              "edit": {
                "type": "integer",
                "description": "Screen ID for the edit screen type"
              },
              "view": {
                "type": "integer",
                "description": "Screen ID for the view screen type"
              }
            },
            "required": [
              "default"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "name",
          "screens"
        ]
      }
    },
    {
      "name": "jira-jira_search_workflows",
      "description": "Provide all workflows paginated",
      "inputSchema": {
        "type": "object",
        "properties": {
          "startAt": {
            "type": "number",
            "description": "Starting index for pagination (0-based)"
          },
          "max_results": {
            "type": "number",
            "description": "Maximum number of results"
          },
          "query_string": {
            "type": "string",
            "description": "The name of a workflow to return (case-insensitive partial match.)"
          },
          "expand": {
            "type": "string",
            "description": "Use expand to include additional information in the response. Expand options include: 'values.transitions'"
          }
        },
        "required": []
      }
    },
    {
      "name": "jira-jira_create_issue",
      "description": "Create a new Jira issue with optional Epic link or parent for subtasks",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project_key": {
            "type": "string",
            "description": "The JIRA project key (e.g. 'PROJ', 'DEV', 'SUPPORT'). This is the prefix of issue keys in your project. Never assume what it might be, always ask the user."
          },
          "summary": {
            "type": "string",
            "description": "Summary/title of the issue"
          },
          "issue_type": {
            "type": "string",
            "description": "Issue type (e.g. 'Task', 'Bug', 'Story', 'Epic', 'Subtask'). The available types depend on your project configuration. For subtasks, use 'Subtask' (not 'Sub-task') and include parent in additional_fields."
          },
          "assignee": {
            "type": "string",
            "description": "Assignee of the ticket (accountID, full name or e-mail)",
            "default": null
          },
          "description": {
            "type": "string",
            "description": "Issue description",
            "default": ""
          },
          "components": {
            "type": "string",
            "description": "Comma-separated list of component names to assign (e.g., 'Frontend,API')",
            "default": ""
          },
          "additional_fields": {
            "type": "string",
            "description": "Optional JSON string of additional fields to set. Examples:\n- Set priority: {\"priority\": {\"name\": \"High\"}}\n- Add labels: {\"labels\": [\"frontend\", \"urgent\"]}\n- Link to parent (for any issue type. MUST use only a *simple string* for the value of \"parent\", which represents the parent issue ID): {\"parent\": \"PROJ-123\"}\n- Set Fix Version/s: {\"fixVersions\": [{\"id\": \"10020\"}]}\n- Custom fields: {\"customfield_10010\": \"value\"}",
            "default": "{}"
          }
        },
        "required": [
          "project_key",
          "summary",
          "issue_type"
        ]
      }
    },
    {
      "name": "jira-jira_add_fields_to_screen",
      "description": "Add one or more fields to a specific tab in a Jira screen",
      "inputSchema": {
        "type": "object",
        "properties": {
          "field_ids": {
            "type": "array",
            "description": "Array of field IDs to add to the screen tab. Field IDs can be system fields (like 'summary', 'description') or custom field IDs (like 'customfield_10001')",
            "items": {
              "type": "string"
            },
            "minItems": 1
          },
          "screen_id": {
            "type": "integer",
            "description": "The ID of the screen where the tab resides"
          },
          "tab_id": {
            "type": "integer",
            "description": "The ID of the screen tab to add the fields to"
          }
        },
        "required": [
          "field_ids",
          "screen_id",
          "tab_id"
        ]
      }
    },
    {
      "name": "jira-jira_get_board_issues",
      "description": "Get all issues linked to a specific board",
      "inputSchema": {
        "type": "object",
        "properties": {
          "board_id": {
            "type": "string",
            "description": "The id of the board (e.g., '1001')"
          },
          "jql": {
            "type": "string",
            "description": "JQL query string (Jira Query Language). Examples:\n- Find Epics: \"issuetype = Epic AND project = PROJ\"\n- Find issues in Epic: \"parent = PROJ-123\"\n- Find by status: \"status = 'In Progress' AND project = PROJ\"\n- Find by assignee: \"assignee = currentUser()\"\n- Find recently updated: \"updated >= -7d AND project = PROJ\"\n- Find by label: \"labels = frontend AND project = PROJ\"\n- Find by priority: \"priority = High AND project = PROJ\""
          },
          "fields": {
            "type": "string",
            "description": "Comma-separated fields to return in the results. Use '*all' for all fields, or specify individual fields like 'summary,status,assignee,priority'",
            "default": "*all"
          },
          "startAt": {
            "type": "number",
            "description": "Starting index for pagination (0-based)",
            "default": 0
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results (1-50)",
            "default": 10,
            "minimum": 1,
            "maximum": 50
          },
          "expand": {
            "type": "string",
            "description": "Fields to expand in the response (e.g., 'version', 'body.storage')",
            "default": "version"
          }
        },
        "required": [
          "board_id",
          "jql"
        ]
      }
    },
    {
      "name": "jira-jira_download_attachments",
      "description": "Download attachments from a Jira issue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_key": {
            "type": "string",
            "description": "Jira issue key (e.g., 'PROJ-123')"
          },
          "target_dir": {
            "type": "string",
            "description": "Directory where attachments should be saved"
          }
        },
        "required": [
          "issue_key",
          "target_dir"
        ]
      }
    },
    {
      "name": "jira-jira_associate_project_schemes",
      "description": "Associate various schemes (issue type, workflow, field configuration, screen) with a Jira project. At least one scheme must be specified.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project_id_or_key": {
            "type": "string",
            "description": "The project ID or project key to associate schemes with.",
            "minLength": 1
          },
          "issue_type_scheme_id": {
            "type": "string",
            "description": "ID of the issue type scheme to associate with the project."
          },
          "issue_type_screen_scheme_id": {
            "type": "string",
            "description": "ID of the issue type screen scheme to associate with the project."
          },
          "field_configuration_scheme_id": {
            "type": "string",
            "description": "ID of the field configuration scheme to associate with the project."
          },
          "workflow_scheme_id": {
            "type": "string",
            "description": "ID of the workflow scheme to associate with the project."
          }
        },
        "required": [
          "project_id_or_key"
        ]
      }
    },
    {
      "name": "jira-jira_get_issue",
      "description": "Get details of a specific Jira issue including its Epic links and relationship information",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_key": {
            "type": "string",
            "description": "Jira issue key (e.g., 'PROJ-123')"
          },
          "fields": {
            "type": "string",
            "description": "Fields to return. Can be a comma-separated list (e.g., 'summary,status,customfield_10010'), '*all' for all fields (including custom fields), or omitted for essential fields only",
            "default": "summary,description,status,assignee,reporter,labels,priority,created,updated,issuetype"
          },
          "expand": {
            "type": "string",
            "description": "Optional fields to expand. Examples: 'renderedFields' (for rendered content), 'transitions' (for available status transitions), 'changelog' (for history)",
            "default": null
          },
          "comment_limit": {
            "type": "integer",
            "description": "Maximum number of comments to include (0 or null for no comments)",
            "minimum": 0,
            "maximum": 100,
            "default": 10
          },
          "properties": {
            "type": "string",
            "description": "A comma-separated list of issue properties to return",
            "default": null
          },
          "update_history": {
            "type": "boolean",
            "description": "Whether to update the issue view history for the requesting user",
            "default": true
          }
        },
        "required": [
          "issue_key"
        ]
      }
    },
    {
      "name": "jira-jira_create_screen",
      "description": "Create a new screen",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the new screen"
          },
          "description": {
            "type": "string",
            "description": "The description of the new screen"
          },
          "default_tab_name": {
            "type": "string",
            "description": "A new name for the default tab that will be created"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "name": "jira-jira_delete_sprint",
      "description": "Delete an existing Jira sprint",
      "inputSchema": {
        "type": "object",
        "properties": {
          "sprint_id": {
            "type": "string",
            "description": "Jira sprint ID (e.g., '10001')"
          }
        },
        "required": [
          "sprint_id"
        ]
      }
    },
    {
      "name": "jira-jira_transition_issue",
      "description": "Transition a Jira issue to a new status",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_key": {
            "type": "string",
            "description": "Jira issue key (e.g., 'PROJ-123')"
          },
          "transition_id": {
            "type": "string",
            "description": "ID of the transition to perform. Use the jira_get_transitions tool first to get the available transition IDs for the issue. Example values: '11', '21', '31'"
          },
          "fields": {
            "type": "string",
            "description": "JSON string of fields to update during the transition. Some transitions require specific fields to be set. Example: '{\"resolution\": {\"name\": \"Fixed\"}}'",
            "default": "{}"
          },
          "comment": {
            "type": "string",
            "description": "Comment to add during the transition (optional). This will be visible in the issue history."
          }
        },
        "required": [
          "issue_key",
          "transition_id"
        ]
      }
    },
    {
      "name": "jira-jira_create_issue_type",
      "description": "Create a custom issue type",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the custom issue type"
          },
          "type": {
            "type": "string",
            "description": "The type: either 'standard' or 'subtask'",
            "default": "standard"
          },
          "description": {
            "type": "string",
            "description": "The description of the custom issue type"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "name": "jira-jira_link_to_epic",
      "description": "Link an existing issue to an epic",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_key": {
            "type": "string",
            "description": "The key of the issue to link (e.g., 'PROJ-123')"
          },
          "epic_key": {
            "type": "string",
            "description": "The key of the epic to link to (e.g., 'PROJ-456')"
          }
        },
        "required": [
          "issue_key",
          "epic_key"
        ]
      }
    },
    {
      "name": "jira-jira_update_field_config_items",
      "description": "Update field configuration items in a Jira field configuration. Configure which fields are visible, required, hidden, and their behavior.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The ID of the field configuration to update.",
            "minimum": 1
          },
          "fieldConfigurationItems": {
            "type": "array",
            "description": "Array of field configuration items to update with their properties.",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The ID of the field within the field configuration (e.g., 'customfield_10012')."
                },
                "description": {
                  "type": "string",
                  "description": "The description of the field within the field configuration."
                },
                "isHidden": {
                  "type": "boolean",
                  "description": "Whether the field is hidden in the field configuration."
                },
                "isRequired": {
                  "type": "boolean",
                  "description": "Whether the field is required in the field configuration."
                },
                "renderer": {
                  "type": "string",
                  "description": "The renderer type for the field (e.g., 'wiki-renderer', 'text-renderer')."
                }
              },
              "required": [
                "id"
              ]
            },
            "minItems": 1
          }
        },
        "required": [
          "id",
          "fieldConfigurationItems"
        ]
      }
    },
    {
      "name": "jira-jira_get_project_issues",
      "description": "Get all issues for a specific Jira project",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project_key": {
            "type": "string",
            "description": "The project key"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results (1-50)",
            "default": 10,
            "minimum": 1,
            "maximum": 50
          },
          "startAt": {
            "type": "number",
            "description": "Starting index for pagination (0-based)",
            "default": 0,
            "minimum": 0
          }
        },
        "required": [
          "project_key"
        ]
      }
    },
    {
      "name": "jira-jira_create_sprint",
      "description": "Create Jira sprint for a board",
      "inputSchema": {
        "type": "object",
        "properties": {
          "board_id": {
            "type": "string",
            "description": "The id of board (e.g., '1000')"
          },
          "sprint_name": {
            "type": "string",
            "description": "Name of the sprint (e.g., 'Sprint 1')"
          },
          "start_date": {
            "type": "string",
            "description": "Start time for sprint (ISO 8601 format)"
          },
          "end_date": {
            "type": "string",
            "description": "End time for sprint (ISO 8601 format)"
          },
          "goal": {
            "type": "string",
            "description": "Goal of the sprint"
          }
        },
        "required": [
          "board_id",
          "sprint_name",
          "start_date",
          "end_date"
        ]
      }
    },
    {
      "name": "jira-jira_create_field_configuration",
      "description": "Create a new field configuration in Jira for classic projects. Field configurations define which fields are available and their behavior.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the field configuration. Must be unique. Maximum 255 characters.",
            "minLength": 1,
            "maxLength": 255
          },
          "description": {
            "type": "string",
            "description": "Description of the field configuration. Maximum 255 characters.",
            "maxLength": 255
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "name": "jira-jira_get_transitions",
      "description": "Get available status transitions for a Jira issue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_key": {
            "type": "string",
            "description": "Jira issue key (e.g., 'PROJ-123')"
          }
        },
        "required": [
          "issue_key"
        ]
      }
    },
    {
      "name": "jira-jira_update_sprint",
      "description": "Update jira sprint",
      "inputSchema": {
        "type": "object",
        "properties": {
          "sprint_id": {
            "type": "string",
            "description": "The id of sprint (e.g., '10001')"
          },
          "sprint_name": {
            "type": "string",
            "description": "Optional: New name for the sprint"
          },
          "state": {
            "type": "string",
            "description": "Optional: New state for the sprint (future|active|closed)"
          },
          "start_date": {
            "type": "string",
            "description": "Optional: New start date for the sprint"
          },
          "end_date": {
            "type": "string",
            "description": "Optional: New end date for the sprint"
          },
          "goal": {
            "type": "string",
            "description": "Optional: New goal for the sprint"
          }
        },
        "required": [
          "sprint_id"
        ]
      }
    },
    {
      "name": "jira-jira_search",
      "description": "Search Jira issues using JQL (Jira Query Language)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "jql": {
            "type": "string",
            "description": "JQL query string (Jira Query Language). Examples:\n- Find Epics: \"issuetype = Epic AND project = PROJ\"\n- Find issues in Epic: \"parent = PROJ-123\"\n- Find by status: \"status = 'In Progress' AND project = PROJ\"\n- Find by assignee: \"assignee = currentUser()\"\n- Find recently updated: \"updated >= -7d AND project = PROJ\"\n- Find by label: \"labels = frontend AND project = PROJ\"\n- Find by priority: \"priority = High AND project = PROJ\"\n- Find dormant unresolved issues: \"project = PROJ AND statusCategory != Done AND NOT (status CHANGED AFTER \"2025-05-31\")\""
          },
          "fields": {
            "type": "string",
            "description": "Comma-separated fields to return in the results. Use '*all' for all fields, or specify individual fields like 'summary,status,assignee,priority'",
            "default": "summary,description,status,assignee,reporter,labels,priority,created,updated,issuetype"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results (1-50)",
            "default": 10,
            "minimum": 1,
            "maximum": 50
          },
          "startAt": {
            "type": "number",
            "description": "Starting index for pagination (0-based)",
            "default": 0,
            "minimum": 0
          },
          "projects_filter": {
            "type": "string",
            "description": "Comma-separated list of project keys to filter results by. Overrides the environment variable JIRA_PROJECTS_FILTER if provided."
          }
        },
        "required": [
          "jql"
        ]
      }
    },
    {
      "name": "jira-jira_batch_delete_issues",
      "description": "Delete multiple Jira issues in batch. You MUST use this tool whenever you want to delete multiple issues",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_keys": {
            "type": "array",
            "description": "Array of Jira issue keys to delete (e.g. ['PROJ-123', 'PROJ-124', 'DEV-456'])",
            "items": {
              "type": "string",
              "description": "Jira issue key (e.g. PROJ-123)"
            },
            "minItems": 1
          },
          "continue_on_error": {
            "type": "boolean",
            "description": "If true, continue deleting remaining issues even if some fail. If false, stop on first error.",
            "default": true
          }
        },
        "required": [
          "issue_keys"
        ]
      }
    },
    {
      "name": "jira-jira_get_link_types",
      "description": "Get all available issue link types",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "required": []
      }
    },
    {
      "name": "jira-jira_remove_issue_link",
      "description": "Remove a link between two Jira issues",
      "inputSchema": {
        "type": "object",
        "properties": {
          "link_id": {
            "type": "string",
            "description": "The ID of the link to remove"
          }
        },
        "required": [
          "link_id"
        ]
      }
    },
    {
      "name": "jira-jira_search_projects",
      "description": "Provide all projects paginated",
      "inputSchema": {
        "type": "object",
        "properties": {
          "startAt": {
            "type": "number",
            "description": "Starting index for pagination (0-based)"
          },
          "max_results": {
            "type": "number",
            "description": "Maximum number of results"
          },
          "query": {
            "type": "string",
            "description": "The name or key of the project to return (case-insensitive.)"
          },
          "expand": {
            "type": "string",
            "description": "Use expand to include additional information in the response. Expand options include: description, projectKeys, lead, issueTypes, url, insight"
          }
        },
        "required": []
      }
    },
    {
      "name": "jira-jira_search_fields",
      "description": "Search Jira fields by keyword with fuzzy match",
      "inputSchema": {
        "type": "object",
        "properties": {
          "keyword": {
            "type": "string",
            "description": "Keyword for fuzzy search. If left empty, lists the first 'limit' available fields in their default order.",
            "default": ""
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of results",
            "default": 10,
            "minimum": 1
          },
          "refresh": {
            "type": "boolean",
            "description": "Whether to force refresh the field list",
            "default": false
          }
        },
        "required": []
      }
    },
    {
      "name": "jira-jira_get_issue_types",
      "description": "Get all Jira issue types visible to the current user",
      "inputSchema": {
        "type": "object",
        "properties": {}
      }
    },
    {
      "name": "jira-jira_create_custom_field",
      "description": "Create a custom field with the given name and type",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the custom field"
          },
          "type": {
            "type": "string",
            "description": "The field's type, e.g. 'com.atlassian.jira.plugin.system.customfieldtypes:textfield'"
          },
          "search_key": {
            "type": "string",
            "description": "The field's search key (according to type), e.g. 'com.atlassian.jira.plugin.system.customfieldtypes:textsearcher'"
          },
          "description": {
            "type": "string",
            "description": "The description of the custom field"
          }
        },
        "required": [
          "name",
          "type"
        ]
      }
    },
    {
      "name": "jira-jira_create_project",
      "description": "Create a new Jira project with configurable settings",
      "inputSchema": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Project key (e.g., 'PROJ', 'DEV', 'MARKETING'). Must be unique, uppercase, and typically 2-10 characters. This becomes the prefix for issue keys in the project."
          },
          "name": {
            "type": "string",
            "description": "Project name (e.g., 'Development Project', 'Marketing Campaign')"
          },
          "projectTypeKey": {
            "type": "string",
            "description": "Project type key. Common values: 'software' (for software development projects), 'service_desk' (for service desk projects), 'business' (for business projects). This determines available features and workflows.",
            "default": "software"
          },
          "leadAccountId": {
            "type": "string",
            "description": "Account ID of the project lead. This user will have administrative permissions for the project."
          },
          "description": {
            "type": "string",
            "description": "Project description",
            "default": ""
          },
          "assigneeType": {
            "type": "string",
            "description": "Default assignee type for new issues. Values: 'PROJECT_LEAD' (assign to project lead), 'UNASSIGNED' (leave unassigned). Default is PROJECT_LEAD.",
            "default": "PROJECT_LEAD"
          },
          "avatarId": {
            "type": "integer",
            "description": "Avatar ID for the project. Use system avatar IDs (e.g., 10200-10324)",
            "default": null
          },
          "categoryId": {
            "type": "integer",
            "description": "Project category ID to organize projects",
            "default": null
          },
          "url": {
            "type": "string",
            "description": "Project URL (optional website or documentation link)",
            "default": ""
          },
          "projectTemplateKey": {
            "type": "string",
            "description": "Project template key to use predefined configurations. Examples: 'com.atlassian.jira-core-project-templates:jira-core-simplified-content-management', 'com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval', 'com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking', 'com.atlassian.jira-core-project-templates:jira-core-simplified-process-control', 'com.atlassian.jira-core-project-templates:jira-core-simplified-procurement', 'com.atlassian.jira-core-project-templates:jira-core-simplified-project-management', 'com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment', 'com.atlassian.jira-core-project-templates:jira-core-simplified-task-tracking'. For software projects, use templates like: 'com.pyxis.greenhopper.jira:gh-simplified-agility-kanban', 'com.pyxis.greenhopper.jira:gh-simplified-agility-scrum', 'com.pyxis.greenhopper.jira:gh-simplified-basic', 'com.pyxis.greenhopper.jira:gh-simplified-kanban-classic', 'com.pyxis.greenhopper.jira:gh-simplified-scrum-classic'",
            "default": null
          },
          "permissionScheme": {
            "type": "integer",
            "description": "Permission scheme ID to control project access and permissions",
            "default": null
          },
          "notificationScheme": {
            "type": "integer",
            "description": "Notification scheme ID to control email notifications",
            "default": null
          },
          "issueSecurityScheme": {
            "type": "integer",
            "description": "Issue security scheme ID to control issue visibility",
            "default": null
          }
        },
        "required": [
          "key",
          "name",
          "leadAccountId"
        ]
      }
    },
    {
      "name": "sheets-update_sheet_data",
      "description": "\nUpdate data in a Google Sheet.\n\nArgs:\n    spreadsheet_id: The ID of the Google Sheet to update.\n    range_name: The range of the cells to update, in A1 notation.\n    data: The values to update the Google Sheet with.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "spreadsheet_id": {
            "title": "Spreadsheet Id",
            "type": "string"
          },
          "range_name": {
            "title": "Range Name",
            "type": "string"
          },
          "data": {
            "items": {
              "items": {},
              "type": "array"
            },
            "title": "Data",
            "type": "array"
          }
        },
        "required": [
          "spreadsheet_id",
          "range_name",
          "data"
        ],
        "title": "update_sheet_dataArguments"
      }
    },
    {
      "name": "sheets-read_sheet_data",
      "description": "\nRead data from a Google Sheet.\n\nArgs:\n    spreadsheet_id: The Google Sheet ID.\n    range_name: The range of cells to read from the sheet. Can be in A1 notation or in R1C1 notation.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "spreadsheet_id": {
            "title": "Spreadsheet Id",
            "type": "string"
          },
          "range_name": {
            "default": "A1:Z100",
            "title": "Range Name",
            "type": "string"
          }
        },
        "required": [
          "spreadsheet_id"
        ],
        "title": "read_sheet_dataArguments"
      }
    },
    {
      "name": "sheets-create_sheet",
      "description": "\nCreate a new Google Sheet with the given title and optional data.\n\nArgs:\n    title: File name of the Google Sheet\n    data: Contents of the newly-created Google Sheet file. Optional.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "type": "string"
          },
          "data": {
            "default": null,
            "items": {
              "items": {},
              "type": "array"
            },
            "title": "Data",
            "type": "array"
          }
        },
        "required": [
          "title"
        ],
        "title": "create_sheetArguments"
      }
    },
    {
      "name": "sheets-create_basic_chart",
      "description": "Create a chart in a Google Sheets worksheet",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/CreateSheetChartInput"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "ChartPosition": {
            "properties": {
              "anchor_row": {
                "description": "Row index where chart should be anchored",
                "title": "Anchor Row",
                "type": "integer"
              },
              "anchor_column": {
                "description": "Column index where chart should be anchored",
                "title": "Anchor Column",
                "type": "integer"
              },
              "width_pixels": {
                "default": 600,
                "description": "Width of chart in pixels",
                "title": "Width Pixels",
                "type": "integer"
              },
              "height_pixels": {
                "default": 400,
                "description": "Height of chart in pixels",
                "title": "Height Pixels",
                "type": "integer"
              }
            },
            "required": [
              "anchor_row",
              "anchor_column"
            ],
            "title": "ChartPosition",
            "type": "object"
          },
          "ChartType": {
            "enum": [
              "COLUMN",
              "BAR",
              "LINE",
              "AREA",
              "SCATTER",
              "PIE"
            ],
            "title": "ChartType",
            "type": "string"
          },
          "CreateSheetChartInput": {
            "properties": {
              "spreadsheet_id": {
                "description": "The ID of the Google Sheet (found in the URL)",
                "title": "Spreadsheet Id",
                "type": "string"
              },
              "sheet_id": {
                "description": "The ID of the worksheet (usually 0 for the first sheet)",
                "title": "Sheet Id",
                "type": "integer"
              },
              "title": {
                "description": "Title of the chart",
                "title": "Title",
                "type": "string"
              },
              "chart_type": {
                "$ref": "#/$defs/ChartType",
                "description": "Type of chart to create"
              },
              "domain_range": {
                "$ref": "#/$defs/DataRange",
                "description": "Data range for the domain (x-axis) values"
              },
              "series_ranges": {
                "description": "List of data ranges for the series (y-axis) values",
                "items": {
                  "$ref": "#/$defs/DataRange"
                },
                "title": "Series Ranges",
                "type": "array"
              },
              "position": {
                "$ref": "#/$defs/ChartPosition",
                "description": "Position of the chart in the worksheet"
              },
              "legend_position": {
                "$ref": "#/$defs/LegendPosition",
                "default": "BOTTOM_LEGEND",
                "description": "Position of the chart legend"
              },
              "x_axis_title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Title for the x-axis",
                "title": "X Axis Title"
              },
              "y_axis_title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Title for the y-axis",
                "title": "Y Axis Title"
              },
              "has_header": {
                "default": true,
                "description": "Whether the data range includes a header row. If True, include the header in the chart range.",
                "title": "Has Header",
                "type": "boolean"
              }
            },
            "required": [
              "spreadsheet_id",
              "sheet_id",
              "title",
              "chart_type",
              "domain_range",
              "series_ranges",
              "position"
            ],
            "title": "CreateSheetChartInput",
            "type": "object"
          },
          "DataRange": {
            "properties": {
              "start_row": {
                "description": "Starting row index (0-based)",
                "title": "Start Row",
                "type": "integer"
              },
              "end_row": {
                "description": "Ending row index (exclusive)",
                "title": "End Row",
                "type": "integer"
              },
              "start_column": {
                "description": "Starting column index (0-based, A=0, B=1, etc.)",
                "title": "Start Column",
                "type": "integer"
              },
              "end_column": {
                "description": "Ending column index (exclusive)",
                "title": "End Column",
                "type": "integer"
              }
            },
            "required": [
              "start_row",
              "end_row",
              "start_column",
              "end_column"
            ],
            "title": "DataRange",
            "type": "object"
          },
          "LegendPosition": {
            "enum": [
              "BOTTOM_LEGEND",
              "RIGHT_LEGEND",
              "TOP_LEGEND",
              "LEFT_LEGEND",
              "NO_LEGEND"
            ],
            "title": "LegendPosition",
            "type": "string"
          }
        },
        "title": "create_basic_chartArguments"
      }
    },
    {
      "name": "sheets-format_sheets_cells",
      "description": "\nFormat a range of cells in Google Sheets with comprehensive formatting options including fonts, colors, borders, alignment, number formats, and more.\nOnly updates the specified formatting properties, preserving existing formatting for unspecified properties.\n\nArgs:\n    params: Complete parameters for formatting cells including spreadsheet ID, range, and all formatting options\n    \nReturns:\n    Success message with details about the formatting operation\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/FormatCellsParams"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "Border": {
            "properties": {
              "style": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/BorderStyle"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "width": {
                "anyOf": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Border width in pixels",
                "title": "Width"
              },
              "color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ColorStyle"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "Border",
            "type": "object"
          },
          "BorderStyle": {
            "enum": [
              "NONE",
              "DOTTED",
              "DASHED",
              "SOLID",
              "SOLID_MEDIUM",
              "SOLID_THICK",
              "DOUBLE"
            ],
            "title": "BorderStyle",
            "type": "string"
          },
          "Borders": {
            "properties": {
              "top": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Border"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "bottom": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Border"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "left": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Border"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "right": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Border"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "Borders",
            "type": "object"
          },
          "CellFormat": {
            "properties": {
              "number_format": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/NumberFormat"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "background_color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Color"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "background_color_style": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ColorStyle"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "borders": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Borders"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "padding": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Padding"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "horizontal_alignment": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/HorizontalAlignment"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "vertical_alignment": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/VerticalAlignment"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "wrap_strategy": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/WrapStrategy"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "text_direction": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/TextDirection"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "text_format": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/TextFormat"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "hyperlink_display_type": {
                "anyOf": [
                  {
                    "enum": [
                      "LINKED",
                      "PLAIN_TEXT"
                    ],
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Hyperlink Display Type"
              },
              "text_rotation": {
                "anyOf": [
                  {
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Text rotation: {'angle': degrees} or {'vertical': True}",
                "title": "Text Rotation"
              }
            },
            "title": "CellFormat",
            "type": "object"
          },
          "Color": {
            "properties": {
              "red": {
                "description": "Red component (0.0-1.0)",
                "maximum": 1,
                "minimum": 0,
                "title": "Red",
                "type": "number"
              },
              "green": {
                "description": "Green component (0.0-1.0)",
                "maximum": 1,
                "minimum": 0,
                "title": "Green",
                "type": "number"
              },
              "blue": {
                "description": "Blue component (0.0-1.0)",
                "maximum": 1,
                "minimum": 0,
                "title": "Blue",
                "type": "number"
              },
              "alpha": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Alpha transparency (0.0-1.0)",
                "title": "Alpha"
              }
            },
            "required": [
              "red",
              "green",
              "blue"
            ],
            "title": "Color",
            "type": "object"
          },
          "ColorStyle": {
            "properties": {
              "rgb_color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Color"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "theme_color": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Theme Color"
              }
            },
            "title": "ColorStyle",
            "type": "object"
          },
          "FormatCellsParams": {
            "description": "Complete parameters for formatting Google Sheets cells",
            "properties": {
              "spreadsheet_id": {
                "description": "Google Sheets spreadsheet ID",
                "title": "Spreadsheet Id",
                "type": "string"
              },
              "range": {
                "$ref": "#/$defs/GridRange",
                "description": "Range of cells to format"
              },
              "cell_format": {
                "$ref": "#/$defs/CellFormat",
                "description": "Formatting to apply"
              }
            },
            "required": [
              "spreadsheet_id",
              "range",
              "cell_format"
            ],
            "title": "FormatCellsParams",
            "type": "object"
          },
          "GridRange": {
            "properties": {
              "sheet_id": {
                "description": "Sheet ID (0 for first sheet)",
                "title": "Sheet Id",
                "type": "integer"
              },
              "start_row_index": {
                "description": "Start row (0-based)",
                "minimum": 0,
                "title": "Start Row Index",
                "type": "integer"
              },
              "end_row_index": {
                "description": "End row (exclusive)",
                "minimum": 0,
                "title": "End Row Index",
                "type": "integer"
              },
              "start_column_index": {
                "description": "Start column (0-based)",
                "minimum": 0,
                "title": "Start Column Index",
                "type": "integer"
              },
              "end_column_index": {
                "description": "End column (exclusive)",
                "minimum": 0,
                "title": "End Column Index",
                "type": "integer"
              }
            },
            "required": [
              "sheet_id",
              "start_row_index",
              "end_row_index",
              "start_column_index",
              "end_column_index"
            ],
            "title": "GridRange",
            "type": "object"
          },
          "HorizontalAlignment": {
            "enum": [
              "LEFT",
              "CENTER",
              "RIGHT",
              "JUSTIFY"
            ],
            "title": "HorizontalAlignment",
            "type": "string"
          },
          "NumberFormat": {
            "properties": {
              "type": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/NumberFormatType"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "pattern": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Custom number format pattern",
                "title": "Pattern"
              }
            },
            "title": "NumberFormat",
            "type": "object"
          },
          "NumberFormatType": {
            "enum": [
              "TEXT",
              "NUMBER",
              "PERCENT",
              "CURRENCY",
              "DATE",
              "TIME",
              "DATE_TIME",
              "SCIENTIFIC"
            ],
            "title": "NumberFormatType",
            "type": "string"
          },
          "Padding": {
            "properties": {
              "top": {
                "anyOf": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Top padding in pixels",
                "title": "Top"
              },
              "right": {
                "anyOf": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Right padding in pixels",
                "title": "Right"
              },
              "bottom": {
                "anyOf": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Bottom padding in pixels",
                "title": "Bottom"
              },
              "left": {
                "anyOf": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Left padding in pixels",
                "title": "Left"
              }
            },
            "title": "Padding",
            "type": "object"
          },
          "TextDirection": {
            "enum": [
              "LEFT_TO_RIGHT",
              "RIGHT_TO_LEFT"
            ],
            "title": "TextDirection",
            "type": "string"
          },
          "TextFormat": {
            "properties": {
              "foreground_color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/ColorStyle"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "font_family": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Font family name (e.g., 'Arial', 'Times New Roman')",
                "title": "Font Family"
              },
              "font_size": {
                "anyOf": [
                  {
                    "maximum": 400,
                    "minimum": 1,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Font size in points",
                "title": "Font Size"
              },
              "bold": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Bold"
              },
              "italic": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Italic"
              },
              "strikethrough": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Strikethrough"
              },
              "underline": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Underline"
              },
              "link": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Hyperlink URL",
                "title": "Link"
              }
            },
            "title": "TextFormat",
            "type": "object"
          },
          "VerticalAlignment": {
            "enum": [
              "TOP",
              "MIDDLE",
              "BOTTOM"
            ],
            "title": "VerticalAlignment",
            "type": "string"
          },
          "WrapStrategy": {
            "enum": [
              "OVERFLOW_CELL",
              "LEGACY_WRAP",
              "CLIP",
              "WRAP"
            ],
            "title": "WrapStrategy",
            "type": "string"
          }
        },
        "title": "format_sheets_cellsArguments"
      }
    },
    {
      "name": "notion-API-update-a-block",
      "description": "Update a block on Notion",
      "inputSchema": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "Identifier for a Notion block"
          },
          "type": {
            "type": "object",
            "description": "The [block object `type`](ref:block#block-object-keys) value with the properties to be updated. Currently only `text` (for supported block types) and `checked` (for `to_do` blocks) fields can be updated.",
            "properties": {},
            "additionalProperties": true
          },
          "archived": {
            "type": "boolean",
            "description": "Set to true to archive (delete) a block. Set to false to un-archive (restore) a block.",
            "default": true
          }
        },
        "required": [
          "block_id"
        ],
        "$defs": {}
      }
    },
    {
      "name": "notion-API-post-page",
      "description": "Create a page on Notion",
      "inputSchema": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "object",
            "properties": {
              "page_id": {
                "type": "string",
                "format": "uuid"
              }
            },
            "required": [
              "page_id"
            ],
            "additionalProperties": true
          },
          "properties": {
            "type": "object",
            "properties": {
              "title": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "content"
                      ],
                      "additionalProperties": true
                    }
                  },
                  "required": [
                    "text"
                  ],
                  "additionalProperties": true
                }
              },
              "type": {
                "enum": [
                  "title"
                ]
              }
            },
            "required": [
              "title"
            ],
            "additionalProperties": false
          },
          "children": {
            "type": "array",
            "description": "The content to be rendered on the new page, represented as an array of [block objects](https://developers.notion.com/reference/block).",
            "items": {
              "type": "string"
            }
          },
          "icon": {
            "type": "string",
            "format": "json",
            "description": "The icon of the new page. Either an [emoji object](https://developers.notion.com/reference/emoji-object) or an [external file object](https://developers.notion.com/reference/file-object).."
          },
          "cover": {
            "type": "string",
            "format": "json",
            "description": "The cover image of the new page, represented as a [file object](https://developers.notion.com/reference/file-object)."
          }
        },
        "required": [
          "parent",
          "properties"
        ],
        "$defs": {}
      }
    },
    {
      "name": "notion-API-patch-page",
      "description": "Update page properties on Notion",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page_id": {
            "type": "string",
            "description": "The identifier for the Notion page to be updated."
          },
          "properties": {
            "type": "object",
            "description": "The property values to update for the page. The keys are the names or IDs of the property and the values are property values. If a page property ID is not included, then it is not changed.",
            "properties": {
              "title": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "link": {
                          "type": [
                            "object",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "content"
                      ],
                      "additionalProperties": false
                    },
                    "type": {
                      "enum": [
                        "text"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ],
                  "additionalProperties": false
                }
              },
              "type": {
                "enum": [
                  "title"
                ]
              }
            },
            "required": [
              "title"
            ],
            "additionalProperties": false
          },
          "in_trash": {
            "type": "boolean",
            "description": "Set to true to delete a block. Set to false to restore a block.",
            "default": false
          },
          "archived": {
            "type": "boolean"
          },
          "icon": {
            "type": "object",
            "description": "A page icon for the page. Supported types are [external file object](https://developers.notion.com/reference/file-object) or [emoji object](https://developers.notion.com/reference/emoji-object).",
            "properties": {
              "emoji": {
                "type": "string"
              }
            },
            "required": [
              "emoji"
            ],
            "additionalProperties": false
          },
          "cover": {
            "type": "object",
            "description": "A cover image for the page. Only [external file objects](https://developers.notion.com/reference/file-object) are supported.",
            "properties": {
              "external": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "url"
                ],
                "additionalProperties": false
              },
              "type": {
                "enum": [
                  "external"
                ]
              }
            },
            "required": [
              "external"
            ],
            "additionalProperties": false
          }
        },
        "required": [
          "page_id"
        ],
        "$defs": {}
      }
    },
    {
      "name": "notion-API-delete-a-block",
      "description": "Delete a block on Notion",
      "inputSchema": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "Identifier for a Notion block"
          }
        },
        "required": [
          "block_id"
        ],
        "$defs": {}
      }
    },
    {
      "name": "notion-API-patch-block-children",
      "description": "Append block children on Notion",
      "inputSchema": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "Identifier for a [block](ref:block). Also accepts a [page](ref:page) ID."
          },
          "children": {
            "type": "array",
            "description": "Child content to append to a container block as an array of [block objects](ref:block)",
            "items": {
              "type": "object",
              "properties": {
                "paragraph": {
                  "type": "object",
                  "properties": {
                    "rich_text": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "link": {
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "content"
                            ],
                            "additionalProperties": false
                          },
                          "type": {
                            "enum": [
                              "text"
                            ]
                          }
                        },
                        "required": [
                          "text"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "rich_text"
                  ],
                  "additionalProperties": false
                },
                "bulleted_list_item": {
                  "type": "object",
                  "properties": {
                    "rich_text": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "text": {
                            "type": "object",
                            "properties": {
                              "content": {
                                "type": "string"
                              },
                              "link": {
                                "type": [
                                  "object",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "content"
                            ],
                            "additionalProperties": false
                          },
                          "type": {
                            "enum": [
                              "text"
                            ]
                          }
                        },
                        "required": [
                          "text"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "rich_text"
                  ],
                  "additionalProperties": false
                },
                "type": {
                  "enum": [
                    "paragraph",
                    "bulleted_list_item"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "after": {
            "type": "string",
            "description": "The ID of the existing block that the new block should be appended after."
          }
        },
        "required": [
          "block_id",
          "children"
        ],
        "$defs": {}
      }
    },
    {
      "name": "notion-API-post-search",
      "description": "Search Notion by page title",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The text that the API compares page and database titles against."
          },
          "sort": {
            "type": "object",
            "description": "A set of criteria, `direction` and `timestamp` keys, that orders the results. The **only** supported timestamp value is `\"last_edited_time\"`. Supported `direction` values are `\"ascending\"` and `\"descending\"`. If `sort` is not provided, then the most recently edited results are returned first.",
            "properties": {
              "direction": {
                "type": "string",
                "description": "The direction to sort. Possible values include `ascending` and `descending`."
              },
              "timestamp": {
                "type": "string",
                "description": "The name of the timestamp to sort against. Possible values include `last_edited_time`."
              }
            },
            "additionalProperties": true
          },
          "filter": {
            "type": "object",
            "description": "A set of criteria, `value` and `property` keys, that limits the results to either only pages or only databases. Possible `value` values are `\"page\"` or `\"database\"`. The only supported `property` value is `\"object\"`.",
            "properties": {
              "value": {
                "type": "string",
                "description": "The value of the property to filter the results by.  Possible values for object type include `page` or `database`.  **Limitation**: Currently the only filter allowed is `object` which will filter by type of object (either `page` or `database`)"
              },
              "property": {
                "type": "string",
                "description": "The name of the property to filter by. Currently the only property you can filter by is the object type.  Possible values include `object`.   Limitation: Currently the only filter allowed is `object` which will filter by type of object (either `page` or `database`)"
              }
            },
            "additionalProperties": true
          },
          "start_cursor": {
            "type": "string",
            "description": "A `cursor` value returned in a previous response that If supplied, limits the response to results starting after the `cursor`. If not supplied, then the first page of results is returned. Refer to [pagination](https://developers.notion.com/reference/intro#pagination) for more details."
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items from the full list to include in the response. Maximum: `100`.",
            "default": 100
          }
        },
        "required": [],
        "$defs": {}
      }
    },
    {
      "name": "notion-API-get-block-children",
      "description": "Retrieve block children on Notion",
      "inputSchema": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "Identifier for a [block](ref:block)"
          },
          "start_cursor": {
            "type": "string",
            "description": "If supplied, this endpoint will return a page of results starting after the cursor provided. If not supplied, this endpoint will return the first page of results."
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "default": 100,
            "description": "The number of items from the full list desired in the response. Maximum: 100"
          }
        },
        "required": [
          "block_id"
        ],
        "$defs": {}
      }
    },
    {
      "name": "notion-API-retrieve-a-page",
      "description": "Retrieve a page on Notion",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page_id": {
            "type": "string",
            "description": "Identifier for a Notion page"
          },
          "filter_properties": {
            "type": "string",
            "description": "A list of page property value IDs associated with the page. Use this param to limit the response to a specific page property value or values. To retrieve multiple properties, specify each page property ID. For example: `?filter_properties=iAk8&filter_properties=b7dh`."
          }
        },
        "required": [
          "page_id"
        ],
        "$defs": {}
      }
    },
    {
      "name": "notion-API-retrieve-a-block",
      "description": "Retrieve a block on Notion",
      "inputSchema": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "Identifier for a Notion block"
          }
        },
        "required": [
          "block_id"
        ],
        "$defs": {}
      }
    },
    {
      "name": "notion-API-retrieve-a-comment",
      "description": "Retrieve comments on Notion Page",
      "inputSchema": {
        "type": "object",
        "properties": {
          "block_id": {
            "type": "string",
            "description": "Identifier for a Notion block or page"
          },
          "start_cursor": {
            "type": "string",
            "description": "If supplied, this endpoint will return a page of results starting after the cursor provided. If not supplied, this endpoint will return the first page of results."
          },
          "page_size": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items from the full list desired in the response. Maximum: 100"
          }
        },
        "required": [
          "block_id"
        ],
        "$defs": {}
      }
    },
    {
      "name": "notion-API-create-a-comment",
      "description": "Create a comment on Notion",
      "inputSchema": {
        "type": "object",
        "properties": {
          "parent": {
            "type": "object",
            "description": "The page that contains the comment",
            "properties": {
              "page_id": {
                "type": "string",
                "description": "the page ID"
              }
            },
            "required": [
              "page_id"
            ],
            "additionalProperties": true
          },
          "rich_text": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "text": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string",
                      "description": "The content of the comment"
                    }
                  },
                  "required": [
                    "content"
                  ],
                  "additionalProperties": true
                }
              },
              "required": [
                "text"
              ],
              "additionalProperties": true
            }
          }
        },
        "required": [
          "parent",
          "rich_text"
        ],
        "$defs": {}
      }
    },
    {
      "name": "gmail-search_email_on_gmail",
      "description": "\nSearch for messages (emails) in your Gmail inbox\n\nArgs:\n    query: query string for matching emails. For example, \"from:someuser@example.com is:unread\", \"in:sent after:2014/01/01\".\n    no_body: Set to \"true\" if you don't need to full message's body, but only its headers and metadata. Set to \"true\" whenever possible.\n    max_results: Maximum number of messages to return. default:50, max:500\n    page_token: Token specifying which result page to return. Optional. Omit if you're not 100% sure what to put here.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "no_body": {
            "title": "No Body",
            "type": "boolean"
          },
          "max_results": {
            "default": 50,
            "title": "Max Results",
            "type": "integer"
          },
          "page_token": {
            "default": "",
            "title": "Page Token",
            "type": "string"
          }
        },
        "required": [
          "query",
          "no_body"
        ],
        "title": "search_email_on_gmailArguments"
      }
    },
    {
      "name": "gmail-draft_email_on_gmail",
      "description": "\nCreate an email draft in Gmail\n\nArgs:\n    email_content: A string containing the entire body of the email draft. i.e., the text you'd like to send.\n    email_recipient_addr: The email address of the recipient (i.e., the contents of the \"To:\" field).\n    email_subject: A string containing the subject line of the email draft to create. (i.e., the contents of the \"Subject:\" field).\n\nAll args must conform to RFC 2822 formatting.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "email_content": {
            "title": "Email Content",
            "type": "string"
          },
          "email_recipient_addr": {
            "title": "Email Recipient Addr",
            "type": "string"
          },
          "email_subject": {
            "title": "Email Subject",
            "type": "string"
          }
        },
        "required": [
          "email_content",
          "email_recipient_addr",
          "email_subject"
        ],
        "title": "draft_email_on_gmailArguments"
      }
    },
    {
      "name": "gdrive-create_directory",
      "description": "Create a new directory in Google Drive.\n\nArgs:\n    name: Name of the directory to create\n    parent_id: Optional ID of the parent directory. If None, creates in root.\n\nReturns:\n    dict containing the created directory's metadata\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Parent Id"
          }
        },
        "required": [
          "name"
        ],
        "title": "create_directoryArguments"
      }
    },
    {
      "name": "gdrive-remove_file_or_dir",
      "description": "Remove a file or a directory from Google Drive.\n\nArgs:\n    file_or_dir_id: ID of the file or the directory to remove\n\nReturns:\n    dict containing success status or error message\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "file_or_dir_id": {
            "title": "File Or Dir Id",
            "type": "string"
          }
        },
        "required": [
          "file_or_dir_id"
        ],
        "title": "remove_file_or_dirArguments"
      }
    },
    {
      "name": "gdrive-rename_file_or_dir",
      "description": "Rename a file or a directory in Google Drive.\n\nArgs:\n    file_or_dir_id: ID of the file or the directory to rename\n    new_name: New name for the file or the directory\n\nReturns:\n    dict containing the updated directory's metadata\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "file_or_dir_id": {
            "title": "File Or Dir Id",
            "type": "string"
          },
          "new_name": {
            "title": "New Name",
            "type": "string"
          }
        },
        "required": [
          "file_or_dir_id",
          "new_name"
        ],
        "title": "rename_file_or_dirArguments"
      }
    },
    {
      "name": "gdrive-list_directory_contents",
      "description": "\nList contents of a directory in Google Drive.\n\nArgs:\n    directory_id: ID of the directory to list. If None, lists root directory.\n\nReturns:\n    dict containing list of files and folders in the directory\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "directory_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Directory Id"
          }
        },
        "title": "list_directory_contentsArguments"
      }
    },
    {
      "name": "gdrive-search_files_on_google_drive",
      "description": "\nSearch for files on Google Drive.\n\nArgs:\n    query: A query for filtering the file results. MUST NOT be empty. The query string contains the following three parts: \"query_term operator values\", where\n        1) query_term is the query term or field to search upon.\n        2) operator specifies the condition for the query term.\n        3) values are the specific values you want to use to filter your search results.\n    page_size: The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached.\n    page_token: The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response. Leave empty each time you make a new query.\n\nExamples:\n    query:\"mimeType = 'image/jpeg'\"\n    query:\"name = 'hello'\"\n    query:\"modifiedTime > '2012-06-04T12:00:00' and (mimeType contains 'image/' or mimeType contains 'video/')\"\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "page_size": {
            "default": 50,
            "title": "Page Size",
            "type": "integer"
          },
          "page_token": {
            "default": "",
            "title": "Page Token",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_files_on_google_driveArguments"
      }
    },
    {
      "name": "gdrive-get_file",
      "description": "\nGet (binary) file content and metadata from Google Drive.\nDo NOT use this tool for native Google files like Docs, Sheets and Slides. Use their own specific tools to get their contents.\n\nArgs:\n    file_id: The id of the file to fetch from Google Drive\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "file_id": {
            "title": "File Id",
            "type": "string"
          }
        },
        "required": [
          "file_id"
        ],
        "title": "get_fileArguments"
      }
    },
    {
      "name": "gdrive-move_file_or_dir",
      "description": "Move a file or a directory to a new parent directory in Google Drive.\n\nArgs:\n    file_or_dir_id: ID of the file or the directory to move\n    new_parent_id: ID of the new parent directory\n\nReturns:\n    dict containing the updated directory's metadata\n    ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "file_or_dir_id": {
            "title": "File Or Dir Id",
            "type": "string"
          },
          "new_parent_id": {
            "title": "New Parent Id",
            "type": "string"
          }
        },
        "required": [
          "file_or_dir_id",
          "new_parent_id"
        ],
        "title": "move_file_or_dirArguments"
      }
    },
    {
      "name": "gdrive-copy_file",
      "description": "\nCopy a Google Drive file to a new location and/or with a new name.\n\nArgs:\n    file_id (str): ID of the file to copy\n    new_name (str, optional): New name for the copied file. If None or empty, \n                                  keeps the original name.\n    folder_id (str, optional): ID of the destination folder. If None or empty,\n                              copies to the same directory as the original.\n\nReturns:\n    dict: The copied file metadata\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "file_id": {
            "title": "file_id",
            "type": "string"
          },
          "new_name": {
            "default": null,
            "title": "new_name",
            "type": "string"
          },
          "folder_id": {
            "default": null,
            "title": "folder_id",
            "type": "string"
          }
        },
        "required": [
          "file_id"
        ],
        "title": "copy_fileArguments"
      }
    },
    {
      "name": "dbx-get_account_info",
      "description": "Get information about the connected account (integrates with Dropbox)",
      "inputSchema": {
        "type": "object",
        "properties": {}
      }
    },
    {
      "name": "dbx-list_files",
      "description": "List files in a folder (integrates with Dropbox)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the folder (default: root)",
            "default": ""
          }
        }
      }
    },
    {
      "name": "dbx-copy_item",
      "description": "Copy a file or folder to a new location",
      "inputSchema": {
        "type": "object",
        "properties": {
          "from_path": {
            "type": "string",
            "description": "Path of the source file or folder"
          },
          "to_path": {
            "type": "string",
            "description": "Path for the destination file or folder"
          }
        },
        "required": [
          "from_path",
          "to_path"
        ]
      }
    },
    {
      "name": "dbx-get_file_content",
      "description": "Get the content of a file (integrates with Dropbox)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the file in Dropbox"
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "dbx-create_folder",
      "description": "Create a new folder (integrates with Dropbox)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path where the folder should be created (e.g., \"/New Folder\")"
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "dbx-move_item",
      "description": "Move or rename a file or folder",
      "inputSchema": {
        "type": "object",
        "properties": {
          "from_path": {
            "type": "string",
            "description": "Path of the source file or folder"
          },
          "to_path": {
            "type": "string",
            "description": "New path for the file or folder"
          }
        },
        "required": [
          "from_path",
          "to_path"
        ]
      }
    },
    {
      "name": "dbx-download_file",
      "description": "Download a file to local disk and return the file path. Files are saved to the \"downloads\" directory. (Integrates with Dropbox)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the file to download from Dropbox"
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "dbx-search_file_db",
      "description": "Advanced search for files and folders with filtering capabilities (integrates with Dropbox)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query string"
          },
          "path": {
            "type": "string",
            "description": "Path to search within (defaults to root)",
            "default": ""
          },
          "max_results": {
            "type": "number",
            "description": "Maximum number of results to return (1-1000)",
            "default": 20
          },
          "file_extensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Filter by file extensions (e.g., [\"pdf\", \"doc\", \"txt\"])"
          },
          "file_categories": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "image",
                "document",
                "pdf",
                "spreadsheet",
                "presentation",
                "audio",
                "video",
                "folder"
              ]
            },
            "description": "Filter by file categories"
          },
          "date_range": {
            "type": "object",
            "properties": {
              "start": {
                "type": "string",
                "description": "Start date in ISO format (e.g., \"2024-01-01\")"
              },
              "end": {
                "type": "string",
                "description": "End date in ISO format (e.g., \"2024-12-31\")"
              }
            }
          },
          "include_content_match": {
            "type": "boolean",
            "description": "Search within file contents (may be slower)",
            "default": false
          },
          "sort_by": {
            "type": "string",
            "enum": [
              "relevance",
              "last_modified_time",
              "file_size"
            ],
            "description": "Sort results by specified criteria",
            "default": "relevance"
          },
          "order": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "Sort order (ascending or descending)",
            "default": "desc"
          }
        },
        "required": [
          "query"
        ]
      }
    },
    {
      "name": "dbx-upload_file",
      "description": "Upload a file (integrates with Dropbox)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to upload the file to"
          },
          "content": {
            "type": "string",
            "description": "File content (base64 encoded)"
          }
        },
        "required": [
          "path",
          "content"
        ]
      }
    },
    {
      "name": "dbx-safe_delete_item",
      "description": "Safely delete a file or folder with recycle bin support, confirmation, and audit logging",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the file or folder to delete"
          },
          "userId": {
            "type": "string",
            "description": "User ID for tracking and rate limiting"
          },
          "skipConfirmation": {
            "type": "boolean",
            "description": "Skip deletion confirmation (default: false)",
            "default": false
          },
          "retentionDays": {
            "type": "number",
            "description": "Number of days to keep in recycle bin (default: from config)"
          },
          "reason": {
            "type": "string",
            "description": "Reason for deletion (for audit logs)"
          },
          "permanent": {
            "type": "boolean",
            "description": "Permanently delete instead of moving to recycle bin (default: false)",
            "default": false
          }
        },
        "required": [
          "path",
          "userId"
        ]
      }
    },
    {
      "name": "dbx-delete_item",
      "description": "Legacy delete operation (deprecated, use safe_delete_item instead)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the file or folder to delete"
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "dbx-get_sharing_link",
      "description": "Create a shared link for a file or folder",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the file or folder to share"
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "dbx-get_file_metadata",
      "description": "Get metadata for a file or folder",
      "inputSchema": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to the file or folder"
          }
        },
        "required": [
          "path"
        ]
      }
    },
    {
      "name": "contacts-update_contact",
      "description": "\nUpdate an existing contact using Google People API.\n\nArgs:\n    request: UpdateContactRequest containing contact resource name, etag, and updated information\n    \nReturns:\n    Dictionary containing the updated contact resource or error information\n    \nRaises:\n    HttpError: If the API request fails\n    ValueError: If resource_name or etag is missing, or no update fields provided\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/UpdateContactRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "Address": {
            "properties": {
              "streetAddress": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Streetaddress"
              },
              "city": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "City"
              },
              "region": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Region"
              },
              "postalCode": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Postalcode"
              },
              "country": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Country"
              },
              "type": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Type"
              }
            },
            "title": "Address",
            "type": "object"
          },
          "Birthday": {
            "properties": {
              "year": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Year"
              },
              "month": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Month"
              },
              "day": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Day"
              },
              "text": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Text"
              }
            },
            "title": "Birthday",
            "type": "object"
          },
          "EmailAddress": {
            "properties": {
              "value": {
                "title": "Value",
                "type": "string"
              },
              "type": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Type"
              },
              "displayName": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Displayname"
              }
            },
            "required": [
              "value"
            ],
            "title": "EmailAddress",
            "type": "object"
          },
          "Name": {
            "properties": {
              "givenName": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Givenname"
              },
              "familyName": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Familyname"
              },
              "middleName": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Middlename"
              },
              "displayName": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Displayname"
              }
            },
            "title": "Name",
            "type": "object"
          },
          "Organization": {
            "properties": {
              "name": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Name"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Title"
              },
              "department": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Department"
              }
            },
            "title": "Organization",
            "type": "object"
          },
          "PhoneNumber": {
            "properties": {
              "value": {
                "title": "Value",
                "type": "string"
              },
              "type": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Type"
              }
            },
            "required": [
              "value"
            ],
            "title": "PhoneNumber",
            "type": "object"
          },
          "UpdateContactRequest": {
            "properties": {
              "resource_name": {
                "title": "Resource Name",
                "type": "string"
              },
              "etag": {
                "title": "Etag",
                "type": "string"
              },
              "names": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/Name"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Names"
              },
              "email_addresses": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/EmailAddress"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Email Addresses"
              },
              "phone_numbers": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/PhoneNumber"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Phone Numbers"
              },
              "addresses": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/Address"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Addresses"
              },
              "organizations": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/Organization"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Organizations"
              },
              "biography": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Biography"
              },
              "birthday": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Birthday"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "update_person_fields": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Update Person Fields"
              }
            },
            "required": [
              "resource_name",
              "etag"
            ],
            "title": "UpdateContactRequest",
            "type": "object"
          }
        },
        "title": "update_contactArguments"
      }
    },
    {
      "name": "contacts-sync_other_contacts",
      "description": "\nPerform incremental sync of \"Other contacts\" using sync tokens.\n\nThis is more efficient than listing all contacts when you only need to get\nchanges since the last sync. Use the returned sync_token for subsequent calls.\n\nArgs:\n    request: ListOtherContactsRequest with sync_token from previous sync\n    \nReturns:\n    Dictionary containing changed other contacts and new sync token\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/ListOtherContactsRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "ListOtherContactsRequest": {
            "properties": {
              "page_size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 100,
                "title": "Page Size"
              },
              "page_token": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Page Token"
              },
              "read_mask": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "names,emailAddresses,phoneNumbers",
                "title": "Read Mask"
              },
              "request_sync_token": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Request Sync Token"
              },
              "sync_token": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sync Token"
              }
            },
            "title": "ListOtherContactsRequest",
            "type": "object"
          }
        },
        "title": "sync_other_contactsArguments"
      }
    },
    {
      "name": "contacts-delete_contact",
      "description": "\nDelete an existing contact using Google People API.\n\nArgs:\n    request: DeleteContactRequest containing the contact's resource name\n    \nReturns:\n    Dictionary containing deletion status or error information\n    \nRaises:\n    HttpError: If the API request fails\n    ValueError: If resource_name is missing or invalid\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/DeleteContactRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "DeleteContactRequest": {
            "properties": {
              "resource_name": {
                "title": "Resource Name",
                "type": "string"
              }
            },
            "required": [
              "resource_name"
            ],
            "title": "DeleteContactRequest",
            "type": "object"
          }
        },
        "title": "delete_contactArguments"
      }
    },
    {
      "name": "contacts-list_contact_groups",
      "description": "\nList all contact groups for the authenticated user.\n\nArgs:\n    request: ListContactGroupsRequest containing pagination and field parameters\n    \nReturns:\n    Dictionary containing contact groups list and pagination metadata\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/ListContactGroupsRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "ListContactGroupsRequest": {
            "properties": {
              "page_size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 100,
                "title": "Page Size"
              },
              "page_token": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Page Token"
              },
              "sync_token": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sync Token"
              },
              "group_fields": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "name,groupType,memberCount",
                "title": "Group Fields"
              }
            },
            "title": "ListContactGroupsRequest",
            "type": "object"
          }
        },
        "title": "list_contact_groupsArguments"
      }
    },
    {
      "name": "contacts-batch_get_contact_groups",
      "description": "\nGet multiple contact groups in a single request.\n\nArgs:\n    contact_group_resource_names: List of contact group resource names to retrieve\n    \nReturns:\n    Dictionary containing the contact groups or error information\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "contact_group_resource_names": {
            "items": {
              "type": "string"
            },
            "title": "Contact Group Resource Names",
            "type": "array"
          }
        },
        "required": [
          "contact_group_resource_names"
        ],
        "title": "batch_get_contact_groupsArguments"
      }
    },
    {
      "name": "contacts-list_other_contacts",
      "description": "\nList all contacts in the user's \"Other contacts\" using Google People API.\n\n\"Other contacts\" are automatically created from interactions with Gmail, Google+, etc.\nThese are contacts that aren't explicitly saved to the user's contact list.\n\nArgs:\n    request: ListOtherContactsRequest containing pagination and field parameters\n    \nReturns:\n    Dictionary containing other contacts list, pagination metadata, and sync token\n    \nRaises:\n    HttpError: If the API request fails\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/ListOtherContactsRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "ListOtherContactsRequest": {
            "properties": {
              "page_size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 100,
                "title": "Page Size"
              },
              "page_token": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Page Token"
              },
              "read_mask": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "names,emailAddresses,phoneNumbers",
                "title": "Read Mask"
              },
              "request_sync_token": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Request Sync Token"
              },
              "sync_token": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sync Token"
              }
            },
            "title": "ListOtherContactsRequest",
            "type": "object"
          }
        },
        "title": "list_other_contactsArguments"
      }
    },
    {
      "name": "contacts-delete_contact_group",
      "description": "\nDelete a contact group. Optionally delete all contacts in the group.\n\nArgs:\n    request: DeleteContactGroupRequest containing resource name and deletion options\n    \nReturns:\n    Dictionary containing deletion status or error information\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/DeleteContactGroupRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "DeleteContactGroupRequest": {
            "properties": {
              "resource_name": {
                "title": "Resource Name",
                "type": "string"
              },
              "delete_contacts": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": false,
                "title": "Delete Contacts"
              }
            },
            "required": [
              "resource_name"
            ],
            "title": "DeleteContactGroupRequest",
            "type": "object"
          }
        },
        "title": "delete_contact_groupArguments"
      }
    },
    {
      "name": "contacts-search_contacts",
      "description": "\nSearch for contacts using Google People API.\n\nArgs:\n    request: SearchContactsRequest containing query and optional parameters\n    \nReturns:\n    Dictionary containing search results with contacts and metadata\n    \nRaises:\n    HttpError: If the API request fails\n    ValueError: If required parameters are missing\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/SearchContactsRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "SearchContactsRequest": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "page_size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 25,
                "title": "Page Size"
              },
              "read_mask": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "names,emailAddresses,phoneNumbers,addresses,birthdays,metadata",
                "title": "Read Mask"
              }
            },
            "required": [
              "query"
            ],
            "title": "SearchContactsRequest",
            "type": "object"
          }
        },
        "title": "search_contactsArguments"
      }
    },
    {
      "name": "contacts-list_directory_people",
      "description": "\nList domain profiles and domain contacts in the authenticated user's domain directory.\n\nThis requires Google Workspace and returns profiles of people in the same organization.\nOnly works for Google Workspace accounts, not personal Google accounts.\n\nArgs:\n    request: ListDirectoryPeopleRequest containing pagination and field parameters\n    MUST supply the \"sources\" field (either DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT or DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE or both)\n    \nReturns:\n    Dictionary containing directory people list and pagination metadata\n    \nRaises:\n    HttpError: If the API request fails\n    ValueError: If called without proper Google Workspace permissions\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/ListDirectoryPeopleRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "ListDirectoryPeopleRequest": {
            "properties": {
              "page_size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 100,
                "title": "Page Size"
              },
              "page_token": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Page Token"
              },
              "read_mask": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "names,emailAddresses,phoneNumbers,organizations",
                "title": "Read Mask"
              },
              "sources": {
                "default": null,
                "items": {
                  "type": "string"
                },
                "title": "Sources",
                "type": "array"
              },
              "merge_sources": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Merge Sources"
              },
              "sync_token": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sync Token"
              },
              "request_sync_token": {
                "anyOf": [
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Request Sync Token"
              }
            },
            "title": "ListDirectoryPeopleRequest",
            "type": "object"
          }
        },
        "title": "list_directory_peopleArguments"
      }
    },
    {
      "name": "contacts-update_contact_group",
      "description": "\nUpdate an existing contact group's name.\n\nArgs:\n    request: UpdateContactGroupRequest containing resource name, etag, and new name\n    \nReturns:\n    Dictionary containing the updated contact group or error information\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/UpdateContactGroupRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "UpdateContactGroupRequest": {
            "properties": {
              "resource_name": {
                "title": "Resource Name",
                "type": "string"
              },
              "etag": {
                "title": "Etag",
                "type": "string"
              },
              "name": {
                "title": "Name",
                "type": "string"
              },
              "read_group_fields": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "name,groupType,memberCount",
                "title": "Read Group Fields"
              }
            },
            "required": [
              "resource_name",
              "etag",
              "name"
            ],
            "title": "UpdateContactGroupRequest",
            "type": "object"
          }
        },
        "title": "update_contact_groupArguments"
      }
    },
    {
      "name": "contacts-list_contacts",
      "description": "\nList all contacts in the user's address book using Google People API.\n\nArgs:\n    request: ListContactsRequest containing pagination and field parameters\n    \nReturns:\n    Dictionary containing contacts list and pagination metadata\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/ListContactsRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "ListContactsRequest": {
            "properties": {
              "page_size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 100,
                "title": "Page Size"
              },
              "page_token": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Page Token"
              },
              "person_fields": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "names,emailAddresses,phoneNumbers,addresses,birthdays,metadata",
                "title": "Person Fields"
              },
              "sources": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sources"
              },
              "sort_order": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Sort Order"
              }
            },
            "title": "ListContactsRequest",
            "type": "object"
          }
        },
        "title": "list_contactsArguments"
      }
    },
    {
      "name": "contacts-search_directory_people",
      "description": "\nSearch domain profiles and domain contacts in the authenticated user's domain directory.\n\nThis searches within the organization's directory for people matching the query.\nOnly works for Google Workspace accounts with directory access.\nMUST supply the \"sources\" field (either DIRECTORY_SOURCE_TYPE_DOMAIN_CONTACT or DIRECTORY_SOURCE_TYPE_DOMAIN_PROFILE or both)\n\nArgs:\n    request: SearchDirectoryPeopleRequest containing query and optional parameters\n    \nReturns:\n    Dictionary containing search results with directory people and metadata\n    \nRaises:\n    HttpError: If the API request fails\n    ValueError: If required parameters are missing\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/SearchDirectoryPeopleRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "SearchDirectoryPeopleRequest": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "page_size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 25,
                "title": "Page Size"
              },
              "read_mask": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "names,emailAddresses,phoneNumbers,organizations",
                "title": "Read Mask"
              },
              "sources": {
                "default": null,
                "items": {
                  "type": "string"
                },
                "title": "Sources",
                "type": "array"
              },
              "merge_sources": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Merge Sources"
              }
            },
            "required": [
              "query"
            ],
            "title": "SearchDirectoryPeopleRequest",
            "type": "object"
          }
        },
        "title": "search_directory_peopleArguments"
      }
    },
    {
      "name": "contacts-get_contact",
      "description": "\nGet a single contact by resource name, including its etag for future updates.\n\nArgs:\n    request: GetContactRequest containing resource name and fields to retrieve\n    \nReturns:\n    Dictionary containing the contact data including etag\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/GetContactRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "GetContactRequest": {
            "properties": {
              "resource_name": {
                "title": "Resource Name",
                "type": "string"
              },
              "person_fields": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "names,emailAddresses,phoneNumbers,addresses,birthdays,metadata",
                "title": "Person Fields"
              }
            },
            "required": [
              "resource_name"
            ],
            "title": "GetContactRequest",
            "type": "object"
          }
        },
        "title": "get_contactArguments"
      }
    },
    {
      "name": "contacts-search_other_contacts",
      "description": "\nSearch for contacts in the user's \"Other contacts\" using Google People API.\n\n\"Other contacts\" are automatically created from interactions with Gmail, Google+, etc.\n\nArgs:\n    request: SearchOtherContactsRequest containing query and optional parameters\n    \nReturns:\n    Dictionary containing search results with other contacts and metadata\n    \nRaises:\n    HttpError: If the API request fails\n    ValueError: If required parameters are missing\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/SearchOtherContactsRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "SearchOtherContactsRequest": {
            "properties": {
              "query": {
                "title": "Query",
                "type": "string"
              },
              "page_size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 25,
                "title": "Page Size"
              },
              "read_mask": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "names,emailAddresses,phoneNumbers",
                "title": "Read Mask"
              }
            },
            "required": [
              "query"
            ],
            "title": "SearchOtherContactsRequest",
            "type": "object"
          }
        },
        "title": "search_other_contactsArguments"
      }
    },
    {
      "name": "contacts-create_contact_group",
      "description": "\nCreate a new contact group.\n\nArgs:\n    request: CreateContactGroupRequest containing group name and optional parameters\n    \nReturns:\n    Dictionary containing the created contact group or error information\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/CreateContactGroupRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "CreateContactGroupRequest": {
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "read_group_fields": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "name,groupType,memberCount",
                "title": "Read Group Fields"
              }
            },
            "required": [
              "name"
            ],
            "title": "CreateContactGroupRequest",
            "type": "object"
          }
        },
        "title": "create_contact_groupArguments"
      }
    },
    {
      "name": "contacts-copy_other_contact_to_contacts",
      "description": "\nCopy a contact from \"Other contacts\" to the user's main contact list.\n\nThis promotes an automatically-created contact to a saved contact that can be\nmodified and managed like regular contacts.\n\nArgs:\n    request: CopyOtherContactRequest containing resource name and fields to copy\n    \nReturns:\n    Dictionary containing the copied contact or error information\n    \nRaises:\n    HttpError: If the API request fails\n    ValueError: If resource_name is missing\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/CopyOtherContactRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "CopyOtherContactRequest": {
            "properties": {
              "resource_name": {
                "title": "Resource Name",
                "type": "string"
              },
              "copy_mask": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "names,emailAddresses,phoneNumbers",
                "title": "Copy Mask"
              }
            },
            "required": [
              "resource_name"
            ],
            "title": "CopyOtherContactRequest",
            "type": "object"
          }
        },
        "title": "copy_other_contact_to_contactsArguments"
      }
    },
    {
      "name": "contacts-add_contact",
      "description": "\nAdd a new contact using Google People API.\n\nArgs:\n    request: AddContactRequest containing contact information\n    \nReturns:\n    Dictionary containing the created contact resource or error information\n    \nRaises:\n    HttpError: If the API request fails\n    ValueError: If no contact information is provided\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/AddContactRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "AddContactRequest": {
            "properties": {
              "names": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/Name"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Names"
              },
              "email_addresses": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/EmailAddress"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Email Addresses"
              },
              "phone_numbers": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/PhoneNumber"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Phone Numbers"
              },
              "addresses": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/Address"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Addresses"
              },
              "organizations": {
                "anyOf": [
                  {
                    "items": {
                      "$ref": "#/$defs/Organization"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Organizations"
              },
              "biography": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Biography"
              },
              "birthday": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Birthday"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              }
            },
            "title": "AddContactRequest",
            "type": "object"
          },
          "Address": {
            "properties": {
              "streetAddress": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Streetaddress"
              },
              "city": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "City"
              },
              "region": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Region"
              },
              "postalCode": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Postalcode"
              },
              "country": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Country"
              },
              "type": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Type"
              }
            },
            "title": "Address",
            "type": "object"
          },
          "Birthday": {
            "properties": {
              "year": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Year"
              },
              "month": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Month"
              },
              "day": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Day"
              },
              "text": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Text"
              }
            },
            "title": "Birthday",
            "type": "object"
          },
          "EmailAddress": {
            "properties": {
              "value": {
                "title": "Value",
                "type": "string"
              },
              "type": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Type"
              },
              "displayName": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Displayname"
              }
            },
            "required": [
              "value"
            ],
            "title": "EmailAddress",
            "type": "object"
          },
          "Name": {
            "properties": {
              "givenName": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Givenname"
              },
              "familyName": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Familyname"
              },
              "middleName": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Middlename"
              },
              "displayName": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Displayname"
              }
            },
            "title": "Name",
            "type": "object"
          },
          "Organization": {
            "properties": {
              "name": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Name"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Title"
              },
              "department": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Department"
              }
            },
            "title": "Organization",
            "type": "object"
          },
          "PhoneNumber": {
            "properties": {
              "value": {
                "title": "Value",
                "type": "string"
              },
              "type": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Type"
              }
            },
            "required": [
              "value"
            ],
            "title": "PhoneNumber",
            "type": "object"
          }
        },
        "title": "add_contactArguments"
      }
    },
    {
      "name": "contacts-get_contact_group",
      "description": "\nGet details of a specific contact group, including its members.\n\nArgs:\n    request: GetContactGroupRequest containing resource name and fields to retrieve\n    \nReturns:\n    Dictionary containing the contact group details\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/GetContactGroupRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "GetContactGroupRequest": {
            "properties": {
              "resource_name": {
                "title": "Resource Name",
                "type": "string"
              },
              "max_members": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": 25,
                "title": "Max Members"
              },
              "group_fields": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": "name,groupType,memberCount,metadata",
                "title": "Group Fields"
              }
            },
            "required": [
              "resource_name"
            ],
            "title": "GetContactGroupRequest",
            "type": "object"
          }
        },
        "title": "get_contact_groupArguments"
      }
    },
    {
      "name": "contacts-modify_contact_group_members",
      "description": "\nAdd or remove contacts from a contact group.\n\nArgs:\n    request: ModifyContactGroupMembersRequest containing group resource name and contact changes\n    \nReturns:\n    Dictionary containing the updated contact group or error information\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/$defs/ModifyContactGroupMembersRequest"
          }
        },
        "required": [
          "request"
        ],
        "$defs": {
          "ModifyContactGroupMembersRequest": {
            "properties": {
              "resource_name": {
                "title": "Resource Name",
                "type": "string"
              },
              "contacts_to_add": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Contacts To Add"
              },
              "contacts_to_remove": {
                "anyOf": [
                  {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Contacts To Remove"
              }
            },
            "required": [
              "resource_name"
            ],
            "title": "ModifyContactGroupMembersRequest",
            "type": "object"
          }
        },
        "title": "modify_contact_group_membersArguments"
      }
    },
    {
      "name": "slack-slack_get_channel_ids",
      "description": "Get a list of channel IDs by searching for keywords in channel names. Use this instead of the tool slack_list_channels if you're mainly interested in the channel's ID",
      "inputSchema": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of keywords to search for in channel names. And empty list will return the IDs of all the public and private channels"
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "keywords"
        ]
      }
    },
    {
      "name": "slack-slack_join_channel",
      "description": "Join a Slack channel",
      "inputSchema": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "string",
            "description": "The ID of the channel"
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "channel_id"
        ]
      }
    },
    {
      "name": "slack-slack_human_ts_to_slack_ts",
      "description": "Convert human-readable timestamps to Slack timestamp format. MANDATORY: AI agents MUST use this tool for any human-readable to Slack timestamp conversion instead of attempting manual conversion. Accepts timestamps in ISO 8601 format or unambiguous formats like 'January 15, 2024 10:30:45'.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "timestamps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of human-readable timestamps to convert. Use unambiguous formats like 'January 15, 2024 10:30:45', 'Jan 15, 2024 10:30:45 AM', or ISO 8601 format '2024-01-15T10:30:45'. Avoid region-specific formats like '01/15/2024' vs '15/01/2024'."
          },
          "timezone": {
            "type": "string",
            "description": "Timezone that the input timestamps are in (e.g., 'America/New_York', 'Europe/London', 'Asia/Tokyo'). Defaults to 'UTC' if not specified. Use IANA timezone identifiers.",
            "default": "UTC"
          }
        },
        "required": [
          "timestamps"
        ]
      }
    },
    {
      "name": "slack-slack_ts_to_human_readable",
      "description": "Convert Slack timestamps to human-readable format. MANDATORY: AI agents MUST use this tool for any Slack timestamp conversion instead of attempting manual conversion. Slack timestamps are Unix timestamps with microsecond precision (e.g., '1512085950.000216').",
      "inputSchema": {
        "type": "object",
        "properties": {
          "timestamps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of Slack timestamps to convert. Each timestamp should be in the format '1234567890.123456' (Unix timestamp with microsecond precision)."
          },
          "timezone": {
            "type": "string",
            "description": "Target timezone for conversion (e.g., 'America/New_York', 'Europe/London', 'Asia/Tokyo'). Defaults to 'UTC' if not specified. Use IANA timezone identifiers.",
            "default": "UTC"
          }
        },
        "required": [
          "timestamps"
        ]
      }
    },
    {
      "name": "slack-slack_get_channel_history",
      "description": "Get recent messages from a channel",
      "inputSchema": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "string",
            "description": "The ID of the channel. The results are returned paginated. When a non-empty next_cursor value is returned, it means the list is incomplete and can be continued by calling the tool again with next_cursor as the cursor parameter."
          },
          "pagination_window": {
            "type": "number",
            "description": "Results will be returned in batches of this size, so as not to overload the server (default 50, max 50). This is only for efficiency purposes. You should call the tool again to get the next batch.",
            "default": 50
          },
          "cursor": {
            "type": "string",
            "description": "Pagination cursor for next page of results. This is the next_cursor value of a previous call to the tool. To get the first page of results, don't provide a cursor."
          },
          "oldest": {
            "type": "string",
            "description": "Start of time range of messages to include in results. Unix timestamp (e.g., '1512085950.000216'). Only messages after this timestamp will be included."
          },
          "latest": {
            "type": "string",
            "description": "End of time range of messages to include in results. Unix timestamp (e.g., '1512085950.000216'). Only messages before this timestamp will be included."
          },
          "inclusive": {
            "type": "boolean",
            "description": "Include messages with oldest or latest timestamps in results. Ignored unless either oldest or latest timestamp is specified."
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "channel_id"
        ]
      }
    },
    {
      "name": "slack-slack_reply_to_thread",
      "description": "Reply to a specific message thread in Slack",
      "inputSchema": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "string",
            "description": "The ID of the channel containing the thread"
          },
          "thread_ts": {
            "type": "string",
            "description": "The timestamp of the parent message in the format '1234567890.123456'. Timestamps in the format without the period can be converted by adding the period such that 6 numbers come after it."
          },
          "text": {
            "type": "string",
            "description": "The reply text"
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "channel_id",
          "thread_ts",
          "text"
        ]
      }
    },
    {
      "name": "slack-slack_list_channels",
      "description": "List public or pre-defined channels in the workspace with pagination. The results are returned paginated. When a non-empty next_cursor value is returned, it means the list is incomplete and can be continued by calling the tool again with next_cursor as the cursor parameter. Thanks",
      "inputSchema": {
        "type": "object",
        "properties": {
          "pagination_window": {
            "type": "number",
            "description": "Results will be returned in batches of this size, so as not to overload the server (default 50, max 50). This is only for efficiency purposes. You should call the tool again to get the next batch.",
            "default": 50
          },
          "cursor": {
            "type": "string",
            "description": "Pagination cursor for next page of results. This is the next_cursor value of a previous call to the tool. To get the first page of results, don't provide a cursor."
          },
          "types": {
            "type": "string",
            "description": "A comma-separated list of any combination of 'public_channel', 'private_channel', 'mpim' (multi-person direct message sessions), 'im' (direct message sessions)"
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        }
      }
    },
    {
      "name": "slack-slack_channel_ids_to_names",
      "description": "Get channel names and information for a list of Slack channel IDs",
      "inputSchema": {
        "type": "object",
        "properties": {
          "channel_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of Slack channel IDs to retrieve names for",
            "minItems": 1
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "channel_ids"
        ]
      }
    },
    {
      "name": "slack-slack_user_ids_to_names",
      "description": "Get user names for a list of Slack user IDs. Call this tool for quickly and efficiently finding the names associated with the user IDs.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "user_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of Slack user IDs to retrieve names for",
            "minItems": 1
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "user_ids"
        ]
      }
    },
    {
      "name": "slack-slack_close_direct_message",
      "description": "Closes a direct message or multi-person direct message session on Slack",
      "inputSchema": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "string",
            "description": "The ID of the (individual or multi-person) direct message session to close"
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "channel_id"
        ]
      }
    },
    {
      "name": "slack-slack_open_direct_message",
      "description": "Creates or resumes a direct message or multi-person direct message session on Slack",
      "inputSchema": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "string",
            "description": "The ID of the (individual or multi-person) direct message session to resume. Must provide either this or the 'users' property"
          },
          "return_all_dm_info": {
            "type": "boolean",
            "description": "'true' if the full direct-message channel definition should be returned in the response. Defaults to 'false' (returns the channel ID)"
          },
          "user_ids": {
            "type": "array",
            "description": "Up to 8 user IDs to include in the multi-person direct-message session (minumum 1). Must provide either this or the 'channel_id' property"
          },
          "no_create": {
            "type": "boolean",
            "description": "Do not create a direct message or multi-person direct message session if one does not already exist. Use this to test if there's already an existing session"
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": []
      }
    },
    {
      "name": "slack-slack_get_thread_replies",
      "description": "Get all replies in a message thread. The results are returned paginated. When a non-empty next_cursor value is returned, it means the list is incomplete and can be continued by calling the tool again with next_cursor as the cursor parameter.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "string",
            "description": "The ID of the channel containing the thread"
          },
          "thread_ts": {
            "type": "string",
            "description": "The timestamp of the parent message in the format '1234567890.123456'. Timestamps in the format without the period can be converted by adding the period such that 6 numbers come after it."
          },
          "pagination_window": {
            "type": "number",
            "description": "Results will be returned in batches of this size, so as not to overload the server (default 50, max 50). This is only for efficiency purposes. You should call the tool again to get the next batch.",
            "default": 50
          },
          "cursor": {
            "type": "string",
            "description": "Pagination cursor for next page of results. This is the next_cursor value of a previous call to the tool. To get the first page of results, don't provide a cursor."
          },
          "oldest": {
            "type": "string",
            "description": "Start of time range of messages to include in results. Unix timestamp (e.g., '1512085950.000216'). Only messages after this timestamp will be included."
          },
          "latest": {
            "type": "string",
            "description": "End of time range of messages to include in results. Unix timestamp (e.g., '1512085950.000216'). Only messages before this timestamp will be included."
          },
          "inclusive": {
            "type": "boolean",
            "description": "Include messages with oldest or latest timestamps in results. Ignored unless either oldest or latest timestamp is specified."
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "channel_id",
          "thread_ts"
        ]
      }
    },
    {
      "name": "slack-slack_leave_channel",
      "description": "Leave a Slack channel",
      "inputSchema": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "string",
            "description": "The ID of the channel"
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "channel_id"
        ]
      }
    },
    {
      "name": "slack-slack_get_users",
      "description": "Get a list of all users in the workspace with their basic profile information. The results are returned paginated. When a non-empty next_cursor value is returned, it means the list is incomplete and can be continued by calling the tool again with next_cursor as the cursor parameter.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "cursor": {
            "type": "string",
            "description": "Pagination cursor for next page of results. This is the next_cursor value of a previous call to the tool. To get the first page of results, don't provide a cursor."
          },
          "pagination_window": {
            "type": "number",
            "description": "Results will be returned in batches of this size, so as not to overload the server (default 50, max 50). This is only for efficiency purposes. You should call the tool again to get the next batch.",
            "default": 50
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        }
      }
    },
    {
      "name": "slack-slack_post_message",
      "description": "Post a new message to a Slack channel",
      "inputSchema": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "string",
            "description": "The ID of the channel to post to"
          },
          "text": {
            "type": "string",
            "description": "The message text to post"
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "channel_id",
          "text"
        ]
      }
    },
    {
      "name": "slack-slack_get_user_ids",
      "description": "Get a list of user IDs by searching for keywords in user names and optionally email addresses. An empty keywords list returns distilled info about all the users (more efficient but less detailed than slack_get_users - use if you're mainly interested in user IDs or if you simply want a list of all user names)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of keywords to search for in user names. An empty list returns distilled info about all the users"
          },
          "check_email": {
            "type": "boolean",
            "description": "Whether to also search in email addresses (default: false)",
            "default": false
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "keywords"
        ]
      }
    },
    {
      "name": "slack-slack_get_user_profile",
      "description": "Get detailed profile information for a specific user",
      "inputSchema": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The ID of the user"
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "user_id"
        ]
      }
    },
    {
      "name": "slack-slack_add_reaction",
      "description": "Add a reaction emoji to a message",
      "inputSchema": {
        "type": "object",
        "properties": {
          "channel_id": {
            "type": "string",
            "description": "The ID of the channel containing the message"
          },
          "timestamp": {
            "type": "string",
            "description": "The timestamp of the message to react to"
          },
          "reaction": {
            "type": "string",
            "description": "The name of the emoji reaction (without ::)"
          },
          "run_as_user": {
            "type": "boolean",
            "description": "You MUST NOT change the default value of this parameter, unless EXPLICITLY requested to do so by the user. 'true' if the tool should perform actions using the user's identity (default), 'false' if the tool should use its bot identity when performing actions.",
            "default": true
          }
        },
        "required": [
          "channel_id",
          "timestamp",
          "reaction"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_search_objects",
      "description": "Search for Salesforce standard and custom objects by name pattern. Examples: 'Account' will find Account, AccountHistory; 'Order' will find WorkOrder, ServiceOrder__c etc.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "searchPattern": {
            "type": "string",
            "description": "Search pattern to find objects (e.g., 'Account Coverage' will find objects like 'AccountCoverage__c')"
          }
        },
        "required": [
          "searchPattern"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_query_records",
      "description": "Query records from any Salesforce object using SOQL, including relationship queries.\n\nExamples:\n1. Parent-to-child query (e.g., Account with Contacts):\n   - objectName: \"Account\"\n   - fields: [\"Name\", \"(SELECT Id, FirstName, LastName FROM Contacts)\"]\n\n2. Child-to-parent query (e.g., Contact with Account details):\n   - objectName: \"Contact\"\n   - fields: [\"FirstName\", \"LastName\", \"Account.Name\", \"Account.Industry\"]\n\n3. Multiple level query (e.g., Contact -> Account -> Owner):\n   - objectName: \"Contact\"\n   - fields: [\"Name\", \"Account.Name\", \"Account.Owner.Name\"]\n\n4. Related object filtering:\n   - objectName: \"Contact\"\n   - fields: [\"Name\", \"Account.Name\"]\n   - whereClause: \"Account.Industry = 'Technology'\"\n\nNote: When using relationship fields:\n- Use dot notation for parent relationships (e.g., \"Account.Name\")\n- Use subqueries in parentheses for child relationships (e.g., \"(SELECT Id FROM Contacts)\")\n- Custom relationship fields end in \"__r\" (e.g., \"CustomObject__r.Name\")",
      "inputSchema": {
        "type": "object",
        "properties": {
          "objectName": {
            "type": "string",
            "description": "API name of the object to query"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of fields to retrieve, including relationship fields"
          },
          "whereClause": {
            "type": "string",
            "description": "WHERE clause, can include conditions on related objects",
            "optional": true
          },
          "orderBy": {
            "type": "string",
            "description": "ORDER BY clause, can include fields from related objects",
            "optional": true
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of records to return",
            "optional": true
          }
        },
        "required": [
          "objectName",
          "fields"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_dml_records",
      "description": "Perform data manipulation operations on Salesforce records:\n  - insert: Create new records\n  - update: Modify existing records (requires Id)\n  - delete: Remove records (requires Id)\n  - upsert: Insert or update based on external ID field\n  Examples: Insert new Accounts, Update Case status, Delete old records, Upsert based on custom external ID",
      "inputSchema": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "insert",
              "update",
              "delete",
              "upsert"
            ],
            "description": "Type of DML operation to perform"
          },
          "objectName": {
            "type": "string",
            "description": "API name of the object"
          },
          "records": {
            "type": "array",
            "items": {
              "type": "object"
            },
            "description": "Array of records to process"
          },
          "externalIdField": {
            "type": "string",
            "description": "External ID field name for upsert operations",
            "optional": true
          }
        },
        "required": [
          "operation",
          "objectName",
          "records"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_execute_anonymous",
      "description": "Execute anonymous Apex code in Salesforce.\n  \nExamples:\n1. Execute simple Apex code:\n   {\n     \"apexCode\": \"System.debug('Hello World');\"\n   }\n\n2. Execute Apex code with variables:\n   {\n     \"apexCode\": \"List<Account> accounts = [SELECT Id, Name FROM Account LIMIT 5]; for(Account a : accounts) { System.debug(a.Name); }\"\n   }\n\n3. Execute Apex with debug logs:\n   {\n     \"apexCode\": \"System.debug(LoggingLevel.INFO, 'Processing accounts...'); List<Account> accounts = [SELECT Id FROM Account LIMIT 10]; System.debug(LoggingLevel.INFO, 'Found ' + accounts.size() + ' accounts');\",\n     \"logLevel\": \"DEBUG\"\n   }\n\nNotes:\n- The apexCode parameter is required and must contain valid Apex code\n- The code is executed in an anonymous context and does not persist\n- The logLevel parameter is optional (defaults to 'DEBUG')\n- Execution results include compilation success/failure, execution success/failure, and debug logs\n- For security reasons, some operations may be restricted based on user permissions\n- This tool can be used for data operations or updates when there are no other specific tools available\n- When users request data queries or updates that aren't directly supported by other tools, this tool can be used if the operation is achievable using Apex code\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apexCode": {
            "type": "string",
            "description": "Apex code to execute anonymously"
          },
          "logLevel": {
            "type": "string",
            "enum": [
              "NONE",
              "ERROR",
              "WARN",
              "INFO",
              "DEBUG",
              "FINE",
              "FINER",
              "FINEST"
            ],
            "description": "Log level for debug logs (optional, defaults to DEBUG)"
          }
        },
        "required": [
          "apexCode"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_read_apex_trigger",
      "description": "Read Apex triggers from Salesforce.\n  \nExamples:\n1. Read a specific Apex trigger by name:\n   {\n     \"triggerName\": \"AccountTrigger\"\n   }\n\n2. List all Apex triggers with an optional name pattern:\n   {\n     \"namePattern\": \"Account\"\n   }\n\n3. Get metadata about Apex triggers:\n   {\n     \"includeMetadata\": true,\n     \"namePattern\": \"Contact\"\n   }\n\n4. Use wildcards in name patterns:\n   {\n     \"namePattern\": \"Account*\"\n   }\n\nNotes:\n- When triggerName is provided, the full body of that specific trigger is returned\n- When namePattern is provided, all matching trigger names are returned (without body)\n- Use includeMetadata to get additional information like API version, object type, and last modified date\n- If neither triggerName nor namePattern is provided, all Apex trigger names will be listed\n- Wildcards are supported in namePattern: * (matches any characters) and ? (matches a single character)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "triggerName": {
            "type": "string",
            "description": "Name of a specific Apex trigger to read"
          },
          "namePattern": {
            "type": "string",
            "description": "Pattern to match Apex trigger names (supports wildcards * and ?)"
          },
          "includeMetadata": {
            "type": "boolean",
            "description": "Whether to include metadata about the Apex triggers"
          }
        }
      }
    },
    {
      "name": "sfdc-salesforce_manage_debug_logs",
      "description": "Manage debug logs for Salesforce users - enable, disable, or retrieve logs.\n  \nExamples:\n1. Enable debug logs for a user:\n   {\n     \"operation\": \"enable\",\n     \"username\": \"user@example.com\",\n     \"logLevel\": \"DEBUG\",\n     \"expirationTime\": 30\n   }\n\n2. Disable debug logs for a user:\n   {\n     \"operation\": \"disable\",\n     \"username\": \"user@example.com\"\n   }\n\n3. Retrieve debug logs for a user:\n   {\n     \"operation\": \"retrieve\",\n     \"username\": \"user@example.com\",\n     \"limit\": 5\n   }\n\n4. Retrieve a specific log with full content:\n   {\n     \"operation\": \"retrieve\",\n     \"username\": \"user@example.com\",\n     \"logId\": \"07L1g000000XXXXEAA0\",\n     \"includeBody\": true\n   }\n\nNotes:\n- The operation must be one of: 'enable', 'disable', or 'retrieve'\n- The username parameter is required for all operations\n- For 'enable' operation, logLevel is optional (defaults to 'DEBUG')\n- Log levels: NONE, ERROR, WARN, INFO, DEBUG, FINE, FINER, FINEST\n- expirationTime is optional for 'enable' operation (minutes until expiration, defaults to 30)\n- limit is optional for 'retrieve' operation (maximum number of logs to return, defaults to 10)\n- logId is optional for 'retrieve' operation (to get a specific log)\n- includeBody is optional for 'retrieve' operation (to include the full log content, defaults to false)\n- The tool validates that the specified user exists before performing operations\n- If logLevel is not specified when enabling logs, the tool will ask for clarification",
      "inputSchema": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "enable",
              "disable",
              "retrieve"
            ],
            "description": "Operation to perform on debug logs"
          },
          "username": {
            "type": "string",
            "description": "Username of the Salesforce user"
          },
          "logLevel": {
            "type": "string",
            "enum": [
              "NONE",
              "ERROR",
              "WARN",
              "INFO",
              "DEBUG",
              "FINE",
              "FINER",
              "FINEST"
            ],
            "description": "Log level for debug logs (required for 'enable' operation)"
          },
          "expirationTime": {
            "type": "number",
            "description": "Minutes until the debug log configuration expires (optional, defaults to 30)"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of logs to retrieve (optional, defaults to 10)"
          },
          "logId": {
            "type": "string",
            "description": "ID of a specific log to retrieve (optional)"
          },
          "includeBody": {
            "type": "boolean",
            "description": "Whether to include the full log content (optional, defaults to false)"
          }
        },
        "required": [
          "operation",
          "username"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_describe_object",
      "description": "Get detailed schema metadata including all fields, relationships, and field properties of any Salesforce object. Examples: 'Account' shows all Account fields including custom fields; 'Case' shows all Case fields including relationships to Account, Contact etc.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "objectName": {
            "type": "string",
            "description": "API name of the object (e.g., 'Account', 'Contact', 'Custom_Object__c')"
          }
        },
        "required": [
          "objectName"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_search_all",
      "description": "Search across multiple Salesforce objects using SOSL (Salesforce Object Search Language).\n  \nExamples:\n1. Basic search across all objects:\n   {\n     \"searchTerm\": \"John\",\n     \"objects\": [\n       { \"name\": \"Account\", \"fields\": [\"Name\"], \"limit\": 10 },\n       { \"name\": \"Contact\", \"fields\": [\"FirstName\", \"LastName\", \"Email\"] }\n     ]\n   }\n\n2. Advanced search with filters:\n   {\n     \"searchTerm\": \"Cloud*\",\n     \"searchIn\": \"NAME FIELDS\",\n     \"objects\": [\n       { \n         \"name\": \"Account\", \n         \"fields\": [\"Name\", \"Industry\"], \n         \"orderBy\": \"Name DESC\",\n         \"where\": \"Industry = 'Technology'\"\n       }\n     ],\n     \"withClauses\": [\n       { \"type\": \"NETWORK\", \"value\": \"ALL NETWORKS\" },\n       { \"type\": \"SNIPPET\", \"fields\": [\"Description\"] }\n     ]\n   }\n\nNotes:\n- Use * and ? for wildcards in search terms\n- Each object can have its own WHERE, ORDER BY, and LIMIT clauses\n- Support for WITH clauses: DATA CATEGORY, DIVISION, METADATA, NETWORK, PRICEBOOKID, SNIPPET, SECURITY_ENFORCED\n- \"updateable\" and \"viewable\" options control record access filtering",
      "inputSchema": {
        "type": "object",
        "properties": {
          "searchTerm": {
            "type": "string",
            "description": "Text to search for (supports wildcards * and ?)"
          },
          "searchIn": {
            "type": "string",
            "enum": [
              "ALL FIELDS",
              "NAME FIELDS",
              "EMAIL FIELDS",
              "PHONE FIELDS",
              "SIDEBAR FIELDS"
            ],
            "description": "Which fields to search in",
            "optional": true
          },
          "objects": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "API name of the object"
                },
                "fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Fields to return for this object"
                },
                "where": {
                  "type": "string",
                  "description": "WHERE clause for this object",
                  "optional": true
                },
                "orderBy": {
                  "type": "string",
                  "description": "ORDER BY clause for this object",
                  "optional": true
                },
                "limit": {
                  "type": "number",
                  "description": "Maximum number of records to return for this object",
                  "optional": true
                }
              },
              "required": [
                "name",
                "fields"
              ]
            },
            "description": "List of objects to search and their return fields"
          },
          "withClauses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "DATA CATEGORY",
                    "DIVISION",
                    "METADATA",
                    "NETWORK",
                    "PRICEBOOKID",
                    "SNIPPET",
                    "SECURITY_ENFORCED"
                  ]
                },
                "value": {
                  "type": "string",
                  "description": "Value for the WITH clause",
                  "optional": true
                },
                "fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Fields for SNIPPET clause",
                  "optional": true
                }
              },
              "required": [
                "type"
              ]
            },
            "description": "Additional WITH clauses for the search",
            "optional": true
          },
          "updateable": {
            "type": "boolean",
            "description": "Return only updateable records",
            "optional": true
          },
          "viewable": {
            "type": "boolean",
            "description": "Return only viewable records",
            "optional": true
          }
        },
        "required": [
          "searchTerm",
          "objects"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_manage_field",
      "description": "Create new custom fields or modify existing fields on any Salesforce object:\n  - Field Types: Text, Number, Date, Lookup, Master-Detail, Picklist etc.\n  - Properties: Required, Unique, External ID, Length, Scale etc.\n  - Relationships: Create lookups and master-detail relationships\n  Examples: Add Rating__c picklist to Account, Create Account lookup on Custom Object\n  Note: Changes affect metadata and require proper permissions",
      "inputSchema": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "create",
              "update"
            ],
            "description": "Whether to create new field or update existing"
          },
          "objectName": {
            "type": "string",
            "description": "API name of the object to add/modify the field"
          },
          "fieldName": {
            "type": "string",
            "description": "API name for the field (without __c suffix)"
          },
          "label": {
            "type": "string",
            "description": "Label for the field",
            "optional": true
          },
          "type": {
            "type": "string",
            "enum": [
              "Checkbox",
              "Currency",
              "Date",
              "DateTime",
              "Email",
              "Number",
              "Percent",
              "Phone",
              "Picklist",
              "MultiselectPicklist",
              "Text",
              "TextArea",
              "LongTextArea",
              "Html",
              "Url",
              "Lookup",
              "MasterDetail"
            ],
            "description": "Field type (required for create)",
            "optional": true
          },
          "required": {
            "type": "boolean",
            "description": "Whether the field is required",
            "optional": true
          },
          "unique": {
            "type": "boolean",
            "description": "Whether the field value must be unique",
            "optional": true
          },
          "externalId": {
            "type": "boolean",
            "description": "Whether the field is an external ID",
            "optional": true
          },
          "length": {
            "type": "number",
            "description": "Length for text fields",
            "optional": true
          },
          "precision": {
            "type": "number",
            "description": "Precision for numeric fields",
            "optional": true
          },
          "scale": {
            "type": "number",
            "description": "Scale for numeric fields",
            "optional": true
          },
          "referenceTo": {
            "type": "string",
            "description": "API name of the object to reference (for Lookup/MasterDetail)",
            "optional": true
          },
          "relationshipLabel": {
            "type": "string",
            "description": "Label for the relationship (for Lookup/MasterDetail)",
            "optional": true
          },
          "relationshipName": {
            "type": "string",
            "description": "API name for the relationship (for Lookup/MasterDetail)",
            "optional": true
          },
          "deleteConstraint": {
            "type": "string",
            "enum": [
              "Cascade",
              "Restrict",
              "SetNull"
            ],
            "description": "Delete constraint for Lookup fields",
            "optional": true
          },
          "picklistValues": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean",
                  "optional": true
                }
              }
            },
            "description": "Values for Picklist/MultiselectPicklist fields",
            "optional": true
          },
          "description": {
            "type": "string",
            "description": "Description of the field",
            "optional": true
          }
        },
        "required": [
          "operation",
          "objectName",
          "fieldName"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_read_apex",
      "description": "Read Apex classes from Salesforce.\n  \nExamples:\n1. Read a specific Apex class by name:\n   {\n     \"className\": \"AccountController\"\n   }\n\n2. List all Apex classes with an optional name pattern:\n   {\n     \"namePattern\": \"Controller\"\n   }\n\n3. Get metadata about Apex classes:\n   {\n     \"includeMetadata\": true,\n     \"namePattern\": \"Trigger\"\n   }\n\n4. Use wildcards in name patterns:\n   {\n     \"namePattern\": \"Account*Cont*\"\n   }\n\nNotes:\n- When className is provided, the full body of that specific class is returned\n- When namePattern is provided, all matching class names are returned (without body)\n- Use includeMetadata to get additional information like API version, length, and last modified date\n- If neither className nor namePattern is provided, all Apex class names will be listed\n- Wildcards are supported in namePattern: * (matches any characters) and ? (matches a single character)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "className": {
            "type": "string",
            "description": "Name of a specific Apex class to read"
          },
          "namePattern": {
            "type": "string",
            "description": "Pattern to match Apex class names (supports wildcards * and ?)"
          },
          "includeMetadata": {
            "type": "boolean",
            "description": "Whether to include metadata about the Apex classes"
          }
        }
      }
    },
    {
      "name": "sfdc-salesforce_write_apex",
      "description": "Create or update Apex classes in Salesforce.\n  \nExamples:\n1. Create a new Apex class:\n   {\n     \"operation\": \"create\",\n     \"className\": \"AccountService\",\n     \"apiVersion\": \"58.0\",\n     \"body\": \"public class AccountService { public static void updateAccounts() { /* implementation */ } }\"\n   }\n\n2. Update an existing Apex class:\n   {\n     \"operation\": \"update\",\n     \"className\": \"AccountService\",\n     \"body\": \"public class AccountService { public static void updateAccounts() { /* updated implementation */ } }\"\n   }\n\nNotes:\n- The operation must be either 'create' or 'update'\n- For 'create' operations, className and body are required\n- For 'update' operations, className and body are required\n- apiVersion is optional for 'create' (defaults to the latest version)\n- The body must be valid Apex code\n- The className in the body must match the className parameter\n- Status information is returned after successful operations",
      "inputSchema": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "create",
              "update"
            ],
            "description": "Whether to create a new class or update an existing one"
          },
          "className": {
            "type": "string",
            "description": "Name of the Apex class to create or update"
          },
          "apiVersion": {
            "type": "string",
            "description": "API version for the Apex class (e.g., '58.0')"
          },
          "body": {
            "type": "string",
            "description": "Full body of the Apex class"
          }
        },
        "required": [
          "operation",
          "className",
          "body"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_write_apex_trigger",
      "description": "Create or update Apex triggers in Salesforce.\n  \nExamples:\n1. Create a new Apex trigger:\n   {\n     \"operation\": \"create\",\n     \"triggerName\": \"AccountTrigger\",\n     \"objectName\": \"Account\",\n     \"apiVersion\": \"58.0\",\n     \"body\": \"trigger AccountTrigger on Account (before insert, before update) { /* implementation */ }\"\n   }\n\n2. Update an existing Apex trigger:\n   {\n     \"operation\": \"update\",\n     \"triggerName\": \"AccountTrigger\",\n     \"body\": \"trigger AccountTrigger on Account (before insert, before update, after update) { /* updated implementation */ }\"\n   }\n\nNotes:\n- The operation must be either 'create' or 'update'\n- For 'create' operations, triggerName, objectName, and body are required\n- For 'update' operations, triggerName and body are required\n- apiVersion is optional for 'create' (defaults to the latest version)\n- The body must be valid Apex trigger code\n- The triggerName in the body must match the triggerName parameter\n- The objectName in the body must match the objectName parameter (for 'create')\n- Status information is returned after successful operations",
      "inputSchema": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "create",
              "update"
            ],
            "description": "Whether to create a new trigger or update an existing one"
          },
          "triggerName": {
            "type": "string",
            "description": "Name of the Apex trigger to create or update"
          },
          "objectName": {
            "type": "string",
            "description": "Name of the Salesforce object the trigger is for (required for 'create')"
          },
          "apiVersion": {
            "type": "string",
            "description": "API version for the Apex trigger (e.g., '58.0')"
          },
          "body": {
            "type": "string",
            "description": "Full body of the Apex trigger"
          }
        },
        "required": [
          "operation",
          "triggerName",
          "body"
        ]
      }
    },
    {
      "name": "sfdc-salesforce_manage_object",
      "description": "Create new custom objects or modify existing ones in Salesforce:\n  - Create: New custom objects with fields, relationships, and settings\n  - Update: Modify existing object settings, labels, sharing model\n  Examples: Create Customer_Feedback__c object, Update object sharing settings\n  Note: Changes affect metadata and require proper permissions",
      "inputSchema": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "create",
              "update"
            ],
            "description": "Whether to create new object or update existing"
          },
          "objectName": {
            "type": "string",
            "description": "API name for the object (without __c suffix)"
          },
          "label": {
            "type": "string",
            "description": "Label for the object"
          },
          "pluralLabel": {
            "type": "string",
            "description": "Plural label for the object"
          },
          "description": {
            "type": "string",
            "description": "Description of the object",
            "optional": true
          },
          "nameFieldLabel": {
            "type": "string",
            "description": "Label for the name field",
            "optional": true
          },
          "nameFieldType": {
            "type": "string",
            "enum": [
              "Text",
              "AutoNumber"
            ],
            "description": "Type of the name field",
            "optional": true
          },
          "nameFieldFormat": {
            "type": "string",
            "description": "Display format for AutoNumber field (e.g., 'A-{0000}')",
            "optional": true
          },
          "sharingModel": {
            "type": "string",
            "enum": [
              "ReadWrite",
              "Read",
              "Private",
              "ControlledByParent"
            ],
            "description": "Sharing model for the object",
            "optional": true
          }
        },
        "required": [
          "operation",
          "objectName"
        ]
      }
    },
    {
      "name": "github-get_commit",
      "description": "Get details for a commit from a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "sha": {
            "description": "Commit SHA, branch name, or tag name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "sha"
        ]
      }
    },
    {
      "name": "github-search_users",
      "description": "Search for GitHub users",
      "inputSchema": {
        "type": "object",
        "properties": {
          "order": {
            "description": "Sort order",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "q": {
            "description": "Search query using GitHub users search syntax",
            "type": "string"
          },
          "sort": {
            "description": "Sort field by category",
            "enum": [
              "followers",
              "repositories",
              "joined"
            ],
            "type": "string"
          }
        },
        "required": [
          "q"
        ]
      }
    },
    {
      "name": "github-create_branch",
      "description": "Create a new branch in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "branch": {
            "description": "Name for new branch",
            "type": "string"
          },
          "from_branch": {
            "description": "Source branch (defaults to repo default)",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "branch"
        ]
      }
    },
    {
      "name": "github-get_pull_request",
      "description": "Get details of a specific pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      }
    },
    {
      "name": "github-merge_pull_request",
      "description": "Merge a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "commit_message": {
            "description": "Extra detail for merge commit",
            "type": "string"
          },
          "commit_title": {
            "description": "Title for merge commit",
            "type": "string"
          },
          "merge_method": {
            "description": "Merge method",
            "enum": [
              "merge",
              "squash",
              "rebase"
            ],
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      }
    },
    {
      "name": "github-create_pull_request_review",
      "description": "Create a review on a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "description": "Review comment text",
            "type": "string"
          },
          "comments": {
            "description": "Line-specific comments array of objects to place comments on pull request changes. Requires path and body. For line comments use line or position. For multi-line comments use start_line and line with optional side parameters.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "body": {
                  "description": "comment body",
                  "type": "string"
                },
                "line": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "line number in the file to comment on. For multi-line comments, the end of the line range"
                },
                "path": {
                  "description": "path to the file",
                  "type": "string"
                },
                "position": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "position of the comment in the diff"
                },
                "side": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range. (LEFT or RIGHT)"
                },
                "start_line": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The first line of the range to which the comment refers. Required for multi-line comments."
                },
                "start_side": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The side of the diff on which the start line resides for multi-line comments. (LEFT or RIGHT)"
                }
              },
              "required": [
                "path",
                "body",
                "position",
                "line",
                "side",
                "start_line",
                "start_side"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "commitId": {
            "description": "SHA of commit to review",
            "type": "string"
          },
          "event": {
            "description": "Review action to perform",
            "enum": [
              "APPROVE",
              "REQUEST_CHANGES",
              "COMMENT"
            ],
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber",
          "event"
        ]
      }
    },
    {
      "name": "github-list_commits",
      "description": "Get list of commits of a branch in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "sha": {
            "description": "SHA or Branch name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      }
    },
    {
      "name": "github-push_files",
      "description": "Push multiple files to a GitHub repository in a single commit",
      "inputSchema": {
        "type": "object",
        "properties": {
          "branch": {
            "description": "Branch to push to",
            "type": "string"
          },
          "files": {
            "description": "Array of file objects to push, each object with path (string) and content (string)",
            "items": {
              "additionalProperties": false,
              "properties": {
                "content": {
                  "description": "file content",
                  "type": "string"
                },
                "path": {
                  "description": "path to the file",
                  "type": "string"
                }
              },
              "required": [
                "path",
                "content"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "message": {
            "description": "Commit message",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "branch",
          "files",
          "message"
        ]
      }
    },
    {
      "name": "github-get_pull_request_comments",
      "description": "Get the review comments on a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      }
    },
    {
      "name": "github-search_issues",
      "description": "Search for issues and pull requests across GitHub repositories",
      "inputSchema": {
        "type": "object",
        "properties": {
          "order": {
            "description": "Sort order",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "q": {
            "description": "Search query using GitHub issues search syntax",
            "type": "string"
          },
          "sort": {
            "description": "Sort field by number of matches of categories, defaults to best match",
            "enum": [
              "comments",
              "reactions",
              "reactions-+1",
              "reactions--1",
              "reactions-smile",
              "reactions-thinking_face",
              "reactions-heart",
              "reactions-tada",
              "interactions",
              "created",
              "updated"
            ],
            "type": "string"
          }
        },
        "required": [
          "q"
        ]
      }
    },
    {
      "name": "github-list_code_scanning_alerts",
      "description": "List code scanning alerts in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "The owner of the repository.",
            "type": "string"
          },
          "ref": {
            "description": "The Git reference for the results you want to list.",
            "type": "string"
          },
          "repo": {
            "description": "The name of the repository.",
            "type": "string"
          },
          "severity": {
            "description": "Filter code scanning alerts by severity",
            "enum": [
              "critical",
              "high",
              "medium",
              "low",
              "warning",
              "note",
              "error"
            ],
            "type": "string"
          },
          "state": {
            "default": "open",
            "description": "Filter code scanning alerts by state. Defaults to open",
            "enum": [
              "open",
              "closed",
              "dismissed",
              "fixed"
            ],
            "type": "string"
          },
          "tool_name": {
            "description": "The name of the tool used for code scanning.",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      }
    },
    {
      "name": "github-list_branches",
      "description": "List branches in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      }
    },
    {
      "name": "github-create_or_update_file",
      "description": "Create or update a single file in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "branch": {
            "description": "Branch to create/update the file in",
            "type": "string"
          },
          "content": {
            "description": "Content of the file",
            "type": "string"
          },
          "message": {
            "description": "Commit message",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner (username or organization)",
            "type": "string"
          },
          "path": {
            "description": "Path where to create/update the file",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "sha": {
            "description": "SHA of file being replaced (for updates)",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "path",
          "content",
          "message",
          "branch"
        ]
      }
    },
    {
      "name": "github-get_pull_request_reviews",
      "description": "Get the reviews on a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      }
    },
    {
      "name": "github-create_pull_request",
      "description": "Create a new pull request in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "base": {
            "description": "Branch to merge into",
            "type": "string"
          },
          "body": {
            "description": "PR description",
            "type": "string"
          },
          "draft": {
            "description": "Create as draft PR",
            "type": "boolean"
          },
          "head": {
            "description": "Branch containing changes",
            "type": "string"
          },
          "maintainer_can_modify": {
            "description": "Allow maintainer edits",
            "type": "boolean"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "title": {
            "description": "PR title",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "title",
          "head",
          "base"
        ]
      }
    },
    {
      "name": "github-update_pull_request",
      "description": "Update an existing pull request in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "base": {
            "description": "New base branch name",
            "type": "string"
          },
          "body": {
            "description": "New description",
            "type": "string"
          },
          "maintainer_can_modify": {
            "description": "Allow maintainer edits",
            "type": "boolean"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number to update",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "state": {
            "description": "New state",
            "enum": [
              "open",
              "closed"
            ],
            "type": "string"
          },
          "title": {
            "description": "New title",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      }
    },
    {
      "name": "github-update_pull_request_branch",
      "description": "Update a pull request branch with the latest changes from the base branch",
      "inputSchema": {
        "type": "object",
        "properties": {
          "expectedHeadSha": {
            "description": "The expected SHA of the pull request's HEAD ref",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      }
    },
    {
      "name": "github-search_repositories",
      "description": "Search for GitHub repositories",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "query": {
            "description": "Search query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ]
      }
    },
    {
      "name": "github-add_pull_request_review_comment",
      "description": "Add a review comment to a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "description": "The text of the review comment",
            "type": "string"
          },
          "commit_id": {
            "description": "The SHA of the commit to comment on. Required unless in_reply_to is specified.",
            "type": "string"
          },
          "in_reply_to": {
            "description": "The ID of the review comment to reply to. When specified, only body is required and all other parameters are ignored",
            "type": "number"
          },
          "line": {
            "description": "The line of the blob in the pull request diff that the comment applies to. For multi-line comments, the last line of the range",
            "type": "number"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "path": {
            "description": "The relative path to the file that necessitates a comment. Required unless in_reply_to is specified.",
            "type": "string"
          },
          "pull_number": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "side": {
            "description": "The side of the diff to comment on",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "type": "string"
          },
          "start_line": {
            "description": "For multi-line comments, the first line of the range that the comment applies to",
            "type": "number"
          },
          "start_side": {
            "description": "For multi-line comments, the starting side of the diff that the comment applies to",
            "enum": [
              "LEFT",
              "RIGHT"
            ],
            "type": "string"
          },
          "subject_type": {
            "description": "The level at which the comment is targeted",
            "enum": [
              "line",
              "file"
            ],
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pull_number",
          "body"
        ]
      }
    },
    {
      "name": "github-get_me",
      "description": "Get details of the authenticated GitHub user. Use this when a request include \"me\", \"my\"...",
      "inputSchema": {
        "type": "object",
        "properties": {
          "reason": {
            "description": "Optional: reason the session was created",
            "type": "string"
          }
        }
      }
    },
    {
      "name": "github-list_secret_scanning_alerts",
      "description": "List secret scanning alerts in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "The owner of the repository.",
            "type": "string"
          },
          "repo": {
            "description": "The name of the repository.",
            "type": "string"
          },
          "resolution": {
            "description": "Filter by resolution",
            "enum": [
              "false_positive",
              "wont_fix",
              "revoked",
              "pattern_edited",
              "pattern_deleted",
              "used_in_tests"
            ],
            "type": "string"
          },
          "secret_type": {
            "description": "A comma-separated list of secret types to return. All default secret patterns are returned. To return generic patterns, pass the token name(s) in the parameter.",
            "type": "string"
          },
          "state": {
            "description": "Filter by state",
            "enum": [
              "open",
              "resolved"
            ],
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      }
    },
    {
      "name": "github-get_file_contents",
      "description": "Get the contents of a file or directory from a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "branch": {
            "description": "Branch to get contents from",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner (username or organization)",
            "type": "string"
          },
          "path": {
            "description": "Path to file/directory",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "path"
        ]
      }
    },
    {
      "name": "github-get_code_scanning_alert",
      "description": "Get details of a specific code scanning alert in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "alertNumber": {
            "description": "The number of the alert.",
            "type": "number"
          },
          "owner": {
            "description": "The owner of the repository.",
            "type": "string"
          },
          "repo": {
            "description": "The name of the repository.",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "alertNumber"
        ]
      }
    },
    {
      "name": "github-get_secret_scanning_alert",
      "description": "Get details of a specific secret scanning alert in a GitHub repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "alertNumber": {
            "description": "The number of the alert.",
            "type": "number"
          },
          "owner": {
            "description": "The owner of the repository.",
            "type": "string"
          },
          "repo": {
            "description": "The name of the repository.",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "alertNumber"
        ]
      }
    },
    {
      "name": "github-search_code",
      "description": "Search for code across GitHub repositories",
      "inputSchema": {
        "type": "object",
        "properties": {
          "order": {
            "description": "Sort order",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "q": {
            "description": "Search query using GitHub code search syntax",
            "type": "string"
          },
          "sort": {
            "description": "Sort field ('indexed' only)",
            "type": "string"
          }
        },
        "required": [
          "q"
        ]
      }
    },
    {
      "name": "github-add_issue_comment",
      "description": "Add a comment to an existing issue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "description": "Comment content",
            "type": "string"
          },
          "issue_number": {
            "description": "Issue number to comment on",
            "type": "number"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number",
          "body"
        ]
      }
    },
    {
      "name": "github-fork_repository",
      "description": "Fork a GitHub repository to your account or specified organization",
      "inputSchema": {
        "type": "object",
        "properties": {
          "organization": {
            "description": "Organization to fork to",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      }
    },
    {
      "name": "github-list_issues",
      "description": "List issues in a GitHub repository with filtering options",
      "inputSchema": {
        "type": "object",
        "properties": {
          "direction": {
            "description": "Sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "labels": {
            "description": "Filter by labels",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "since": {
            "description": "Filter by date (ISO 8601 timestamp)",
            "type": "string"
          },
          "sort": {
            "description": "Sort order",
            "enum": [
              "created",
              "updated",
              "comments"
            ],
            "type": "string"
          },
          "state": {
            "description": "Filter by state",
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      }
    },
    {
      "name": "github-create_repository",
      "description": "Create a new GitHub repository in your account",
      "inputSchema": {
        "type": "object",
        "properties": {
          "autoInit": {
            "description": "Initialize with README",
            "type": "boolean"
          },
          "description": {
            "description": "Repository description",
            "type": "string"
          },
          "name": {
            "description": "Repository name",
            "type": "string"
          },
          "private": {
            "description": "Whether repo should be private",
            "type": "boolean"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "name": "github-update_issue",
      "description": "Update an existing issue in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "assignees": {
            "description": "New assignees",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "body": {
            "description": "New description",
            "type": "string"
          },
          "issue_number": {
            "description": "Issue number to update",
            "type": "number"
          },
          "labels": {
            "description": "New labels",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "milestone": {
            "description": "New milestone number",
            "type": "number"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "state": {
            "description": "New state",
            "enum": [
              "open",
              "closed"
            ],
            "type": "string"
          },
          "title": {
            "description": "New title",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ]
      }
    },
    {
      "name": "github-list_pull_requests",
      "description": "List and filter repository pull requests",
      "inputSchema": {
        "type": "object",
        "properties": {
          "base": {
            "description": "Filter by base branch",
            "type": "string"
          },
          "direction": {
            "description": "Sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "type": "string"
          },
          "head": {
            "description": "Filter by head user/org and branch",
            "type": "string"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number for pagination (min 1)",
            "minimum": 1,
            "type": "number"
          },
          "perPage": {
            "description": "Results per page for pagination (min 1, max 100)",
            "maximum": 100,
            "minimum": 1,
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "sort": {
            "description": "Sort by",
            "enum": [
              "created",
              "updated",
              "popularity",
              "long-running"
            ],
            "type": "string"
          },
          "state": {
            "description": "Filter by state",
            "enum": [
              "open",
              "closed",
              "all"
            ],
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo"
        ]
      }
    },
    {
      "name": "github-get_issue_comments",
      "description": "Get comments for a GitHub issue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_number": {
            "description": "Issue number",
            "type": "number"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "page": {
            "description": "Page number",
            "type": "number"
          },
          "per_page": {
            "description": "Number of records per page",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ]
      }
    },
    {
      "name": "github-get_issue",
      "description": "Get details of a specific issue in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "issue_number": {
            "description": "The number of the issue",
            "type": "number"
          },
          "owner": {
            "description": "The owner of the repository",
            "type": "string"
          },
          "repo": {
            "description": "The name of the repository",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "issue_number"
        ]
      }
    },
    {
      "name": "github-get_pull_request_files",
      "description": "Get the list of files changed in a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      }
    },
    {
      "name": "github-get_pull_request_status",
      "description": "Get the combined status of all status checks for a pull request",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "pullNumber": {
            "description": "Pull request number",
            "type": "number"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "pullNumber"
        ]
      }
    },
    {
      "name": "github-create_issue",
      "description": "Create a new issue in a GitHub repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "assignees": {
            "description": "Usernames to assign to this issue",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "body": {
            "description": "Issue body content",
            "type": "string"
          },
          "labels": {
            "description": "Labels to apply to this issue",
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "milestone": {
            "description": "Milestone number",
            "type": "number"
          },
          "owner": {
            "description": "Repository owner",
            "type": "string"
          },
          "repo": {
            "description": "Repository name",
            "type": "string"
          },
          "title": {
            "description": "Issue title",
            "type": "string"
          }
        },
        "required": [
          "owner",
          "repo",
          "title"
        ]
      }
    },
    {
      "name": "slides-add_slide_shape",
      "description": "Add a shape to a Google Slides presentation with customizable properties",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/AddShapeInput"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "AddShapeInput": {
            "properties": {
              "presentation_id": {
                "description": "The ID of the Google Slides presentation (found in the URL).",
                "title": "Presentation Id",
                "type": "string"
              },
              "page_id": {
                "description": "The ID of the slide page to add the shape to.",
                "title": "Page Id",
                "type": "string"
              },
              "shape_type": {
                "$ref": "#/$defs/ShapeType",
                "description": "The type of shape to add to the slide."
              },
              "position": {
                "$ref": "#/$defs/Position",
                "description": "The position of the shape on the slide."
              },
              "size": {
                "$ref": "#/$defs/Size",
                "description": "The size of the shape."
              },
              "fill": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/SolidFill"
                  },
                  {
                    "$ref": "#/$defs/NoFill"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The fill configuration for the shape. If not specified, uses presentation default.",
                "title": "Fill"
              },
              "border": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Border"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The border configuration for the shape. If not specified, uses presentation default."
              },
              "rotation": {
                "default": 0,
                "description": "The rotation of the shape in degrees (0-360).",
                "maximum": 360,
                "minimum": 0,
                "title": "Rotation",
                "type": "number"
              },
              "text_content": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Text content to add inside the shape. If not specified, the shape will be empty.",
                "title": "Text Content"
              },
              "text_format": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/TextFormat"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Formatting options for the text content. Only applies if text_content is specified."
              }
            },
            "required": [
              "presentation_id",
              "page_id",
              "shape_type",
              "position",
              "size"
            ],
            "title": "AddShapeInput",
            "type": "object"
          },
          "Border": {
            "properties": {
              "weight": {
                "$ref": "#/$defs/BorderWeight",
                "default": "MEDIUM",
                "description": "The weight/thickness of the border."
              },
              "dash_style": {
                "$ref": "#/$defs/BorderDashStyle",
                "default": "SOLID",
                "description": "The dash style of the border."
              },
              "color": {
                "$ref": "#/$defs/Color",
                "description": "The color of the border."
              }
            },
            "required": [
              "color"
            ],
            "title": "Border",
            "type": "object"
          },
          "BorderDashStyle": {
            "enum": [
              "SOLID",
              "DOT",
              "DASH",
              "DASH_DOT",
              "LONG_DASH",
              "LONG_DASH_DOT"
            ],
            "title": "BorderDashStyle",
            "type": "string"
          },
          "BorderWeight": {
            "enum": [
              "HAIRLINE",
              "THIN",
              "MEDIUM",
              "THICK"
            ],
            "title": "BorderWeight",
            "type": "string"
          },
          "Color": {
            "properties": {
              "type": {
                "$ref": "#/$defs/ColorType",
                "default": "RGB",
                "description": "The color type. Either RGB or HSL."
              },
              "red": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Red component value (0.0 to 1.0). Required for RGB type.",
                "title": "Red"
              },
              "green": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Green component value (0.0 to 1.0). Required for RGB type.",
                "title": "Green"
              },
              "blue": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Blue component value (0.0 to 1.0). Required for RGB type.",
                "title": "Blue"
              },
              "hue": {
                "anyOf": [
                  {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Hue component value (0.0 to 360.0). Required for HSL type.",
                "title": "Hue"
              },
              "saturation": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Saturation component value (0.0 to 1.0). Required for HSL type.",
                "title": "Saturation"
              },
              "lightness": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Lightness component value (0.0 to 1.0). Required for HSL type.",
                "title": "Lightness"
              },
              "alpha": {
                "default": 1,
                "description": "Alpha (opacity) value (0.0 to 1.0). 1.0 is fully opaque.",
                "maximum": 1,
                "minimum": 0,
                "title": "Alpha",
                "type": "number"
              }
            },
            "title": "Color",
            "type": "object"
          },
          "ColorType": {
            "enum": [
              "RGB",
              "HSL"
            ],
            "title": "ColorType",
            "type": "string"
          },
          "NoFill": {
            "properties": {
              "type": {
                "const": "NONE",
                "default": "NONE",
                "description": "Indicates no fill should be applied to the shape.",
                "title": "Type",
                "type": "string"
              }
            },
            "title": "NoFill",
            "type": "object"
          },
          "Position": {
            "properties": {
              "x": {
                "description": "The x-coordinate of the shape's top-left corner. The slide's top-left corner is at (0,0).",
                "title": "X",
                "type": "number"
              },
              "y": {
                "description": "The y-coordinate of the shape's top-left corner. The slide's top-left corner is at (0,0).",
                "title": "Y",
                "type": "number"
              },
              "unit": {
                "$ref": "#/$defs/Unit",
                "default": "PT",
                "description": "The unit of measurement for x and y coordinates."
              }
            },
            "required": [
              "x",
              "y"
            ],
            "title": "Position",
            "type": "object"
          },
          "ShapeType": {
            "description": "Enum of available shape types for Google Slides.",
            "enum": [
              "TEXT_BOX",
              "RECTANGLE",
              "ROUND_RECTANGLE",
              "ELLIPSE",
              "ARC",
              "BENT_ARROW",
              "BENT_UP_ARROW",
              "BEVEL",
              "BLOCK_ARC",
              "BRACE_PAIR",
              "BRACKET_PAIR",
              "CAN",
              "CHEVRON",
              "CHORD",
              "CLOUD",
              "CORNER",
              "CUBE",
              "CURVED_DOWN_ARROW",
              "CURVED_LEFT_ARROW",
              "CURVED_RIGHT_ARROW",
              "CURVED_UP_ARROW",
              "DECAGON",
              "DIAGONAL_STRIPE",
              "DIAMOND",
              "DODECAGON",
              "DONUT",
              "DOUBLE_WAVE",
              "DOWN_ARROW",
              "DOWN_ARROW_CALLOUT",
              "FOLDED_CORNER",
              "FRAME",
              "HALF_FRAME",
              "HEART",
              "HEPTAGON",
              "HEXAGON",
              "HOME_PLATE",
              "HORIZONTAL_SCROLL",
              "IRREGULAR_SEAL_1",
              "IRREGULAR_SEAL_2",
              "LEFT_ARROW",
              "LEFT_ARROW_CALLOUT",
              "LEFT_BRACE",
              "LEFT_BRACKET",
              "LEFT_RIGHT_ARROW",
              "LEFT_RIGHT_ARROW_CALLOUT",
              "LEFT_RIGHT_UP_ARROW",
              "LEFT_UP_ARROW",
              "LIGHTNING_BOLT",
              "MATH_DIVIDE",
              "MATH_EQUAL",
              "MATH_MINUS",
              "MATH_MULTIPLY",
              "MATH_NOT_EQUAL",
              "MATH_PLUS",
              "MOON",
              "NO_SMOKING",
              "NOTCHED_RIGHT_ARROW",
              "OCTAGON",
              "PARALLELOGRAM",
              "PENTAGON",
              "PIE",
              "PLAQUE",
              "PLUS",
              "QUAD_ARROW",
              "QUAD_ARROW_CALLOUT",
              "RIBBON",
              "RIBBON_2",
              "RIGHT_ARROW",
              "RIGHT_ARROW_CALLOUT",
              "RIGHT_BRACE",
              "RIGHT_BRACKET",
              "ROUND_1_RECTANGLE",
              "ROUND_2_DIAGONAL_RECTANGLE",
              "ROUND_2_SAME_RECTANGLE",
              "RIGHT_TRIANGLE",
              "SMILEY_FACE",
              "SNIP_1_RECTANGLE",
              "SNIP_2_DIAGONAL_RECTANGLE",
              "SNIP_2_SAME_RECTANGLE",
              "SNIP_ROUND_RECTANGLE",
              "STAR_10",
              "STAR_12",
              "STAR_16",
              "STAR_24",
              "STAR_32",
              "STAR_4",
              "STAR_5",
              "STAR_6",
              "STAR_7",
              "STAR_8",
              "STRIPED_RIGHT_ARROW",
              "SUN",
              "TRAPEZOID",
              "TRIANGLE",
              "UP_ARROW",
              "UP_ARROW_CALLOUT",
              "UP_DOWN_ARROW",
              "UTURN_ARROW",
              "VERTICAL_SCROLL",
              "WAVE",
              "WEDGE_ELLIPSE_CALLOUT",
              "WEDGE_RECTANGLE_CALLOUT",
              "WEDGE_ROUND_RECTANGLE_CALLOUT",
              "FLOW_CHART_ALTERNATE_PROCESS",
              "FLOW_CHART_COLLATE",
              "FLOW_CHART_CONNECTOR",
              "FLOW_CHART_DECISION",
              "FLOW_CHART_DELAY",
              "FLOW_CHART_DISPLAY",
              "FLOW_CHART_DOCUMENT",
              "FLOW_CHART_EXTRACT",
              "FLOW_CHART_INPUT_OUTPUT",
              "FLOW_CHART_INTERNAL_STORAGE",
              "FLOW_CHART_MAGNETIC_DISK",
              "FLOW_CHART_MAGNETIC_DRUM",
              "FLOW_CHART_MAGNETIC_TAPE",
              "FLOW_CHART_MANUAL_INPUT",
              "FLOW_CHART_MANUAL_OPERATION",
              "FLOW_CHART_MERGE",
              "FLOW_CHART_MULTIDOCUMENT",
              "FLOW_CHART_OFFLINE_STORAGE",
              "FLOW_CHART_OFFPAGE_CONNECTOR",
              "FLOW_CHART_ONLINE_STORAGE",
              "FLOW_CHART_OR",
              "FLOW_CHART_PREDEFINED_PROCESS",
              "FLOW_CHART_PREPARATION",
              "FLOW_CHART_PROCESS",
              "FLOW_CHART_PUNCHED_CARD",
              "FLOW_CHART_PUNCHED_TAPE",
              "FLOW_CHART_SORT",
              "FLOW_CHART_SUMMING_JUNCTION",
              "FLOW_CHART_TERMINATOR",
              "ARROW_EAST",
              "ARROW_NORTH_EAST",
              "ARROW_NORTH",
              "SPEECH",
              "STARBURST",
              "TEARDROP",
              "ELLIPSE_RIBBON",
              "ELLIPSE_RIBBON_2",
              "CLOUD_CALLOUT"
            ],
            "title": "ShapeType",
            "type": "string"
          },
          "Size": {
            "properties": {
              "width": {
                "description": "The width of the shape.",
                "exclusiveMinimum": 0,
                "title": "Width",
                "type": "number"
              },
              "height": {
                "description": "The height of the shape.",
                "exclusiveMinimum": 0,
                "title": "Height",
                "type": "number"
              },
              "unit": {
                "$ref": "#/$defs/Unit",
                "default": "PT",
                "description": "The unit of measurement for width and height."
              }
            },
            "required": [
              "width",
              "height"
            ],
            "title": "Size",
            "type": "object"
          },
          "SolidFill": {
            "properties": {
              "type": {
                "const": "SOLID",
                "default": "SOLID",
                "description": "The fill type. Always SOLID for this model.",
                "title": "Type",
                "type": "string"
              },
              "color": {
                "$ref": "#/$defs/Color",
                "description": "The color to fill the shape with."
              }
            },
            "required": [
              "color"
            ],
            "title": "SolidFill",
            "type": "object"
          },
          "TextFormat": {
            "properties": {
              "font_family": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The font family to use for the text. If not specified, uses the presentation default.",
                "title": "Font Family"
              },
              "font_size": {
                "anyOf": [
                  {
                    "exclusiveMinimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The font size in points. If not specified, uses the presentation default.",
                "title": "Font Size"
              },
              "bold": {
                "default": false,
                "description": "Whether the text should be bold.",
                "title": "Bold",
                "type": "boolean"
              },
              "italic": {
                "default": false,
                "description": "Whether the text should be italic.",
                "title": "Italic",
                "type": "boolean"
              },
              "underline": {
                "default": false,
                "description": "Whether the text should be underlined.",
                "title": "Underline",
                "type": "boolean"
              },
              "color": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Color"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The color of the text. If not specified, uses the presentation default."
              }
            },
            "title": "TextFormat",
            "type": "object"
          },
          "Unit": {
            "enum": [
              "PT",
              "EMU"
            ],
            "title": "Unit",
            "type": "string"
          }
        },
        "title": "add_slide_shapeArguments"
      }
    },
    {
      "name": "slides-get_slides_info",
      "description": "Retrieve information about all slides in a Google Slides presentation",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/GetSlidesInfoInput"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "GetSlidesInfoInput": {
            "description": "Input parameters for retrieving slides from a Google Slides presentation.",
            "properties": {
              "presentation_id": {
                "description": "The ID of the Google Slides presentation to retrieve slides from",
                "title": "Presentation Id",
                "type": "string"
              },
              "include_title_text": {
                "default": true,
                "description": "Whether to extract and include the title text from each slide",
                "title": "Include Title Text",
                "type": "boolean"
              },
              "include_notes_info": {
                "default": true,
                "description": "Whether to include notes page information for each slide",
                "title": "Include Notes Info",
                "type": "boolean"
              }
            },
            "required": [
              "presentation_id"
            ],
            "title": "GetSlidesInfoInput",
            "type": "object"
          }
        },
        "title": "get_slides_infoArguments"
      }
    },
    {
      "name": "slides-add_slide",
      "description": "Add a new slide to a Google Slides presentation with customizable layout and content. MUST supply the title/subtitle/body_text parameters now if they exist.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/AddSlideInput"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "AddSlideInput": {
            "description": "Input parameters for adding a slide to a Google Slides presentation.",
            "properties": {
              "presentation_id": {
                "description": "The ID of the Google Slides presentation to add the slide to",
                "title": "Presentation Id",
                "type": "string"
              },
              "layout": {
                "$ref": "#/$defs/SlideLayout",
                "default": "BLANK",
                "description": "The layout type for the new slide"
              },
              "insert_index": {
                "anyOf": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Position to insert the slide (0-based index). If not provided, appends to the end",
                "title": "Insert Index"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Title text for the slide (if layout supports it)",
                "title": "Title"
              },
              "subtitle": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Subtitle text for the slide (for TITLE_SLIDE layout)",
                "title": "Subtitle"
              },
              "body_text": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Main body text for the slide (if layout supports it)",
                "title": "Body Text"
              },
              "slide_notes": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Speaker notes to add to the slide",
                "title": "Slide Notes"
              }
            },
            "required": [
              "presentation_id"
            ],
            "title": "AddSlideInput",
            "type": "object"
          },
          "SlideLayout": {
            "description": "Available predefined slide layout types from Google Slides API.",
            "enum": [
              "BLANK",
              "CAPTION_ONLY",
              "TITLE",
              "TITLE_AND_BODY",
              "TITLE_AND_TWO_COLUMNS",
              "TITLE_ONLY",
              "SECTION_HEADER",
              "SECTION_TITLE_AND_DESCRIPTION",
              "ONE_COLUMN_TEXT",
              "MAIN_POINT",
              "BIG_NUMBER"
            ],
            "title": "SlideLayout",
            "type": "string"
          }
        },
        "title": "add_slideArguments"
      }
    },
    {
      "name": "slides-slides_delete_object",
      "description": "\nDeletes a slide or an object in a slide from a Google Slides presentation\n\nArgs:\n    presentationId: The ID of the presentation (required)\n    objectId: The ID of the slide or object to delete (required)\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "self": {
            "title": "self",
            "type": "string"
          },
          "presentationId": {
            "title": "Presentationid",
            "type": "string"
          },
          "objectId": {
            "title": "Objectid",
            "type": "string"
          }
        },
        "required": [
          "self",
          "presentationId",
          "objectId"
        ],
        "title": "slides_delete_objectArguments"
      }
    },
    {
      "name": "slides-get_presentation_by_id",
      "description": "\nGet presentation content and metadata from Google Slides.\nUsing this tool is expensive. Use it ONLY if no other tool can perform what you'd like to achieve.\n\nArgs:\n    presentation_id: The ID of the presentation (required)\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "presentation_id": {
            "title": "Presentation Id",
            "type": "string"
          }
        },
        "required": [
          "presentation_id"
        ],
        "title": "get_presentation_by_idArguments"
      }
    },
    {
      "name": "slides-add_slide_line",
      "description": "Add a line to a Google Slides presentation with customizable properties",
      "inputSchema": {
        "type": "object",
        "properties": {
          "params": {
            "$ref": "#/$defs/AddLineInput"
          }
        },
        "required": [
          "params"
        ],
        "$defs": {
          "AddLineInput": {
            "properties": {
              "presentation_id": {
                "description": "The ID of the Google Slides presentation (found in the URL).",
                "title": "Presentation Id",
                "type": "string"
              },
              "page_id": {
                "description": "The ID of the slide page to add the line to.",
                "title": "Page Id",
                "type": "string"
              },
              "line_type": {
                "$ref": "#/$defs/LineType",
                "default": "STRAIGHT_LINE",
                "description": "The type of line to add to the slide."
              },
              "start_position": {
                "$ref": "#/$defs/Position",
                "description": "The starting position of the line on the slide."
              },
              "end_position": {
                "$ref": "#/$defs/Position",
                "description": "The ending position of the line on the slide."
              },
              "line_properties": {
                "$ref": "#/$defs/LineProperties",
                "description": "The properties configuration for the line."
              },
              "connect_shapes": {
                "default": false,
                "description": "Whether the line should try to connect to shapes at its start and end points.",
                "title": "Connect Shapes",
                "type": "boolean"
              },
              "object_id_prefix": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Optional prefix for the generated object ID. If not provided, a default prefix will be used.",
                "title": "Object Id Prefix"
              }
            },
            "required": [
              "presentation_id",
              "page_id",
              "start_position",
              "end_position",
              "line_properties"
            ],
            "title": "AddLineInput",
            "type": "object"
          },
          "ArrowStyle": {
            "enum": [
              "NONE",
              "STEALTH_ARROW",
              "FILL_ARROW",
              "FILL_CIRCLE",
              "FILL_SQUARE",
              "FILL_DIAMOND",
              "OPEN_ARROW",
              "OPEN_CIRCLE",
              "OPEN_SQUARE",
              "OPEN_DIAMOND"
            ],
            "title": "ArrowStyle",
            "type": "string"
          },
          "BorderDashStyle": {
            "enum": [
              "SOLID",
              "DOT",
              "DASH",
              "DASH_DOT",
              "LONG_DASH",
              "LONG_DASH_DOT"
            ],
            "title": "BorderDashStyle",
            "type": "string"
          },
          "Color": {
            "properties": {
              "type": {
                "$ref": "#/$defs/ColorType",
                "default": "RGB",
                "description": "The color type. Either RGB or HSL."
              },
              "red": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Red component value (0.0 to 1.0). Required for RGB type.",
                "title": "Red"
              },
              "green": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Green component value (0.0 to 1.0). Required for RGB type.",
                "title": "Green"
              },
              "blue": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Blue component value (0.0 to 1.0). Required for RGB type.",
                "title": "Blue"
              },
              "hue": {
                "anyOf": [
                  {
                    "maximum": 360,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Hue component value (0.0 to 360.0). Required for HSL type.",
                "title": "Hue"
              },
              "saturation": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Saturation component value (0.0 to 1.0). Required for HSL type.",
                "title": "Saturation"
              },
              "lightness": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Lightness component value (0.0 to 1.0). Required for HSL type.",
                "title": "Lightness"
              },
              "alpha": {
                "default": 1,
                "description": "Alpha (opacity) value (0.0 to 1.0). 1.0 is fully opaque.",
                "maximum": 1,
                "minimum": 0,
                "title": "Alpha",
                "type": "number"
              }
            },
            "title": "Color",
            "type": "object"
          },
          "ColorType": {
            "enum": [
              "RGB",
              "HSL"
            ],
            "title": "ColorType",
            "type": "string"
          },
          "LineConnection": {
            "properties": {
              "connection_site_index": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The index of the connection site on the connected page element.",
                "title": "Connection Site Index"
              },
              "connected_object_id": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The object ID of the connected page element.",
                "title": "Connected Object Id"
              }
            },
            "title": "LineConnection",
            "type": "object"
          },
          "LineFill": {
            "properties": {
              "color": {
                "$ref": "#/$defs/Color",
                "description": "The color of the line."
              }
            },
            "required": [
              "color"
            ],
            "title": "LineFill",
            "type": "object"
          },
          "LineProperties": {
            "properties": {
              "line_fill": {
                "$ref": "#/$defs/LineFill",
                "description": "The fill of the line."
              },
              "weight": {
                "default": 3,
                "description": "The thickness of the line in points.",
                "exclusiveMinimum": 0,
                "title": "Weight",
                "type": "number"
              },
              "dash_style": {
                "$ref": "#/$defs/BorderDashStyle",
                "default": "SOLID",
                "description": "The dash style of the line."
              },
              "start_arrow": {
                "$ref": "#/$defs/ArrowStyle",
                "default": "NONE",
                "description": "The style of the arrow at the start of the line."
              },
              "end_arrow": {
                "$ref": "#/$defs/ArrowStyle",
                "default": "NONE",
                "description": "The style of the arrow at the end of the line."
              },
              "start_connection": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/LineConnection"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The connection at the start of the line, if any."
              },
              "end_connection": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/LineConnection"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "The connection at the end of the line, if any."
              }
            },
            "required": [
              "line_fill"
            ],
            "title": "LineProperties",
            "type": "object"
          },
          "LineType": {
            "enum": [
              "STRAIGHT_CONNECTOR_1",
              "BENT_CONNECTOR_2",
              "BENT_CONNECTOR_3",
              "BENT_CONNECTOR_4",
              "BENT_CONNECTOR_5",
              "CURVED_CONNECTOR_2",
              "CURVED_CONNECTOR_3",
              "CURVED_CONNECTOR_4",
              "CURVED_CONNECTOR_5",
              "STRAIGHT_LINE"
            ],
            "title": "LineType",
            "type": "string"
          },
          "Position": {
            "properties": {
              "x": {
                "description": "The x-coordinate of the shape's top-left corner. The slide's top-left corner is at (0,0).",
                "title": "X",
                "type": "number"
              },
              "y": {
                "description": "The y-coordinate of the shape's top-left corner. The slide's top-left corner is at (0,0).",
                "title": "Y",
                "type": "number"
              },
              "unit": {
                "$ref": "#/$defs/Unit",
                "default": "PT",
                "description": "The unit of measurement for x and y coordinates."
              }
            },
            "required": [
              "x",
              "y"
            ],
            "title": "Position",
            "type": "object"
          },
          "Unit": {
            "enum": [
              "PT",
              "EMU"
            ],
            "title": "Unit",
            "type": "string"
          }
        },
        "title": "add_slide_lineArguments"
      }
    },
    {
      "name": "slides-create_blank_presentation_on_google_slides",
      "description": "\nCreate a presentation on google slides. The presentation will contain a single Title slide.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "req": {
            "$ref": "#/$defs/CreatePresentationRequest"
          }
        },
        "required": [
          "req"
        ],
        "$defs": {
          "CreatePresentationRequest": {
            "properties": {
              "title": {
                "description": "The title of the presentation",
                "title": "Title",
                "type": "string"
              }
            },
            "required": [
              "title"
            ],
            "title": "CreatePresentationRequest",
            "type": "object"
          }
        },
        "title": "create_blank_presentation_on_google_slidesArguments"
      }
    },
    {
      "name": "slides-get_page_by_id",
      "description": "\nGet page content and metadata from a presentation in Google Slides\nArgs:\n    presentation_id: The ID of the presentation (required)\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page_id": {
            "title": "Page Id",
            "type": "string"
          },
          "presentation_id": {
            "title": "Presentation Id",
            "type": "string"
          }
        },
        "required": [
          "page_id",
          "presentation_id"
        ],
        "title": "get_page_by_idArguments"
      }
    },
    {
      "name": "slides-add_text_to_object_on_page",
      "description": "\nadd text to title or body object on a page\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "req": {
            "$ref": "#/$defs/TextRequest"
          }
        },
        "required": [
          "req"
        ],
        "$defs": {
          "TextRequest": {
            "properties": {
              "presentationId": {
                "description": "The ID of the presentation (required)",
                "title": "Presentationid",
                "type": "string"
              },
              "object_id": {
                "description": "ID of object to put text in. E.g., 'title_objectId' or 'body_objectId' as returned from create_blank_page_on_google_slides() call",
                "title": "Object Id",
                "type": "string"
              },
              "text": {
                "description": "text to add to the page",
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "presentationId",
              "object_id",
              "text"
            ],
            "title": "TextRequest",
            "type": "object"
          }
        },
        "title": "add_text_to_object_on_pageArguments"
      }
    },
    {
      "name": "okta-unsuspend_user",
      "description": "Unsuspend a user in Okta",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The unique identifier of the Okta user"
          }
        },
        "required": [
          "userId"
        ]
      }
    },
    {
      "name": "okta-activate_user",
      "description": "Activate a user in Okta",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The unique identifier of the Okta user"
          },
          "sendEmail": {
            "type": "boolean",
            "description": "Whether to send an activation email (default: true)"
          }
        },
        "required": [
          "userId"
        ]
      }
    },
    {
      "name": "okta-get_user",
      "description": "Retrieve detailed user information from Okta by user ID",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The unique identifier of the Okta user"
          }
        },
        "required": [
          "userId"
        ]
      }
    },
    {
      "name": "okta-remove_user_from_group",
      "description": "Remove a user from a group in Okta",
      "inputSchema": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "ID of the group"
          },
          "userId": {
            "type": "string",
            "description": "ID of the user to remove from the group"
          }
        },
        "required": [
          "groupId",
          "userId"
        ]
      }
    },
    {
      "name": "okta-assign_user_to_group",
      "description": "Assign a user to a group in Okta",
      "inputSchema": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "ID of the group"
          },
          "userId": {
            "type": "string",
            "description": "ID of the user to assign to the group"
          }
        },
        "required": [
          "groupId",
          "userId"
        ]
      }
    },
    {
      "name": "okta-list_users",
      "description": "List users from Okta with optional filtering and pagination",
      "inputSchema": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Maximum number of users to return (default: 50, max: 200)"
          },
          "filter": {
            "type": "string",
            "description": "SCIM filter expression to filter users"
          },
          "search": {
            "type": "string",
            "description": "Free-form text search across multiple fields"
          },
          "after": {
            "type": "string",
            "description": "Cursor for pagination, obtained from previous response"
          },
          "sortBy": {
            "type": "string",
            "description": "Field to sort results by"
          },
          "sortOrder": {
            "type": "string",
            "description": "Sort order (asc or desc, default: asc)",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      }
    },
    {
      "name": "okta-create_group",
      "description": "Create a new group in Okta",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the group"
          },
          "description": {
            "type": "string",
            "description": "Description of the group (optional)"
          }
        },
        "required": [
          "name"
        ]
      }
    },
    {
      "name": "okta-suspend_user",
      "description": "Suspend a user in Okta",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The unique identifier of the Okta user"
          }
        },
        "required": [
          "userId"
        ]
      }
    },
    {
      "name": "okta-provision_applications",
      "description": "Provision application access for multiple users",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of user IDs to provision access for"
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Application IDs to provision"
          }
        },
        "required": [
          "userIds",
          "applicationIds"
        ]
      }
    },
    {
      "name": "okta-bulk_user_import",
      "description": "Import multiple users from a CSV string",
      "inputSchema": {
        "type": "object",
        "properties": {
          "csvData": {
            "type": "string",
            "description": "CSV string with user information (header row required)"
          },
          "activateUsers": {
            "type": "boolean",
            "description": "Whether to activate users immediately (default: false)",
            "default": false
          },
          "sendEmail": {
            "type": "boolean",
            "description": "Whether to send activation emails (default: true)",
            "default": true
          },
          "defaultGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Default group IDs to assign all imported users to",
            "default": []
          }
        },
        "required": [
          "csvData"
        ]
      }
    },
    {
      "name": "okta-list_group_users",
      "description": "List all users in a specific group",
      "inputSchema": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "ID of the group"
          },
          "limit": {
            "type": "number",
            "description": "Maximum number of users to return (default: 50, max: 200)"
          },
          "after": {
            "type": "string",
            "description": "Cursor for pagination, obtained from previous response"
          }
        },
        "required": [
          "groupId"
        ]
      }
    },
    {
      "name": "okta-run_onboarding_workflow",
      "description": "Run a complete onboarding workflow for multiple users from CSV data",
      "inputSchema": {
        "type": "object",
        "properties": {
          "csvData": {
            "type": "string",
            "description": "CSV string with user information"
          },
          "activateUsers": {
            "type": "boolean",
            "description": "Whether to activate users immediately (default: true)",
            "default": true
          },
          "defaultGroups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Default group IDs to assign all users to",
            "default": []
          },
          "groupMappings": {
            "type": "object",
            "description": "Mapping of user attributes to group IDs (e.g., {\"department\": {\"Engineering\": \"group1Id\"}})",
            "default": {}
          },
          "applicationIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Application IDs to provision for all users",
            "default": []
          },
          "sendWelcomeEmail": {
            "type": "boolean",
            "description": "Whether to send welcome emails (default: true)",
            "default": true
          }
        },
        "required": [
          "csvData"
        ]
      }
    },
    {
      "name": "okta-get_group",
      "description": "Get detailed information about a specific group",
      "inputSchema": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "ID of the group to retrieve"
          }
        },
        "required": [
          "groupId"
        ]
      }
    },
    {
      "name": "okta-create_user",
      "description": "Create a new user in Okta",
      "inputSchema": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "login": {
            "type": "string",
            "description": "User's login (defaults to email if not provided)"
          },
          "activate": {
            "type": "boolean",
            "description": "Whether to activate the user immediately (default: false)"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email"
        ]
      }
    },
    {
      "name": "okta-list_groups",
      "description": "List user groups from Okta with optional filtering and pagination",
      "inputSchema": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "description": "Maximum number of groups to return (default: 50, max: 200)"
          },
          "filter": {
            "type": "string",
            "description": "Filter expression for groups"
          },
          "search": {
            "type": "string",
            "description": "Free-form text search across group fields"
          },
          "after": {
            "type": "string",
            "description": "Cursor for pagination, obtained from previous response"
          },
          "sortBy": {
            "type": "string",
            "description": "Field to sort results by"
          },
          "sortOrder": {
            "type": "string",
            "description": "Sort order (asc or desc, default: asc)",
            "enum": [
              "asc",
              "desc"
            ]
          }
        }
      }
    },
    {
      "name": "okta-get_user_last_location",
      "description": "Retrieve the last known location and login information for a user from Okta system logs",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The unique identifier of the Okta user"
          }
        },
        "required": [
          "userId"
        ]
      }
    },
    {
      "name": "okta-delete_user",
      "description": "Delete a user from Okta (must be deactivated first)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The unique identifier of the Okta user"
          }
        },
        "required": [
          "userId"
        ]
      }
    },
    {
      "name": "okta-delete_group",
      "description": "Delete a group from Okta",
      "inputSchema": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "ID of the group to delete"
          }
        },
        "required": [
          "groupId"
        ]
      }
    },
    {
      "name": "okta-deactivate_user",
      "description": "Deactivate a user in Okta",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "The unique identifier of the Okta user"
          }
        },
        "required": [
          "userId"
        ]
      }
    },
    {
      "name": "okta-assign_users_to_groups",
      "description": "Assign multiple users to groups based on attributes",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of user IDs to assign"
          },
          "attributeMapping": {
            "type": "object",
            "description": "Mapping of user attributes to group IDs (e.g., {\"department\": {\"Engineering\": \"group1Id\", \"Sales\": \"group2Id\"}})"
          }
        },
        "required": [
          "userIds",
          "attributeMapping"
        ]
      }
    }
  ]
}
